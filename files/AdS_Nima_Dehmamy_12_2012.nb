(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 8.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       157,          7]
NotebookDataLength[    468843,       9956]
NotebookOptionsPosition[    459784,       9650]
NotebookOutlinePosition[    460164,       9666]
CellTagsIndexPosition[    460121,       9663]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell[BoxData[{
 RowBox[{
  RowBox[{"Y", "=", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"L", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"Cos", "[", "\[Tau]", "]"}], 
         RowBox[{"Cosh", "[", "\[Rho]", "]"}]}], ",", 
        RowBox[{
         RowBox[{"Sin", "[", "\[Phi]", "]"}], 
         RowBox[{"Sinh", "[", "\[Rho]", "]"}]}], ",", 
        RowBox[{
         RowBox[{"Cos", "[", "\[Phi]", "]"}], 
         RowBox[{"Sinh", "[", "\[Rho]", "]"}]}], ",", 
        RowBox[{
         RowBox[{"Sin", "[", "\[Tau]", "]"}], 
         RowBox[{"Cosh", "[", "\[Rho]", "]"}]}]}], "}"}]}], ";"}], "*)"}], 
   RowBox[{"(*", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{"L", "/", "z"}], " ", "t"}], ",", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"L", "^", "2"}], 
          RowBox[{"e", "^", "r"}]}], "+", 
         RowBox[{
          RowBox[{"e", "^", 
           RowBox[{"-", "r"}]}], 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"t", "^", "2"}], "-", 
            RowBox[{"z", "^", "2"}]}], ")"}]}]}], ")"}], "/", 
       RowBox[{"(", 
        RowBox[{"2", "z"}], ")"}]}], ",", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"L", "^", "2"}], 
          RowBox[{"e", "^", "r"}]}], "-", 
         RowBox[{
          RowBox[{"e", "^", 
           RowBox[{"-", "r"}]}], 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"t", "^", "2"}], "-", 
            RowBox[{"z", "^", "2"}]}], ")"}]}]}], ")"}], "/", 
       RowBox[{"(", 
        RowBox[{"2", "z"}], ")"}]}]}], "}"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"L", "/", "z"}], " ", "t"}], ",", 
     RowBox[{
      RowBox[{"L", "/", "z"}], " ", "x"}], ",", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"L", "^", "2"}], "+", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"t", "^", "2"}], "-", 
          RowBox[{"x", "^", "2"}], "-", 
          RowBox[{"z", "^", "2"}]}], ")"}]}], ")"}], "/", 
      RowBox[{"(", 
       RowBox[{"2", "z"}], ")"}]}], ",", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"L", "^", "2"}], "-", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"t", "^", "2"}], "-", 
          RowBox[{"x", "^", "2"}], "-", 
          RowBox[{"z", "^", "2"}]}], ")"}]}], ")"}], "/", 
      RowBox[{"(", 
       RowBox[{"2", "z"}], ")"}]}]}], "}"}]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"X", "=", 
    RowBox[{"(*", 
     RowBox[{"{", 
      RowBox[{"\[Tau]", ",", "\[Rho]", ",", "\[Phi]", ",", "L"}], "}"}], 
     "*)"}], 
    RowBox[{"{", 
     RowBox[{"t", ",", "x", ",", "z", ",", "L"}], "}"}]}], ";"}], 
  " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"pX", "=", 
   RowBox[{"(*", 
    RowBox[{"{", 
     RowBox[{"p\[Tau]", ",", "p\[Rho]", ",", "p\[Phi]", ",", "pL"}], "}"}], 
    "*)"}], 
   RowBox[{"{", 
    RowBox[{"pt", ",", "px", ",", "pz", ",", "pL"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"dX", "=", 
   RowBox[{"(*", 
    RowBox[{"{", 
     RowBox[{"d\[Tau]", ",", "d\[Rho]", ",", "d\[Phi]", ",", "dL"}], "}"}], 
    "*)"}], 
   RowBox[{"{", 
    RowBox[{"dt", ",", "dx", ",", " ", "dz", ",", "dL"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"act", "[", 
     RowBox[{"A_", ",", "B_"}], "]"}], ":=", 
    RowBox[{"(", 
     RowBox[{"A", "/.", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"pt", "\[Rule]", 
         RowBox[{"D", "[", 
          RowBox[{"B", ",", "t"}], "]"}]}], ",", 
        RowBox[{"px", "\[Rule]", 
         RowBox[{"D", "[", 
          RowBox[{"B", ",", "x"}], "]"}]}], ",", 
        RowBox[{"pz", "\[Rule]", 
         RowBox[{"D", "[", 
          RowBox[{"B", ",", "z"}], "]"}]}], ",", 
        RowBox[{"pL", "\[Rule]", 
         RowBox[{"D", "[", 
          RowBox[{"B", ",", "L"}], "]"}]}]}], "}"}]}], ")"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"X0", "=", 
    RowBox[{"X", "/.", 
     RowBox[{"L", "\[Rule]", "0"}]}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"\[Eta]A", "=", 
    RowBox[{"DiagonalMatrix", "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "1"}], ",", "1", ",", "1", ",", 
       RowBox[{"-", "1"}]}], "}"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"ds", "=", 
     RowBox[{
      RowBox[{"D", "[", 
       RowBox[{"Y", ",", 
        RowBox[{"{", 
         RowBox[{"{", 
          RowBox[{"t", ",", "xi", ",", "z"}], "}"}], "}"}]}], "]"}], ".", 
      RowBox[{"{", 
       RowBox[{"dt", ",", " ", "dxi", ",", "dz"}], "}"}]}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"ds2", "=", 
     RowBox[{"FullSimplify", "[", 
      RowBox[{"ds", ".", "\[Eta]A", ".", "ds"}], "]"}]}]}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"dsL", "=", 
   RowBox[{
    RowBox[{"D", "[", 
     RowBox[{"Y", ",", 
      RowBox[{"{", "X", "}"}]}], "]"}], ".", "dX"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ds2", "=", 
   RowBox[{"FullSimplify", "[", 
    RowBox[{"dsL", ".", "\[Eta]A", ".", "dsL"}], "]"}]}], 
  RowBox[{"(*", 
   RowBox[{"/.", 
    RowBox[{"dL", "\[Rule]", "0"}]}], "*)"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"J", "=", 
   RowBox[{"D", "[", 
    RowBox[{"Y", ",", 
     RowBox[{"{", "X", "}"}]}], "]"}]}], ";", 
  RowBox[{"Jinv", "=", 
   RowBox[{"FullSimplify", "[", 
    RowBox[{"Inverse", "[", "J", "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"\[Eta]L", "=", 
    RowBox[{"FullSimplify", "[", 
     RowBox[{
      RowBox[{"J", "\[Transpose]"}], ".", "\[Eta]A", ".", "J"}], "]"}]}], 
   ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"pdY", "=", 
   RowBox[{"(", 
    RowBox[{"pX", ".", "Jinv"}], ")"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"M", "=", 
   RowBox[{"FullSimplify", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"{", "pdY", "}"}], "\[Transpose]"}], ".", 
      RowBox[{"{", 
       RowBox[{"\[Eta]A", ".", "Y"}], "}"}]}], "-", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"{", "pdY", "}"}], "\[Transpose]"}], ".", 
        RowBox[{"{", 
         RowBox[{"\[Eta]A", ".", "Y"}], "}"}]}], ")"}], "\[Transpose]"}]}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"KL", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"z", "^", "2"}], "/", 
     RowBox[{"L", "^", "3"}]}], 
    RowBox[{"FullSimplify", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"X0", ".", "\[Eta]L", ".", "X0"}], " ", "pX"}], "-", 
      RowBox[{"2", 
       RowBox[{"\[Eta]L", ".", "X0"}], " ", 
       RowBox[{"X0", ".", "pX"}]}]}], "]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Act", "[", 
    RowBox[{"A_", ",", "B_"}], "]"}], ":=", 
   RowBox[{"FullSimplify", "[", 
    RowBox[{"act", "[", 
     RowBox[{"A", ",", "B"}], "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Comm", "[", 
    RowBox[{"A_", ",", "B_"}], "]"}], ":=", 
   RowBox[{"FullSimplify", "[", 
    RowBox[{
     RowBox[{"act", "[", 
      RowBox[{"A", ",", "B"}], "]"}], "-", 
     RowBox[{"act", "[", 
      RowBox[{"B", ",", "A"}], "]"}]}], "]"}]}], ";", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{"A", "/.", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"pt", "\[Rule]", 
          RowBox[{"D", "[", 
           RowBox[{"B", ",", "t"}], "]"}]}], ",", 
         RowBox[{"pz", "\[Rule]", 
          RowBox[{"D", "[", 
           RowBox[{"B", ",", "z"}], "]"}]}]}], "}"}]}], ")"}], "-", 
     RowBox[{"(", 
      RowBox[{"B", "/.", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"pt", "\[Rule]", 
          RowBox[{"D", "[", 
           RowBox[{"A", ",", "t"}], "]"}]}], ",", 
         RowBox[{"pz", "\[Rule]", 
          RowBox[{"D", "[", 
           RowBox[{"A", ",", "z"}], "]"}]}]}], "}"}]}], ")"}]}], "]"}], 
   "*)"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{"\[Eta]L", "//", "TraditionalForm"}]}], "\[IndentingNewLine]", 
 RowBox[{"KL", "//", "TraditionalForm"}], "\[IndentingNewLine]", 
 RowBox[{"M", "//", "TraditionalForm"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->CompressedData["
1:eJwtzl1Ik3EUx/F/Bo3MUmHMl60LXzLZgmhNELekaBOEgVY0diEJroGs3CCf
8m2LjYTFRMXCF2QypnjRlYS0oC4qWMJ2YzCCDZMFrmc5Mr3SlQN9fufvxeHD
9+IcTk2P6669iDHWIA38bNsvvd6Vu2W1vbgIS4bf1MNnac8lGMwrNTBTEb4K
G3/+08Fa54N2OD2a7YBncoP3oDqZ6iPd60/gsqHCDRVfmIf2ZL5xeFq48Bru
7byfhY7yb0GYjT8Pw8LqyCJ8KC5twPn74TR0XutX6CSTxgg5k5Eroep8qQq+
DAoNsNX6UUPmRS1s91ib4Svx098m3NnZI92KFWOzZEu0zgS7Os2d8LLrDilX
9DzVQ61sCHZHU1PQcGphBnY4LAuwZfNsCFbe/hMwSJapr0xCS+TrlFnSnLix
CBkLxIx2Se92mruWI5lpl7fsiPfbIhN1SBgj8wMkc1kmyAjXW/+9vBe6fpBM
n+HdduKHSjn5rpr7e6uKTIjcX7FiB/THSSYc8F4p8A4dnCP9/0nv1s0SMstl
g4+7H9F/XHY4y/XNwWP+2gmX
  "]],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   FractionBox[
    RowBox[{"L", " ", "t"}], "z"], ",", 
   FractionBox[
    RowBox[{"L", " ", "x"}], "z"], ",", 
   FractionBox[
    RowBox[{
     SuperscriptBox["L", "2"], "+", 
     SuperscriptBox["t", "2"], "-", 
     SuperscriptBox["x", "2"], "-", 
     SuperscriptBox["z", "2"]}], 
    RowBox[{"2", " ", "z"}]], ",", 
   FractionBox[
    RowBox[{
     SuperscriptBox["L", "2"], "-", 
     SuperscriptBox["t", "2"], "+", 
     SuperscriptBox["x", "2"], "+", 
     SuperscriptBox["z", "2"]}], 
    RowBox[{"2", " ", "z"}]]}], "}"}]], "Output",
 CellChangeTimes->{3.545257557859375*^9, 3.54525796484375*^9, 
  3.545862827125*^9, 3.54595489834375*^9, 3.545955182375*^9, 
  3.5459555248125*^9}],

Cell[BoxData[
 FractionBox[
  RowBox[{
   RowBox[{
    RowBox[{"-", 
     SuperscriptBox["dt", "2"]}], " ", 
    SuperscriptBox["L", "2"]}], "+", 
   RowBox[{
    SuperscriptBox["dx", "2"], " ", 
    SuperscriptBox["L", "2"]}], "+", 
   RowBox[{"2", " ", "dL", " ", "dt", " ", "L", " ", "t"}], "-", 
   RowBox[{"2", " ", "dL", " ", "dx", " ", "L", " ", "x"}], "+", 
   RowBox[{
    SuperscriptBox["dL", "2"], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", 
       SuperscriptBox["t", "2"]}], "+", 
      SuperscriptBox["x", "2"]}], ")"}]}], "+", 
   RowBox[{"dz", " ", "L", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"dz", " ", "L"}], "-", 
      RowBox[{"2", " ", "dL", " ", "z"}]}], ")"}]}]}], 
  SuperscriptBox["z", "2"]]], "Output",
 CellChangeTimes->{3.545257557859375*^9, 3.54525796484375*^9, 
  3.545862827125*^9, 3.54595489834375*^9, 3.545955182375*^9, 
  3.54595552484375*^9}],

Cell[BoxData[
 FormBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{"-", 
       FractionBox[
        SuperscriptBox["L", "2"], 
        SuperscriptBox["z", "2"]]}], "0", "0", 
      FractionBox[
       RowBox[{"L", " ", "t"}], 
       SuperscriptBox["z", "2"]]},
     {"0", 
      FractionBox[
       SuperscriptBox["L", "2"], 
       SuperscriptBox["z", "2"]], "0", 
      RowBox[{"-", 
       FractionBox[
        RowBox[{"L", " ", "x"}], 
        SuperscriptBox["z", "2"]]}]},
     {"0", "0", 
      FractionBox[
       SuperscriptBox["L", "2"], 
       SuperscriptBox["z", "2"]], 
      RowBox[{"-", 
       FractionBox["L", "z"]}]},
     {
      FractionBox[
       RowBox[{"L", " ", "t"}], 
       SuperscriptBox["z", "2"]], 
      RowBox[{"-", 
       FractionBox[
        RowBox[{"L", " ", "x"}], 
        SuperscriptBox["z", "2"]]}], 
      RowBox[{"-", 
       FractionBox["L", "z"]}], 
      FractionBox[
       RowBox[{
        SuperscriptBox["x", "2"], "-", 
        SuperscriptBox["t", "2"]}], 
       SuperscriptBox["z", "2"]]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}], 
  TraditionalForm]], "Output",
 CellChangeTimes->{3.545257557859375*^9, 3.54525796484375*^9, 
  3.545862827125*^9, 3.54595489834375*^9, 3.545955182375*^9, 
  3.5459555249375*^9}],

Cell[BoxData[
 FormBox[
  RowBox[{"{", 
   RowBox[{
    FractionBox[
     RowBox[{
      RowBox[{"pt", " ", 
       RowBox[{"(", 
        RowBox[{
         SuperscriptBox["t", "2"], "+", 
         SuperscriptBox["x", "2"], "+", 
         SuperscriptBox["z", "2"]}], ")"}]}], "+", 
      RowBox[{"2", " ", "t", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"px", " ", "x"}], "+", 
         RowBox[{"pz", " ", "z"}]}], ")"}]}]}], "L"], ",", 
    RowBox[{"-", 
     FractionBox[
      RowBox[{
       RowBox[{"2", " ", "x", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"pt", " ", "t"}], "+", 
          RowBox[{"pz", " ", "z"}]}], ")"}]}], "+", 
       RowBox[{"px", " ", 
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["t", "2"], "+", 
          SuperscriptBox["x", "2"], "-", 
          SuperscriptBox["z", "2"]}], ")"}]}]}], "L"]}], ",", 
    RowBox[{"-", 
     FractionBox[
      RowBox[{
       RowBox[{"2", " ", "z", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"pt", " ", "t"}], "+", 
          RowBox[{"px", " ", "x"}]}], ")"}]}], "+", 
       RowBox[{"pz", " ", 
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["t", "2"], "-", 
          SuperscriptBox["x", "2"], "+", 
          SuperscriptBox["z", "2"]}], ")"}]}]}], "L"]}], ",", 
    FractionBox[
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", 
         SuperscriptBox["t", "2"]}], "+", 
        SuperscriptBox["x", "2"], "+", 
        SuperscriptBox["z", "2"]}], ")"}], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"L", " ", "pL"}], "+", 
        RowBox[{"2", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"pt", " ", "t"}], "+", 
           RowBox[{"px", " ", "x"}], "+", 
           RowBox[{"pz", " ", "z"}]}], ")"}]}]}], ")"}]}], 
     SuperscriptBox["L", "2"]]}], "}"}], TraditionalForm]], "Output",
 CellChangeTimes->{3.545257557859375*^9, 3.54525796484375*^9, 
  3.545862827125*^9, 3.54595489834375*^9, 3.545955182375*^9, 
  3.545955525234375*^9}],

Cell[BoxData[
 FormBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"0", 
      RowBox[{
       RowBox[{"px", " ", "t"}], "+", 
       RowBox[{"pt", " ", "x"}]}], 
      FractionBox[
       RowBox[{
        RowBox[{"pt", " ", 
         SuperscriptBox["L", "2"]}], "-", 
        RowBox[{"2", " ", "t", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"px", " ", "x"}], "+", 
           RowBox[{"pz", " ", "z"}]}], ")"}]}], "-", 
        RowBox[{"pt", " ", 
         RowBox[{"(", 
          RowBox[{
           SuperscriptBox["t", "2"], "+", 
           SuperscriptBox["x", "2"], "+", 
           SuperscriptBox["z", "2"]}], ")"}]}]}], 
       RowBox[{"2", " ", "L"}]], 
      RowBox[{"-", 
       FractionBox[
        RowBox[{
         RowBox[{"pt", " ", 
          SuperscriptBox["L", "2"]}], "+", 
         RowBox[{"2", " ", "t", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"px", " ", "x"}], "+", 
            RowBox[{"pz", " ", "z"}]}], ")"}]}], "+", 
         RowBox[{"pt", " ", 
          RowBox[{"(", 
           RowBox[{
            SuperscriptBox["t", "2"], "+", 
            SuperscriptBox["x", "2"], "+", 
            SuperscriptBox["z", "2"]}], ")"}]}]}], 
        RowBox[{"2", " ", "L"}]]}]},
     {
      RowBox[{
       RowBox[{
        RowBox[{"-", "px"}], " ", "t"}], "-", 
       RowBox[{"pt", " ", "x"}]}], "0", 
      FractionBox[
       RowBox[{
        RowBox[{"px", " ", 
         SuperscriptBox["L", "2"]}], "+", 
        RowBox[{"2", " ", "x", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"pt", " ", "t"}], "+", 
           RowBox[{"pz", " ", "z"}]}], ")"}]}], "+", 
        RowBox[{"px", " ", 
         RowBox[{"(", 
          RowBox[{
           SuperscriptBox["t", "2"], "+", 
           SuperscriptBox["x", "2"], "-", 
           SuperscriptBox["z", "2"]}], ")"}]}]}], 
       RowBox[{"2", " ", "L"}]], 
      FractionBox[
       RowBox[{
        RowBox[{
         RowBox[{"-", "px"}], " ", 
         SuperscriptBox["L", "2"]}], "+", 
        RowBox[{"2", " ", "x", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"pt", " ", "t"}], "+", 
           RowBox[{"pz", " ", "z"}]}], ")"}]}], "+", 
        RowBox[{"px", " ", 
         RowBox[{"(", 
          RowBox[{
           SuperscriptBox["t", "2"], "+", 
           SuperscriptBox["x", "2"], "-", 
           SuperscriptBox["z", "2"]}], ")"}]}]}], 
       RowBox[{"2", " ", "L"}]]},
     {
      FractionBox[
       RowBox[{
        RowBox[{
         RowBox[{"-", "pt"}], " ", 
         SuperscriptBox["L", "2"]}], "+", 
        RowBox[{"2", " ", "t", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"px", " ", "x"}], "+", 
           RowBox[{"pz", " ", "z"}]}], ")"}]}], "+", 
        RowBox[{"pt", " ", 
         RowBox[{"(", 
          RowBox[{
           SuperscriptBox["t", "2"], "+", 
           SuperscriptBox["x", "2"], "+", 
           SuperscriptBox["z", "2"]}], ")"}]}]}], 
       RowBox[{"2", " ", "L"}]], 
      RowBox[{"-", 
       FractionBox[
        RowBox[{
         RowBox[{"px", " ", 
          SuperscriptBox["L", "2"]}], "+", 
         RowBox[{"2", " ", "x", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"pt", " ", "t"}], "+", 
            RowBox[{"pz", " ", "z"}]}], ")"}]}], "+", 
         RowBox[{"px", " ", 
          RowBox[{"(", 
           RowBox[{
            SuperscriptBox["t", "2"], "+", 
            SuperscriptBox["x", "2"], "-", 
            SuperscriptBox["z", "2"]}], ")"}]}]}], 
        RowBox[{"2", " ", "L"}]]}], "0", 
      RowBox[{
       RowBox[{"pt", " ", "t"}], "+", 
       RowBox[{"px", " ", "x"}], "+", 
       RowBox[{"pz", " ", "z"}]}]},
     {
      FractionBox[
       RowBox[{
        RowBox[{"pt", " ", 
         SuperscriptBox["L", "2"]}], "+", 
        RowBox[{"2", " ", "t", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"px", " ", "x"}], "+", 
           RowBox[{"pz", " ", "z"}]}], ")"}]}], "+", 
        RowBox[{"pt", " ", 
         RowBox[{"(", 
          RowBox[{
           SuperscriptBox["t", "2"], "+", 
           SuperscriptBox["x", "2"], "+", 
           SuperscriptBox["z", "2"]}], ")"}]}]}], 
       RowBox[{"2", " ", "L"}]], 
      FractionBox[
       RowBox[{
        RowBox[{"px", " ", 
         SuperscriptBox["L", "2"]}], "-", 
        RowBox[{"2", " ", "x", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"pt", " ", "t"}], "+", 
           RowBox[{"pz", " ", "z"}]}], ")"}]}], "-", 
        RowBox[{"px", " ", 
         RowBox[{"(", 
          RowBox[{
           SuperscriptBox["t", "2"], "+", 
           SuperscriptBox["x", "2"], "-", 
           SuperscriptBox["z", "2"]}], ")"}]}]}], 
       RowBox[{"2", " ", "L"}]], 
      RowBox[{
       RowBox[{
        RowBox[{"-", "pt"}], " ", "t"}], "-", 
       RowBox[{"px", " ", "x"}], "-", 
       RowBox[{"pz", " ", "z"}]}], "0"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}], 
  TraditionalForm]], "Output",
 CellChangeTimes->{3.545257557859375*^9, 3.54525796484375*^9, 
  3.545862827125*^9, 3.54595489834375*^9, 3.545955182375*^9, 
  3.545955525328125*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Y", ".", "\[Eta]A", ".", "Y"}]], "Input"],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", 
   FractionBox[
    RowBox[{
     SuperscriptBox["L", "2"], " ", 
     SuperscriptBox["t", "2"]}], 
    SuperscriptBox["z", "2"]]}], "+", 
  FractionBox[
   RowBox[{
    SuperscriptBox["L", "2"], " ", 
    SuperscriptBox["x", "2"]}], 
   SuperscriptBox["z", "2"]], "+", 
  FractionBox[
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{
      SuperscriptBox["L", "2"], "+", 
      SuperscriptBox["t", "2"], "-", 
      SuperscriptBox["x", "2"], "-", 
      SuperscriptBox["z", "2"]}], ")"}], "2"], 
   RowBox[{"4", " ", 
    SuperscriptBox["z", "2"]}]], "-", 
  FractionBox[
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{
      SuperscriptBox["L", "2"], "-", 
      SuperscriptBox["t", "2"], "+", 
      SuperscriptBox["x", "2"], "+", 
      SuperscriptBox["z", "2"]}], ")"}], "2"], 
   RowBox[{"4", " ", 
    SuperscriptBox["z", "2"]}]]}]], "Output",
 CellChangeTimes->{3.545955405765625*^9, 3.545955535078125*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Simplify", "[", 
  RowBox[{"Y", ".", "\[Eta]A", ".", "Y"}], "]"}]], "Input",
 CellChangeTimes->{{3.545954654796875*^9, 3.54595466296875*^9}, {
   3.545955193234375*^9, 3.54595519778125*^9}, 3.54595544778125*^9, 
   3.5459555448125*^9}],

Cell[BoxData[
 RowBox[{"-", 
  SuperscriptBox["L", "2"]}]], "Output",
 CellChangeTimes->{
  3.54595466346875*^9, 3.545955222078125*^9, 3.545955350265625*^9, {
   3.54595542384375*^9, 3.545955448390625*^9}, 3.5459555456875*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData["Y"], "Input",
 CellChangeTimes->{3.5459547089375*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"t", " ", 
    SqrtBox[
     RowBox[{"e", "+", 
      FractionBox[
       SuperscriptBox["L", "2"], 
       SuperscriptBox["z", "2"]]}]]}], ",", 
   FractionBox[
    RowBox[{
     SqrtBox[
      RowBox[{"e", "+", 
       FractionBox[
        SuperscriptBox["L", "2"], 
        SuperscriptBox["z", "2"]]}]], " ", 
     RowBox[{"(", 
      RowBox[{
       SuperscriptBox["L", "2"], "+", 
       SuperscriptBox["t", "2"], "-", 
       SuperscriptBox["z", "2"]}], ")"}]}], 
    RowBox[{"2", " ", "z"}]], ",", 
   FractionBox[
    RowBox[{
     SqrtBox[
      RowBox[{"e", "+", 
       FractionBox[
        SuperscriptBox["L", "2"], 
        SuperscriptBox["z", "2"]]}]], " ", 
     RowBox[{"(", 
      RowBox[{
       SuperscriptBox["L", "2"], "-", 
       SuperscriptBox["t", "2"], "+", 
       SuperscriptBox["z", "2"]}], ")"}]}], 
    RowBox[{"2", " ", "z"}]]}], "}"}]], "Output",
 CellChangeTimes->{3.545954709203125*^9, 3.545954829265625*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"DSolve", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"z", "'"}], "[", "r", "]"}], "\[Equal]", 
    FractionBox[
     SuperscriptBox["r", "2"], 
     RowBox[{
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"r", "-", "m"}], ")"}], "2"], "-", 
      RowBox[{
       SuperscriptBox["\[CapitalDelta]r", "2"], "/", "4"}]}]]}], ",", 
   RowBox[{"z", "[", "r", "]"}], ",", "r"}], "]"}]], "Input",
 CellChangeTimes->{{3.54586982128125*^9, 3.545869823890625*^9}, {
  3.545869870921875*^9, 3.545869964265625*^9}, {3.54587004834375*^9, 
  3.545870048859375*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"z", "[", "r", "]"}], "\[Rule]", 
    RowBox[{
     RowBox[{"C", "[", "1", "]"}], "+", 
     RowBox[{"4", " ", 
      RowBox[{"(", 
       RowBox[{
        FractionBox["r", "4"], "-", 
        FractionBox[
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"4", " ", 
             SuperscriptBox["m", "2"]}], "+", 
            SuperscriptBox["\[CapitalDelta]r", "2"]}], ")"}], " ", 
          RowBox[{"ArcTanh", "[", 
           FractionBox[
            RowBox[{"2", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "m"}], "+", "r"}], ")"}]}], "\[CapitalDelta]r"], 
           "]"}]}], 
         RowBox[{"8", " ", "\[CapitalDelta]r"}]], "+", 
        RowBox[{
         FractionBox["1", "4"], " ", "m", " ", 
         RowBox[{"Log", "[", 
          RowBox[{
           RowBox[{"4", " ", 
            SuperscriptBox["m", "2"]}], "-", 
           RowBox[{"8", " ", "m", " ", "r"}], "+", 
           RowBox[{"4", " ", 
            SuperscriptBox["r", "2"]}], "-", 
           SuperscriptBox["\[CapitalDelta]r", "2"]}], "]"}]}]}], ")"}]}]}]}], 
   "}"}], "}"}]], "Output",
 CellChangeTimes->{3.54586998834375*^9, 3.545870049703125*^9, 
  3.54595137359375*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Solve", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"c", "+", 
     RowBox[{"4", " ", 
      RowBox[{"(", 
       RowBox[{
        FractionBox["r", "4"], "-", 
        FractionBox[
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"4", " ", 
             SuperscriptBox["m", "2"]}], "+", 
            SuperscriptBox["\[CapitalDelta]r", "2"]}], ")"}], " ", 
          RowBox[{"ArcTanh", "[", 
           FractionBox[
            RowBox[{"2", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "m"}], "+", "r"}], ")"}]}], "\[CapitalDelta]r"], 
           "]"}]}], 
         RowBox[{"8", " ", "\[CapitalDelta]r"}]], "+", 
        RowBox[{
         FractionBox["1", "4"], " ", "m", " ", 
         RowBox[{"Log", "[", 
          RowBox[{
           RowBox[{"4", " ", 
            SuperscriptBox["m", "2"]}], "-", 
           RowBox[{"8", " ", "m", " ", "r"}], "+", 
           RowBox[{"4", " ", 
            SuperscriptBox["r", "2"]}], "-", 
           SuperscriptBox["\[CapitalDelta]r", "2"]}], "]"}]}]}], ")"}]}]}], 
    "\[Equal]", "z"}], ",", "r"}], "]"}]], "Input",
 CellChangeTimes->{{3.545951449875*^9, 3.5459514689375*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Solve", "::", "nsmet"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"This system cannot be solved with the methods available to \
Solve. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/Solve\\\", ButtonNote -> \
\\\"Solve::nsmet\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.545951480671875*^9}],

Cell[BoxData[
 RowBox[{"Solve", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"c", "+", 
     RowBox[{"4", " ", 
      RowBox[{"(", 
       RowBox[{
        FractionBox["r", "4"], "-", 
        FractionBox[
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"4", " ", 
             SuperscriptBox["m", "2"]}], "+", 
            SuperscriptBox["\[CapitalDelta]r", "2"]}], ")"}], " ", 
          RowBox[{"ArcTanh", "[", 
           FractionBox[
            RowBox[{"2", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "m"}], "+", "r"}], ")"}]}], "\[CapitalDelta]r"], 
           "]"}]}], 
         RowBox[{"8", " ", "\[CapitalDelta]r"}]], "+", 
        RowBox[{
         FractionBox["1", "4"], " ", "m", " ", 
         RowBox[{"Log", "[", 
          RowBox[{
           RowBox[{"4", " ", 
            SuperscriptBox["m", "2"]}], "-", 
           RowBox[{"8", " ", "m", " ", "r"}], "+", 
           RowBox[{"4", " ", 
            SuperscriptBox["r", "2"]}], "-", 
           SuperscriptBox["\[CapitalDelta]r", "2"]}], "]"}]}]}], ")"}]}]}], 
    "\[Equal]", "z"}], ",", "r"}], "]"}]], "Output",
 CellChangeTimes->{3.5459514806875*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"Simplify", "[", 
  RowBox[{
   RowBox[{"4", " ", 
    RowBox[{"(", 
     RowBox[{
      FractionBox["r", "4"], "-", 
      FractionBox[
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"4", " ", 
           SuperscriptBox["m", "2"]}], "+", 
          SuperscriptBox["\[CapitalDelta]r", "2"]}], ")"}], " ", 
        RowBox[{"ArcTanh", "[", 
         FractionBox[
          RowBox[{"2", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "m"}], "+", "r"}], ")"}]}], "\[CapitalDelta]r"], 
         "]"}]}], 
       RowBox[{"8", " ", "\[CapitalDelta]r"}]], "+", 
      RowBox[{
       FractionBox["1", "4"], " ", "m", " ", 
       RowBox[{"Log", "[", 
        RowBox[{
         RowBox[{"4", " ", 
          SuperscriptBox["m", "2"]}], "-", 
         RowBox[{"8", " ", "m", " ", "r"}], "+", 
         RowBox[{"4", " ", 
          SuperscriptBox["r", "2"]}], "-", 
         SuperscriptBox["\[CapitalDelta]r", "2"]}], "]"}]}]}], ")"}]}], "/.", 
   RowBox[{"\[CapitalDelta]r", "\[Rule]", 
    RowBox[{"2", 
     RowBox[{"Sqrt", "[", 
      RowBox[{
       SuperscriptBox["m", "2"], "-", 
       SuperscriptBox["Q", "2"]}], "]"}]}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.545870184375*^9, 3.545870248609375*^9}}],

Cell[BoxData[
 FractionBox[
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"-", "2"}], " ", 
       SuperscriptBox["m", "2"]}], "+", 
      SuperscriptBox["Q", "2"]}], ")"}], " ", 
    RowBox[{"ArcTanh", "[", 
     FractionBox[
      RowBox[{
       RowBox[{"-", "m"}], "+", "r"}], 
      SqrtBox[
       RowBox[{
        SuperscriptBox["m", "2"], "-", 
        SuperscriptBox["Q", "2"]}]]], "]"}]}], "+", 
   RowBox[{
    SqrtBox[
     RowBox[{
      SuperscriptBox["m", "2"], "-", 
      SuperscriptBox["Q", "2"]}]], " ", 
    RowBox[{"(", 
     RowBox[{"r", "+", 
      RowBox[{"m", " ", 
       RowBox[{"Log", "[", 
        RowBox[{"4", " ", 
         RowBox[{"(", 
          RowBox[{
           SuperscriptBox["Q", "2"], "-", 
           RowBox[{"2", " ", "m", " ", "r"}], "+", 
           SuperscriptBox["r", "2"]}], ")"}]}], "]"}]}]}], ")"}]}]}], 
  SqrtBox[
   RowBox[{
    SuperscriptBox["m", "2"], "-", 
    SuperscriptBox["Q", "2"]}]]]], "Input",
 CellChangeTimes->{{3.545870452296875*^9, 3.545870454328125*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    FractionBox[
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"4", " ", 
         SuperscriptBox["m", "2"]}], "+", 
        SuperscriptBox["\[CapitalDelta]r", "2"]}], ")"}], "  "}], 
     RowBox[{"2", "\[CapitalDelta]r"}]], 
    RowBox[{"ArcTanh", "[", 
     FractionBox[
      RowBox[{
       RowBox[{"-", "m"}], "+", "r"}], 
      RowBox[{"\[CapitalDelta]r", "/", "2"}]], "]"}]}], "+", "r", "+", 
   RowBox[{"m", " ", 
    RowBox[{"Log", "[", 
     RowBox[{"4", " ", "\[CapitalDelta]"}], "]"}]}], "+", "r", "+", 
   RowBox[{
    FractionBox[
     RowBox[{
      RowBox[{"(", " ", 
       RowBox[{
        SuperscriptBox["m", "2"], "+", 
        RowBox[{
         SuperscriptBox["\[CapitalDelta]r", "2"], "/", "4"}]}], ")"}], "  "}],
      "\[CapitalDelta]r"], 
    RowBox[{"Log", "[", 
     RowBox[{"-", 
      FractionBox[
       RowBox[{"r", "-", 
        SubscriptBox["r", "-"]}], 
       RowBox[{"r", "-", 
        SubscriptBox["r", "+"]}]]}], "]"}]}], "+", 
   RowBox[{"m", " ", 
    RowBox[{"Log", "[", 
     RowBox[{"4", " ", "\[CapitalDelta]"}], "]"}]}]}], "//", 
  "TraditionalForm"}]], "Input",
 CellChangeTimes->{{3.545870464859375*^9, 3.545870527578125*^9}, {
  3.54587058865625*^9, 3.545870622046875*^9}, {3.545870896828125*^9, 
  3.545871071859375*^9}, {3.54587114621875*^9, 3.54587120003125*^9}, {
  3.54587155325*^9, 3.54587156496875*^9}}],

Cell[BoxData[
 FormBox[
  RowBox[{
   FractionBox[
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       FractionBox[
        SuperscriptBox["\[CapitalDelta]r", "2"], "4"], "+", 
       SuperscriptBox["m", "2"]}], ")"}], " ", 
     RowBox[{"log", "(", 
      RowBox[{"-", 
       FractionBox[
        RowBox[{"r", "-", 
         SubscriptBox["r", "-"]}], 
        RowBox[{"r", "-", 
         SubscriptBox["r", "+"]}]]}], ")"}]}], "\[CapitalDelta]r"], "+", 
   FractionBox[
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       SuperscriptBox["\[CapitalDelta]r", "2"], "+", 
       RowBox[{"4", " ", 
        SuperscriptBox["m", "2"]}]}], ")"}], " ", 
     RowBox[{
      SuperscriptBox["tanh", 
       RowBox[{"-", "1"}]], "(", 
      FractionBox[
       RowBox[{"2", " ", 
        RowBox[{"(", 
         RowBox[{"r", "-", "m"}], ")"}]}], "\[CapitalDelta]r"], ")"}]}], 
    RowBox[{"2", " ", "\[CapitalDelta]r"}]], "+", 
   RowBox[{"2", " ", "m", " ", 
    RowBox[{"log", "(", 
     RowBox[{"4", " ", "\[CapitalDelta]"}], ")"}]}], "+", 
   RowBox[{"2", " ", "r"}]}], TraditionalForm]], "Output",
 CellChangeTimes->{{3.545871180703125*^9, 3.5458712050625*^9}, 
   3.54587156709375*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Simplify", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     RowBox[{"1", "+", "bb"}], ")"}], "/", 
    RowBox[{"(", 
     RowBox[{"1", "-", "bb"}], ")"}]}], "/.", 
   RowBox[{"bb", "->", 
    FractionBox[
     RowBox[{
      RowBox[{"-", "m"}], "+", "r"}], 
     RowBox[{"\[CapitalDelta]r", "/", "2"}]]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.54587071475*^9, 3.54587075003125*^9}}],

Cell[BoxData[
 FractionBox[
  RowBox[{
   RowBox[{
    RowBox[{"-", "2"}], " ", "m"}], "+", 
   RowBox[{"2", " ", "r"}], "+", "\[CapitalDelta]r"}], 
  RowBox[{
   RowBox[{"2", " ", "m"}], "-", 
   RowBox[{"2", " ", "r"}], "+", "\[CapitalDelta]r"}]]], "Output",
 CellChangeTimes->{{3.545870739703125*^9, 3.545870750453125*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"%", "//", "TraditionalForm"}]], "Input",
 CellChangeTimes->{{3.545870062140625*^9, 3.545870066921875*^9}}],

Cell[BoxData[
 FormBox[
  RowBox[{"{", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"z", "(", "r", ")"}], "\[Rule]", 
     RowBox[{
      SubscriptBox[
       TagBox["c",
        C], "1"], "+", 
      RowBox[{"4", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          FractionBox["1", "4"], " ", "m", " ", 
          RowBox[{"log", "(", 
           RowBox[{
            RowBox[{"-", 
             SuperscriptBox["\[CapitalDelta]r", "2"]}], "+", 
            RowBox[{"4", " ", 
             SuperscriptBox["m", "2"]}], "-", 
            RowBox[{"8", " ", "m", " ", "r"}], "+", 
            RowBox[{"4", " ", 
             SuperscriptBox["r", "2"]}]}], ")"}]}], "-", 
         FractionBox[
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             SuperscriptBox["\[CapitalDelta]r", "2"], "+", 
             RowBox[{"4", " ", 
              SuperscriptBox["m", "2"]}]}], ")"}], " ", 
           RowBox[{
            SuperscriptBox["tanh", 
             RowBox[{"-", "1"}]], "(", 
            FractionBox[
             RowBox[{"2", " ", 
              RowBox[{"(", 
               RowBox[{"r", "-", "m"}], ")"}]}], "\[CapitalDelta]r"], ")"}]}], 
          RowBox[{"8", " ", "\[CapitalDelta]r"}]], "+", 
         FractionBox["r", "4"]}], ")"}]}]}]}], "}"}], "}"}], 
  TraditionalForm]], "Output",
 CellChangeTimes->{3.5458700693125*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[Eta]Inv", "=", 
  RowBox[{"FullSimplify", "[", 
   RowBox[{"Inverse", "[", "\[Eta]L", "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.545258882015625*^9, 3.545258931375*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", 
      FractionBox[
       RowBox[{
        SuperscriptBox["t", "2"], "+", 
        SuperscriptBox["z", "2"]}], 
       SuperscriptBox["L", "2"]]}], ",", 
     RowBox[{"-", 
      FractionBox[
       RowBox[{"t", " ", "x"}], 
       SuperscriptBox["L", "2"]]}], ",", 
     RowBox[{"-", 
      FractionBox[
       RowBox[{"t", " ", "z"}], 
       SuperscriptBox["L", "2"]]}], ",", 
     RowBox[{"-", 
      FractionBox["t", "L"]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", 
      FractionBox[
       RowBox[{"t", " ", "x"}], 
       SuperscriptBox["L", "2"]]}], ",", 
     FractionBox[
      RowBox[{
       RowBox[{"-", 
        SuperscriptBox["x", "2"]}], "+", 
       SuperscriptBox["z", "2"]}], 
      SuperscriptBox["L", "2"]], ",", 
     RowBox[{"-", 
      FractionBox[
       RowBox[{"x", " ", "z"}], 
       SuperscriptBox["L", "2"]]}], ",", 
     RowBox[{"-", 
      FractionBox["x", "L"]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", 
      FractionBox[
       RowBox[{"t", " ", "z"}], 
       SuperscriptBox["L", "2"]]}], ",", 
     RowBox[{"-", 
      FractionBox[
       RowBox[{"x", " ", "z"}], 
       SuperscriptBox["L", "2"]]}], ",", "0", ",", 
     RowBox[{"-", 
      FractionBox["z", "L"]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", 
      FractionBox["t", "L"]}], ",", 
     RowBox[{"-", 
      FractionBox["x", "L"]}], ",", 
     RowBox[{"-", 
      FractionBox["z", "L"]}], ",", 
     RowBox[{"-", "1"}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.54525890425*^9, 3.545258932640625*^9}}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"act", "[", 
     RowBox[{"A_", ",", "B_"}], "]"}], ":=", 
    RowBox[{"(", 
     RowBox[{"A", "/.", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"pt", "\[Rule]", 
         RowBox[{"D", "[", 
          RowBox[{"B", ",", "t"}], "]"}]}], ",", 
        RowBox[{"px", "\[Rule]", 
         RowBox[{"D", "[", 
          RowBox[{"B", ",", "x"}], "]"}]}], ",", 
        RowBox[{"pz", "\[Rule]", 
         RowBox[{"D", "[", 
          RowBox[{"B", ",", "z"}], "]"}]}], ",", 
        RowBox[{"pL", "\[Rule]", 
         RowBox[{"D", "[", 
          RowBox[{"B", ",", "L"}], "]"}]}]}], "}"}]}], ")"}]}], ";"}], 
  "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.545260542484375*^9, 3.545260542578125*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"%", "//", "TraditionalForm"}]], "Input",
 CellChangeTimes->{{3.545258906*^9, 3.545258915125*^9}}],

Cell[BoxData[
 FormBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{"-", 
       FractionBox[
        RowBox[{
         SuperscriptBox["t", "2"], "+", 
         SuperscriptBox["z", "2"]}], 
        SuperscriptBox["L", "2"]]}], 
      RowBox[{"-", 
       FractionBox[
        RowBox[{"t", " ", "x"}], 
        SuperscriptBox["L", "2"]]}], 
      RowBox[{"-", 
       FractionBox[
        RowBox[{"t", " ", "z"}], 
        SuperscriptBox["L", "2"]]}], 
      RowBox[{"-", 
       FractionBox["t", "L"]}]},
     {
      RowBox[{"-", 
       FractionBox[
        RowBox[{"t", " ", "x"}], 
        SuperscriptBox["L", "2"]]}], 
      FractionBox[
       RowBox[{
        SuperscriptBox["z", "2"], "-", 
        SuperscriptBox["x", "2"]}], 
       SuperscriptBox["L", "2"]], 
      RowBox[{"-", 
       FractionBox[
        RowBox[{"x", " ", "z"}], 
        SuperscriptBox["L", "2"]]}], 
      RowBox[{"-", 
       FractionBox["x", "L"]}]},
     {
      RowBox[{"-", 
       FractionBox[
        RowBox[{"t", " ", "z"}], 
        SuperscriptBox["L", "2"]]}], 
      RowBox[{"-", 
       FractionBox[
        RowBox[{"x", " ", "z"}], 
        SuperscriptBox["L", "2"]]}], "0", 
      RowBox[{"-", 
       FractionBox["z", "L"]}]},
     {
      RowBox[{"-", 
       FractionBox["t", "L"]}], 
      RowBox[{"-", 
       FractionBox["x", "L"]}], 
      RowBox[{"-", 
       FractionBox["z", "L"]}], 
      RowBox[{"-", "1"}]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}], 
  TraditionalForm]], "Output",
 CellChangeTimes->{3.545258915796875*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"act", "[", 
  RowBox[{"pX", ",", 
   RowBox[{"A", "[", "X", "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.545259148578125*^9, 3.54525920440625*^9}, {
  3.545259251546875*^9, 3.545259260484375*^9}, {3.545262256*^9, 
  3.545262258796875*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    SuperscriptBox["A", 
     TagBox[
      RowBox[{"(", 
       RowBox[{"{", 
        RowBox[{"1", ",", "0", ",", "0", ",", "0"}], "}"}], ")"}],
      Derivative],
     MultilineFunction->None], "[", 
    RowBox[{"{", 
     RowBox[{"t", ",", "x", ",", "z", ",", "L"}], "}"}], "]"}], ",", 
   RowBox[{
    SuperscriptBox["A", 
     TagBox[
      RowBox[{"(", 
       RowBox[{"{", 
        RowBox[{"0", ",", "1", ",", "0", ",", "0"}], "}"}], ")"}],
      Derivative],
     MultilineFunction->None], "[", 
    RowBox[{"{", 
     RowBox[{"t", ",", "x", ",", "z", ",", "L"}], "}"}], "]"}], ",", 
   RowBox[{
    SuperscriptBox["A", 
     TagBox[
      RowBox[{"(", 
       RowBox[{"{", 
        RowBox[{"0", ",", "0", ",", "1", ",", "0"}], "}"}], ")"}],
      Derivative],
     MultilineFunction->None], "[", 
    RowBox[{"{", 
     RowBox[{"t", ",", "x", ",", "z", ",", "L"}], "}"}], "]"}], ",", 
   RowBox[{
    SuperscriptBox["A", 
     TagBox[
      RowBox[{"(", 
       RowBox[{"{", 
        RowBox[{"0", ",", "0", ",", "0", ",", "1"}], "}"}], ")"}],
      Derivative],
     MultilineFunction->None], "[", 
    RowBox[{"{", 
     RowBox[{"t", ",", "x", ",", "z", ",", "L"}], "}"}], "]"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{
  3.545259206421875*^9, {3.5452592563125*^9, 3.545259261015625*^9}, 
   3.54526001496875*^9, 3.545260566125*^9, 3.54526225971875*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Act", "[", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"Det", "[", "\[Eta]L", "]"}], 
      RowBox[{"\[Eta]Inv", ".", "pX"}]}], ")"}], ",", 
    RowBox[{"A", "[", "X", "]"}]}], "]"}], "[", 
  RowBox[{"[", "2", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.54525941559375*^9, 3.5452594484375*^9}, {
  3.545262277140625*^9, 3.545262297140625*^9}}],

Cell[BoxData[
 RowBox[{"-", 
  RowBox[{
   FractionBox["1", 
    SuperscriptBox["z", "6"]], 
   RowBox[{
    SuperscriptBox["L", "4"], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"L", " ", "x", " ", 
       RowBox[{
        SuperscriptBox["A", 
         TagBox[
          RowBox[{"(", 
           RowBox[{"{", 
            RowBox[{"0", ",", "0", ",", "0", ",", "1"}], "}"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"{", 
         RowBox[{"t", ",", "x", ",", "z", ",", "L"}], "}"}], "]"}]}], "+", 
      RowBox[{"x", " ", "z", " ", 
       RowBox[{
        SuperscriptBox["A", 
         TagBox[
          RowBox[{"(", 
           RowBox[{"{", 
            RowBox[{"0", ",", "0", ",", "1", ",", "0"}], "}"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"{", 
         RowBox[{"t", ",", "x", ",", "z", ",", "L"}], "}"}], "]"}]}], "+", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"x", "-", "z"}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{"x", "+", "z"}], ")"}], " ", 
       RowBox[{
        SuperscriptBox["A", 
         TagBox[
          RowBox[{"(", 
           RowBox[{"{", 
            RowBox[{"0", ",", "1", ",", "0", ",", "0"}], "}"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"{", 
         RowBox[{"t", ",", "x", ",", "z", ",", "L"}], "}"}], "]"}]}], "+", 
      RowBox[{"t", " ", "x", " ", 
       RowBox[{
        SuperscriptBox["A", 
         TagBox[
          RowBox[{"(", 
           RowBox[{"{", 
            RowBox[{"1", ",", "0", ",", "0", ",", "0"}], "}"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"{", 
         RowBox[{"t", ",", "x", ",", "z", ",", "L"}], "}"}], "]"}]}]}], 
     ")"}]}]}]}]], "Output",
 CellChangeTimes->{{3.54525942496875*^9, 3.54525944896875*^9}, {
  3.545262278859375*^9, 3.5452622989375*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Det", "[", "\[Eta]L", "]"}]], "Input"],

Cell[BoxData[
 FractionBox[
  SuperscriptBox["L", "6"], 
  SuperscriptBox["z", "6"]]], "Output",
 CellChangeTimes->{3.54525958475*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Lapl", "=", 
  RowBox[{"FullSimplify", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"z", "^", "3"}], "/", 
     RowBox[{"L", "^", "3"}]}], 
    RowBox[{"Sum", "[", " ", 
     RowBox[{
      RowBox[{"act", "[", 
       RowBox[{
        RowBox[{"pX", "[", 
         RowBox[{"[", "i", "]"}], "]"}], ",", 
        RowBox[{
         RowBox[{"act", "[", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             FractionBox[
              SuperscriptBox["L", "3"], 
              SuperscriptBox["z", "3"]], 
             RowBox[{"\[Eta]Inv", ".", "pX"}]}], ")"}], ",", 
           RowBox[{"A", "[", "X", "]"}]}], "]"}], "[", 
         RowBox[{"[", "i", "]"}], "]"}]}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "1", ",", "4"}], "}"}]}], "]"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.545258975875*^9, 3.545259124375*^9}, {
  3.545259236703125*^9, 3.545259237859375*^9}, {3.54525929315625*^9, 
  3.5452593748125*^9}, {3.545259454734375*^9, 3.545259459*^9}, {
  3.545259591296875*^9, 3.545259632640625*^9}, {3.545259841375*^9, 
  3.545259883234375*^9}, {3.545260512796875*^9, 3.545260514796875*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", 
   RowBox[{
    SuperscriptBox["A", 
     TagBox[
      RowBox[{"(", 
       RowBox[{"{", 
        RowBox[{"0", ",", "0", ",", "0", ",", "2"}], "}"}], ")"}],
      Derivative],
     MultilineFunction->None], "[", 
    RowBox[{"{", 
     RowBox[{"t", ",", "x", ",", "z", ",", "L"}], "}"}], "]"}]}], "-", 
  RowBox[{
   FractionBox["1", 
    SuperscriptBox["L", "2"]], 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"3", " ", "L", " ", 
      RowBox[{
       SuperscriptBox["A", 
        TagBox[
         RowBox[{"(", 
          RowBox[{"{", 
           RowBox[{"0", ",", "0", ",", "0", ",", "1"}], "}"}], ")"}],
         Derivative],
        MultilineFunction->None], "[", 
       RowBox[{"{", 
        RowBox[{"t", ",", "x", ",", "z", ",", "L"}], "}"}], "]"}]}], "+", 
     RowBox[{"4", " ", "z", " ", 
      RowBox[{
       SuperscriptBox["A", 
        TagBox[
         RowBox[{"(", 
          RowBox[{"{", 
           RowBox[{"0", ",", "0", ",", "1", ",", "0"}], "}"}], ")"}],
         Derivative],
        MultilineFunction->None], "[", 
       RowBox[{"{", 
        RowBox[{"t", ",", "x", ",", "z", ",", "L"}], "}"}], "]"}]}], "+", 
     RowBox[{"2", " ", "L", " ", "z", " ", 
      RowBox[{
       SuperscriptBox["A", 
        TagBox[
         RowBox[{"(", 
          RowBox[{"{", 
           RowBox[{"0", ",", "0", ",", "1", ",", "1"}], "}"}], ")"}],
         Derivative],
        MultilineFunction->None], "[", 
       RowBox[{"{", 
        RowBox[{"t", ",", "x", ",", "z", ",", "L"}], "}"}], "]"}]}], "+", 
     RowBox[{"3", " ", "x", " ", 
      RowBox[{
       SuperscriptBox["A", 
        TagBox[
         RowBox[{"(", 
          RowBox[{"{", 
           RowBox[{"0", ",", "1", ",", "0", ",", "0"}], "}"}], ")"}],
         Derivative],
        MultilineFunction->None], "[", 
       RowBox[{"{", 
        RowBox[{"t", ",", "x", ",", "z", ",", "L"}], "}"}], "]"}]}], "+", 
     RowBox[{"2", " ", "L", " ", "x", " ", 
      RowBox[{
       SuperscriptBox["A", 
        TagBox[
         RowBox[{"(", 
          RowBox[{"{", 
           RowBox[{"0", ",", "1", ",", "0", ",", "1"}], "}"}], ")"}],
         Derivative],
        MultilineFunction->None], "[", 
       RowBox[{"{", 
        RowBox[{"t", ",", "x", ",", "z", ",", "L"}], "}"}], "]"}]}], "+", 
     RowBox[{"2", " ", "x", " ", "z", " ", 
      RowBox[{
       SuperscriptBox["A", 
        TagBox[
         RowBox[{"(", 
          RowBox[{"{", 
           RowBox[{"0", ",", "1", ",", "1", ",", "0"}], "}"}], ")"}],
         Derivative],
        MultilineFunction->None], "[", 
       RowBox[{"{", 
        RowBox[{"t", ",", "x", ",", "z", ",", "L"}], "}"}], "]"}]}], "+", 
     RowBox[{
      SuperscriptBox["x", "2"], " ", 
      RowBox[{
       SuperscriptBox["A", 
        TagBox[
         RowBox[{"(", 
          RowBox[{"{", 
           RowBox[{"0", ",", "2", ",", "0", ",", "0"}], "}"}], ")"}],
         Derivative],
        MultilineFunction->None], "[", 
       RowBox[{"{", 
        RowBox[{"t", ",", "x", ",", "z", ",", "L"}], "}"}], "]"}]}], "-", 
     RowBox[{
      SuperscriptBox["z", "2"], " ", 
      RowBox[{
       SuperscriptBox["A", 
        TagBox[
         RowBox[{"(", 
          RowBox[{"{", 
           RowBox[{"0", ",", "2", ",", "0", ",", "0"}], "}"}], ")"}],
         Derivative],
        MultilineFunction->None], "[", 
       RowBox[{"{", 
        RowBox[{"t", ",", "x", ",", "z", ",", "L"}], "}"}], "]"}]}], "+", 
     RowBox[{"3", " ", "t", " ", 
      RowBox[{
       SuperscriptBox["A", 
        TagBox[
         RowBox[{"(", 
          RowBox[{"{", 
           RowBox[{"1", ",", "0", ",", "0", ",", "0"}], "}"}], ")"}],
         Derivative],
        MultilineFunction->None], "[", 
       RowBox[{"{", 
        RowBox[{"t", ",", "x", ",", "z", ",", "L"}], "}"}], "]"}]}], "+", 
     RowBox[{"2", " ", "L", " ", "t", " ", 
      RowBox[{
       SuperscriptBox["A", 
        TagBox[
         RowBox[{"(", 
          RowBox[{"{", 
           RowBox[{"1", ",", "0", ",", "0", ",", "1"}], "}"}], ")"}],
         Derivative],
        MultilineFunction->None], "[", 
       RowBox[{"{", 
        RowBox[{"t", ",", "x", ",", "z", ",", "L"}], "}"}], "]"}]}], "+", 
     RowBox[{"2", " ", "t", " ", "z", " ", 
      RowBox[{
       SuperscriptBox["A", 
        TagBox[
         RowBox[{"(", 
          RowBox[{"{", 
           RowBox[{"1", ",", "0", ",", "1", ",", "0"}], "}"}], ")"}],
         Derivative],
        MultilineFunction->None], "[", 
       RowBox[{"{", 
        RowBox[{"t", ",", "x", ",", "z", ",", "L"}], "}"}], "]"}]}], "+", 
     RowBox[{"2", " ", "t", " ", "x", " ", 
      RowBox[{
       SuperscriptBox["A", 
        TagBox[
         RowBox[{"(", 
          RowBox[{"{", 
           RowBox[{"1", ",", "1", ",", "0", ",", "0"}], "}"}], ")"}],
         Derivative],
        MultilineFunction->None], "[", 
       RowBox[{"{", 
        RowBox[{"t", ",", "x", ",", "z", ",", "L"}], "}"}], "]"}]}]}], 
    ")"}]}], "-", 
  FractionBox[
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      SuperscriptBox["t", "2"], "+", 
      SuperscriptBox["z", "2"]}], ")"}], " ", 
    RowBox[{
     SuperscriptBox["A", 
      TagBox[
       RowBox[{"(", 
        RowBox[{"{", 
         RowBox[{"2", ",", "0", ",", "0", ",", "0"}], "}"}], ")"}],
       Derivative],
      MultilineFunction->None], "[", 
     RowBox[{"{", 
      RowBox[{"t", ",", "x", ",", "z", ",", "L"}], "}"}], "]"}]}], 
   SuperscriptBox["L", "2"]]}]], "Output",
 CellChangeTimes->{{3.5452593475*^9, 3.545259363203125*^9}, 
   3.545259421515625*^9, 3.545259466875*^9, 3.54525964278125*^9, {
   3.5452598524375*^9, 3.54525985734375*^9}, 3.54525988884375*^9, 
   3.54526003271875*^9, 3.545260574921875*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  SubscriptBox["\[PartialD]", 
   RowBox[{"{", 
    RowBox[{"t", ",", "2"}], "}"}]], 
  RowBox[{"A", "[", "X", "]"}]}]], "Input"],

Cell[BoxData[
 RowBox[{
  SuperscriptBox["A", 
   TagBox[
    RowBox[{"(", 
     RowBox[{"{", 
      RowBox[{"2", ",", "0", ",", "0", ",", "0"}], "}"}], ")"}],
    Derivative],
   MultilineFunction->None], "[", 
  RowBox[{"{", 
   RowBox[{"t", ",", "x", ",", "z", ",", "L"}], "}"}], "]"}]], "Output",
 CellChangeTimes->{3.545263375484375*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Simplify", "[", 
  RowBox[{"Lapl", "-", 
   RowBox[{
    FractionBox[
     SuperscriptBox["z", "2"], 
     SuperscriptBox["L", "2"]], 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", 
       RowBox[{
        SubscriptBox["\[PartialD]", 
         RowBox[{"{", 
          RowBox[{"t", ",", "2"}], "}"}]], 
        RowBox[{"A", "[", "X", "]"}]}]}], "+", 
      RowBox[{
       SubscriptBox["\[PartialD]", 
        RowBox[{"{", 
         RowBox[{"x", ",", "2"}], "}"}]], 
       RowBox[{"A", "[", "X", "]"}]}]}], ")"}]}], "+", 
   RowBox[{
    FractionBox["1", 
     SuperscriptBox["L", "2"]], 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"act", "[", 
       RowBox[{
        RowBox[{"X", ".", "pX"}], ",", 
        RowBox[{"act", "[", 
         RowBox[{
          RowBox[{"X", ".", "pX"}], ",", 
          RowBox[{"A", "[", "X", "]"}]}], "]"}]}], "]"}], "+", 
      RowBox[{"2", 
       RowBox[{"act", "[", 
        RowBox[{
         RowBox[{"X", ".", "pX"}], ",", 
         RowBox[{"A", "[", "X", "]"}]}], "]"}]}]}], ")"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.5452632085*^9, 3.545263319765625*^9}, {
  3.54526334996875*^9, 3.54526335378125*^9}, {3.5452633845625*^9, 
  3.54526349459375*^9}, {3.545263550828125*^9, 3.5452635896875*^9}, {
  3.545263621078125*^9, 3.54526368459375*^9}}],

Cell[BoxData[
 FractionBox[
  RowBox[{"z", " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", 
      RowBox[{
       SuperscriptBox["A", 
        TagBox[
         RowBox[{"(", 
          RowBox[{"{", 
           RowBox[{"0", ",", "0", ",", "1", ",", "0"}], "}"}], ")"}],
         Derivative],
        MultilineFunction->None], "[", 
       RowBox[{"{", 
        RowBox[{"t", ",", "x", ",", "z", ",", "L"}], "}"}], "]"}]}], "+", 
     RowBox[{"z", " ", 
      RowBox[{
       SuperscriptBox["A", 
        TagBox[
         RowBox[{"(", 
          RowBox[{"{", 
           RowBox[{"0", ",", "0", ",", "2", ",", "0"}], "}"}], ")"}],
         Derivative],
        MultilineFunction->None], "[", 
       RowBox[{"{", 
        RowBox[{"t", ",", "x", ",", "z", ",", "L"}], "}"}], "]"}]}]}], 
    ")"}]}], 
  SuperscriptBox["L", "2"]]], "Output",
 CellChangeTimes->{
  3.5452633225625*^9, {3.54526335615625*^9, 3.54526340003125*^9}, 
   3.545263498640625*^9, {3.545263583328125*^9, 3.54526359046875*^9}, {
   3.54526362328125*^9, 3.54526365396875*^9}, 3.545263685953125*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"%", "//", "TraditionalForm"}]], "Input",
 CellChangeTimes->{{3.54526005315625*^9, 3.545260058234375*^9}}],

Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{"-", 
    FractionBox[
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        SuperscriptBox["t", "2"], "+", 
        SuperscriptBox["z", "2"]}], ")"}], " ", 
      RowBox[{
       SuperscriptBox["A", 
        TagBox[
         RowBox[{"(", 
          RowBox[{"{", 
           RowBox[{"2", ",", "0", ",", "0", ",", "0"}], "}"}], ")"}],
         Derivative],
        MultilineFunction->None], "(", 
       RowBox[{"{", 
        RowBox[{"t", ",", "x", ",", "z", ",", "L"}], "}"}], ")"}]}], 
     SuperscriptBox["L", "2"]]}], "-", 
   RowBox[{
    FractionBox["1", 
     SuperscriptBox["L", "2"]], 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       SuperscriptBox["x", "2"], " ", 
       RowBox[{
        SuperscriptBox["A", 
         TagBox[
          RowBox[{"(", 
           RowBox[{"{", 
            RowBox[{"0", ",", "2", ",", "0", ",", "0"}], "}"}], ")"}],
          Derivative],
         MultilineFunction->None], "(", 
        RowBox[{"{", 
         RowBox[{"t", ",", "x", ",", "z", ",", "L"}], "}"}], ")"}]}], "-", 
      RowBox[{
       SuperscriptBox["z", "2"], " ", 
       RowBox[{
        SuperscriptBox["A", 
         TagBox[
          RowBox[{"(", 
           RowBox[{"{", 
            RowBox[{"0", ",", "2", ",", "0", ",", "0"}], "}"}], ")"}],
          Derivative],
         MultilineFunction->None], "(", 
        RowBox[{"{", 
         RowBox[{"t", ",", "x", ",", "z", ",", "L"}], "}"}], ")"}]}], "+", 
      RowBox[{"3", " ", "x", " ", 
       RowBox[{
        SuperscriptBox["A", 
         TagBox[
          RowBox[{"(", 
           RowBox[{"{", 
            RowBox[{"0", ",", "1", ",", "0", ",", "0"}], "}"}], ")"}],
          Derivative],
         MultilineFunction->None], "(", 
        RowBox[{"{", 
         RowBox[{"t", ",", "x", ",", "z", ",", "L"}], "}"}], ")"}]}], "+", 
      RowBox[{"2", " ", "L", " ", "x", " ", 
       RowBox[{
        SuperscriptBox["A", 
         TagBox[
          RowBox[{"(", 
           RowBox[{"{", 
            RowBox[{"0", ",", "1", ",", "0", ",", "1"}], "}"}], ")"}],
          Derivative],
         MultilineFunction->None], "(", 
        RowBox[{"{", 
         RowBox[{"t", ",", "x", ",", "z", ",", "L"}], "}"}], ")"}]}], "+", 
      RowBox[{"2", " ", "x", " ", "z", " ", 
       RowBox[{
        SuperscriptBox["A", 
         TagBox[
          RowBox[{"(", 
           RowBox[{"{", 
            RowBox[{"0", ",", "1", ",", "1", ",", "0"}], "}"}], ")"}],
          Derivative],
         MultilineFunction->None], "(", 
        RowBox[{"{", 
         RowBox[{"t", ",", "x", ",", "z", ",", "L"}], "}"}], ")"}]}], "+", 
      RowBox[{"2", " ", "t", " ", "x", " ", 
       RowBox[{
        SuperscriptBox["A", 
         TagBox[
          RowBox[{"(", 
           RowBox[{"{", 
            RowBox[{"1", ",", "1", ",", "0", ",", "0"}], "}"}], ")"}],
          Derivative],
         MultilineFunction->None], "(", 
        RowBox[{"{", 
         RowBox[{"t", ",", "x", ",", "z", ",", "L"}], "}"}], ")"}]}], "+", 
      RowBox[{"3", " ", "L", " ", 
       RowBox[{
        SuperscriptBox["A", 
         TagBox[
          RowBox[{"(", 
           RowBox[{"{", 
            RowBox[{"0", ",", "0", ",", "0", ",", "1"}], "}"}], ")"}],
          Derivative],
         MultilineFunction->None], "(", 
        RowBox[{"{", 
         RowBox[{"t", ",", "x", ",", "z", ",", "L"}], "}"}], ")"}]}], "+", 
      RowBox[{"4", " ", "z", " ", 
       RowBox[{
        SuperscriptBox["A", 
         TagBox[
          RowBox[{"(", 
           RowBox[{"{", 
            RowBox[{"0", ",", "0", ",", "1", ",", "0"}], "}"}], ")"}],
          Derivative],
         MultilineFunction->None], "(", 
        RowBox[{"{", 
         RowBox[{"t", ",", "x", ",", "z", ",", "L"}], "}"}], ")"}]}], "+", 
      RowBox[{"2", " ", "L", " ", "z", " ", 
       RowBox[{
        SuperscriptBox["A", 
         TagBox[
          RowBox[{"(", 
           RowBox[{"{", 
            RowBox[{"0", ",", "0", ",", "1", ",", "1"}], "}"}], ")"}],
          Derivative],
         MultilineFunction->None], "(", 
        RowBox[{"{", 
         RowBox[{"t", ",", "x", ",", "z", ",", "L"}], "}"}], ")"}]}], "+", 
      RowBox[{"3", " ", "t", " ", 
       RowBox[{
        SuperscriptBox["A", 
         TagBox[
          RowBox[{"(", 
           RowBox[{"{", 
            RowBox[{"1", ",", "0", ",", "0", ",", "0"}], "}"}], ")"}],
          Derivative],
         MultilineFunction->None], "(", 
        RowBox[{"{", 
         RowBox[{"t", ",", "x", ",", "z", ",", "L"}], "}"}], ")"}]}], "+", 
      RowBox[{"2", " ", "L", " ", "t", " ", 
       RowBox[{
        SuperscriptBox["A", 
         TagBox[
          RowBox[{"(", 
           RowBox[{"{", 
            RowBox[{"1", ",", "0", ",", "0", ",", "1"}], "}"}], ")"}],
          Derivative],
         MultilineFunction->None], "(", 
        RowBox[{"{", 
         RowBox[{"t", ",", "x", ",", "z", ",", "L"}], "}"}], ")"}]}], "+", 
      RowBox[{"2", " ", "t", " ", "z", " ", 
       RowBox[{
        SuperscriptBox["A", 
         TagBox[
          RowBox[{"(", 
           RowBox[{"{", 
            RowBox[{"1", ",", "0", ",", "1", ",", "0"}], "}"}], ")"}],
          Derivative],
         MultilineFunction->None], "(", 
        RowBox[{"{", 
         RowBox[{"t", ",", "x", ",", "z", ",", "L"}], "}"}], ")"}]}]}], 
     ")"}]}], "-", 
   RowBox[{
    SuperscriptBox["A", 
     TagBox[
      RowBox[{"(", 
       RowBox[{"{", 
        RowBox[{"0", ",", "0", ",", "0", ",", "2"}], "}"}], ")"}],
      Derivative],
     MultilineFunction->None], "(", 
    RowBox[{"{", 
     RowBox[{"t", ",", "x", ",", "z", ",", "L"}], "}"}], ")"}]}], 
  TraditionalForm]], "Output",
 CellChangeTimes->{3.54526005953125*^9, 3.545260581875*^9}]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.54525971259375*^9, 3.545259712953125*^9}}],

Cell[BoxData[
 RowBox[{"%", "/."}]], "Input",
 CellChangeTimes->{{3.5452594864375*^9, 3.545259486984375*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 FractionBox[
  RowBox[{
   RowBox[{
    RowBox[{"-", 
     SuperscriptBox["dt", "2"]}], " ", 
    SuperscriptBox["L", "2"]}], "+", 
   RowBox[{
    SuperscriptBox["dx", "2"], " ", 
    SuperscriptBox["L", "2"]}], "+", 
   RowBox[{"2", " ", "dL", " ", "dt", " ", "L", " ", "t"}], "-", 
   RowBox[{"2", " ", "dL", " ", "dx", " ", "L", " ", "x"}], "+", 
   RowBox[{
    SuperscriptBox["dL", "2"], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", 
       SuperscriptBox["t", "2"]}], "+", 
      SuperscriptBox["x", "2"]}], ")"}]}], "+", 
   RowBox[{"dz", " ", "L", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"dz", " ", "L"}], "-", 
      RowBox[{"2", " ", "dL", " ", "z"}]}], ")"}]}]}], 
  SuperscriptBox["z", "2"]]], "Input",
 CellChangeTimes->{{3.54525798434375*^9, 3.545257991046875*^9}, {
  3.545258074484375*^9, 3.545258077625*^9}}],

Cell[BoxData[
 FractionBox[
  RowBox[{
   RowBox[{
    RowBox[{"-", 
     SuperscriptBox["dt", "2"]}], " ", 
    SuperscriptBox["L", "2"]}], "+", 
   RowBox[{
    SuperscriptBox["dx", "2"], " ", 
    SuperscriptBox["L", "2"]}], "+", 
   RowBox[{
    SuperscriptBox["dz", "2"], " ", 
    SuperscriptBox["L", "2"]}]}], 
  SuperscriptBox["z", "2"]]], "Output",
 CellChangeTimes->{3.54525799196875*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Det", "[", "\[Eta]L", "]"}]], "Input",
 CellChangeTimes->{{3.545257996015625*^9, 3.545258005453125*^9}}],

Cell[BoxData[
 FractionBox[
  SuperscriptBox["L", "6"], 
  SuperscriptBox["z", "6"]]], "Output",
 CellChangeTimes->{3.54525800603125*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[Eta]L", "//", "TraditionalForm"}]], "Input"],

Cell[BoxData[
 FormBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{"-", 
       FractionBox[
        SuperscriptBox["L", "2"], 
        SuperscriptBox["z", "2"]]}], "0", 
      FractionBox[
       RowBox[{"L", " ", "t"}], 
       SuperscriptBox["z", "2"]]},
     {"0", 
      FractionBox[
       SuperscriptBox["L", "2"], 
       SuperscriptBox["z", "2"]], 
      RowBox[{"-", 
       FractionBox["L", "z"]}]},
     {
      FractionBox[
       RowBox[{"L", " ", "t"}], 
       SuperscriptBox["z", "2"]], 
      RowBox[{"-", 
       FractionBox["L", "z"]}], 
      RowBox[{"-", 
       FractionBox[
        SuperscriptBox["t", "2"], 
        SuperscriptBox["z", "2"]]}]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}], 
  TraditionalForm]], "Output",
 CellChangeTimes->{3.545257616640625*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Det", "[", "\[Eta]L", "]"}]], "Input",
 CellChangeTimes->{{3.545257631984375*^9, 3.545257635734375*^9}}],

Cell[BoxData[
 FractionBox[
  SuperscriptBox["L", "4"], 
  SuperscriptBox["z", "4"]]], "Output",
 CellChangeTimes->{3.545257636359375*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ds2", "//", "TraditionalForm"}]], "Input",
 CellChangeTimes->{{3.545257685640625*^9, 3.5452576935*^9}}],

Cell[BoxData[
 FormBox[
  FractionBox[
   RowBox[{
    RowBox[{
     SuperscriptBox["dL", "2"], " ", 
     RowBox[{"(", 
      RowBox[{
       SuperscriptBox["x", "2"], "-", 
       SuperscriptBox["t", "2"]}], ")"}]}], "+", 
    RowBox[{"2", " ", "dL", " ", "dt", " ", "L", " ", "t"}], "-", 
    RowBox[{"2", " ", "dL", " ", "dx", " ", "L", " ", "x"}], "+", 
    RowBox[{"dz", " ", "L", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"dz", " ", "L"}], "-", 
       RowBox[{"2", " ", "dL", " ", "z"}]}], ")"}]}], "-", 
    RowBox[{
     SuperscriptBox["dt", "2"], " ", 
     SuperscriptBox["L", "2"]}], "+", 
    RowBox[{
     SuperscriptBox["dx", "2"], " ", 
     SuperscriptBox["L", "2"]}]}], 
   SuperscriptBox["z", "2"]], TraditionalForm]], "Output",
 CellChangeTimes->{3.545257694640625*^9, 3.5452582744375*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  FractionBox[
   RowBox[{
    RowBox[{
     RowBox[{"-", 
      SuperscriptBox["dt", "2"]}], " ", 
     SuperscriptBox["L", "2"]}], "+", 
    RowBox[{"2", " ", "dL", " ", "dt", " ", "L", " ", "t"}], "-", 
    RowBox[{
     SuperscriptBox["dL", "2"], " ", 
     SuperscriptBox["t", "2"]}], "+", 
    RowBox[{"dz", " ", "L", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"dz", " ", "L"}], "-", 
       RowBox[{"2", " ", "dL", " ", "z"}]}], ")"}]}]}], 
   SuperscriptBox["z", "2"]], "/.", 
  RowBox[{"dL", "\[Rule]", "0"}]}]], "Input",
 CellChangeTimes->{{3.54525757003125*^9, 3.54525757378125*^9}}],

Cell[BoxData[
 FractionBox[
  RowBox[{
   RowBox[{
    RowBox[{"-", 
     SuperscriptBox["dt", "2"]}], " ", 
    SuperscriptBox["L", "2"]}], "+", 
   RowBox[{
    SuperscriptBox["dz", "2"], " ", 
    SuperscriptBox["L", "2"]}]}], 
  SuperscriptBox["z", "2"]]], "Output",
 CellChangeTimes->{{3.545257557921875*^9, 3.54525757440625*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Y", "=", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{
     RowBox[{"Sqrt", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"L", "^", "2"}], "/", 
        RowBox[{"z", "^", "2"}]}], "+", "e"}], "]"}], " ", "t"}], ",", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"L", "^", "2"}], "+", 
       RowBox[{"e", " ", 
        RowBox[{"z", "^", "2"}]}], "+", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"t", "^", "2"}], "-", 
         RowBox[{"z", "^", "2"}], "+", 
         RowBox[{"c", " ", "z"}]}], ")"}]}], ")"}], "/", 
     RowBox[{"(", 
      RowBox[{"2", "z"}], ")"}]}], ",", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"L", "^", "2"}], "+", 
       RowBox[{"e", " ", 
        RowBox[{"z", "^", "2"}]}], "-", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"t", "^", "2"}], "-", 
         RowBox[{"z", "^", "2"}], "+", 
         RowBox[{"c", " ", "z"}]}], ")"}]}], ")"}], "/", 
     RowBox[{"(", 
      RowBox[{"2", "z"}], ")"}]}]}], "}"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"dsL", "=", 
   RowBox[{
    RowBox[{"D", "[", 
     RowBox[{"Y", ",", 
      RowBox[{"{", "X", "}"}]}], "]"}], ".", "dX"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"ds2", "=", 
  RowBox[{
   RowBox[{"FullSimplify", "[", 
    RowBox[{"dsL", ".", "\[Eta]A", ".", "dsL"}], "]"}], "/.", 
   RowBox[{"dL", "\[Rule]", "0"}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"FullSimplify", "[", 
   RowBox[{"Y", ".", "\[Eta]A", ".", "Y"}], "]"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.5449065518125*^9, 3.544906602171875*^9}, {
  3.544906637421875*^9, 3.5449066849375*^9}, {3.544907058875*^9, 
  3.544907068828125*^9}, {3.544907103203125*^9, 3.54490710834375*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"t", " ", 
    SqrtBox[
     RowBox[{"e", "+", 
      FractionBox[
       SuperscriptBox["L", "2"], 
       SuperscriptBox["z", "2"]]}]]}], ",", 
   FractionBox[
    RowBox[{
     SuperscriptBox["L", "2"], "+", 
     SuperscriptBox["t", "2"], "+", 
     RowBox[{"c", " ", "z"}], "-", 
     SuperscriptBox["z", "2"], "+", 
     RowBox[{"e", " ", 
      SuperscriptBox["z", "2"]}]}], 
    RowBox[{"2", " ", "z"}]], ",", 
   FractionBox[
    RowBox[{
     SuperscriptBox["L", "2"], "-", 
     SuperscriptBox["t", "2"], "-", 
     RowBox[{"c", " ", "z"}], "+", 
     SuperscriptBox["z", "2"], "+", 
     RowBox[{"e", " ", 
      SuperscriptBox["z", "2"]}]}], 
    RowBox[{"2", " ", "z"}]]}], "}"}]], "Output",
 CellChangeTimes->{3.544228056046875*^9, 3.54423992821875*^9, 
  3.544811138796875*^9, 3.5449066885625*^9, 3.544907071125*^9, 
  3.544907108921875*^9}],

Cell[BoxData[
 FractionBox[
  RowBox[{
   RowBox[{"2", " ", "dt", " ", "dz", " ", "e", " ", "t", " ", "z", " ", 
    RowBox[{"(", 
     RowBox[{
      SuperscriptBox["L", "2"], "+", 
      RowBox[{"e", " ", 
       SuperscriptBox["z", "2"]}]}], ")"}]}], "-", 
   RowBox[{
    SuperscriptBox["dt", "2"], " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       SuperscriptBox["L", "2"], "+", 
       RowBox[{"e", " ", 
        SuperscriptBox["z", "2"]}]}], ")"}], "2"]}], "+", 
   RowBox[{
    SuperscriptBox["dz", "2"], " ", 
    RowBox[{"(", 
     RowBox[{
      SuperscriptBox["L", "4"], "-", 
      RowBox[{
       SuperscriptBox["e", "2"], " ", 
       SuperscriptBox["z", "2"], " ", 
       RowBox[{"(", 
        RowBox[{
         SuperscriptBox["t", "2"], "+", 
         SuperscriptBox["z", "2"]}], ")"}]}]}], ")"}]}]}], 
  RowBox[{
   SuperscriptBox["z", "2"], " ", 
   RowBox[{"(", 
    RowBox[{
     SuperscriptBox["L", "2"], "+", 
     RowBox[{"e", " ", 
      SuperscriptBox["z", "2"]}]}], ")"}]}]]], "Output",
 CellChangeTimes->{3.544228056046875*^9, 3.54423992821875*^9, 
  3.544811138796875*^9, 3.5449066885625*^9, 3.544907071125*^9, 
  3.5449071089375*^9}],

Cell[BoxData[
 FractionBox[
  RowBox[{
   RowBox[{"(", 
    RowBox[{"c", "-", "z"}], ")"}], " ", 
   RowBox[{"(", 
    RowBox[{
     SuperscriptBox["L", "2"], "+", 
     RowBox[{"e", " ", 
      SuperscriptBox["z", "2"]}]}], ")"}]}], "z"]], "Output",
 CellChangeTimes->{3.544228056046875*^9, 3.54423992821875*^9, 
  3.544811138796875*^9, 3.5449066885625*^9, 3.544907071125*^9, 
  3.54490710909375*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FullSimplify", "[", "%", "]"}]], "Input",
 CellChangeTimes->{{3.5449067098125*^9, 3.544906712984375*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", 
   SuperscriptBox["L", "2"]}], "-", 
  RowBox[{"e", " ", 
   SuperscriptBox["z", "2"]}]}]], "Output",
 CellChangeTimes->{3.544906713671875*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"KL", "[", 
  RowBox[{"[", "1", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.544884435234375*^9, 3.544884440546875*^9}}],

Cell[BoxData[
 FractionBox[
  RowBox[{
   RowBox[{"2", " ", "pz", " ", "t", " ", "z"}], "+", 
   RowBox[{"pt", " ", 
    RowBox[{"(", 
     RowBox[{
      SuperscriptBox["t", "2"], "+", 
      SuperscriptBox["z", "2"]}], ")"}]}]}], "L"]], "Output",
 CellChangeTimes->{3.54488444128125*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Comm", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"pt", " ", "t"}], "+", 
    RowBox[{"pz", " ", "z"}]}], ",", 
   RowBox[{
    RowBox[{
     RowBox[{"L", "^", "3"}], "/", 
     RowBox[{"z", "^", "2"}]}], " ", 
    RowBox[{"KL", "[", 
     RowBox[{"[", "1", "]"}], "]"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.54488447134375*^9, 3.544884486078125*^9}, {
   3.544884560640625*^9, 3.544884564796875*^9}, 3.5448847035625*^9, {
   3.544884784921875*^9, 3.544884794703125*^9}, {3.54488484565625*^9, 
   3.54488485253125*^9}, {3.5448853436875*^9, 3.544885347875*^9}, {
   3.544885465703125*^9, 3.544885470515625*^9}}],

Cell[BoxData[
 RowBox[{"-", 
  FractionBox[
   RowBox[{
    SuperscriptBox["L", "2"], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"2", " ", "pz", " ", "t", " ", "z"}], "+", 
      RowBox[{"pt", " ", 
       RowBox[{"(", 
        RowBox[{
         SuperscriptBox["t", "2"], "+", 
         SuperscriptBox["z", "2"]}], ")"}]}]}], ")"}]}], 
   SuperscriptBox["z", "2"]]}]], "Output",
 CellChangeTimes->{
  3.544884491890625*^9, 3.544884568125*^9, 3.544884704375*^9, {
   3.544884829078125*^9, 3.544884855703125*^9}, 3.544885477078125*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"{", 
  RowBox[{
   RowBox[{"Comm", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"pt", " ", "t"}], "+", 
      RowBox[{"pz", " ", "z"}]}], ",", " ", 
     RowBox[{"KL", "[", 
      RowBox[{"[", "1", "]"}], "]"}]}], "]"}], ",", 
   RowBox[{"Comm", "[", 
    RowBox[{
     RowBox[{"L", " ", "pt"}], ",", " ", 
     RowBox[{"KL", "[", 
      RowBox[{"[", "1", "]"}], "]"}]}], "]"}], ",", 
   RowBox[{"Comm", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"pt", " ", "t"}], "+", 
      RowBox[{"pz", " ", "z"}]}], ",", " ", 
     RowBox[{"L", " ", "pt"}]}], "]"}]}], "}"}], "\[IndentingNewLine]", 
 RowBox[{"{", 
  RowBox[{
   RowBox[{"Comm", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"pt", " ", "t"}], "+", 
      RowBox[{"pz", " ", "z"}]}], ",", " ", 
     RowBox[{
      RowBox[{
       RowBox[{"L", "^", "3"}], "/", 
       RowBox[{"z", "^", "2"}]}], " ", 
      RowBox[{"KL", "[", 
       RowBox[{"[", "1", "]"}], "]"}]}]}], "]"}], ",", 
   RowBox[{"Comm", "[", 
    RowBox[{
     RowBox[{"L", " ", "pt"}], ",", " ", 
     RowBox[{
      RowBox[{
       RowBox[{"L", "^", "3"}], "/", 
       RowBox[{"z", "^", "2"}]}], " ", 
      RowBox[{"KL", "[", 
       RowBox[{"[", "1", "]"}], "]"}]}]}], "]"}], ",", 
   RowBox[{"Comm", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"pt", " ", "t"}], "+", 
      RowBox[{"pz", " ", "z"}]}], ",", 
     RowBox[{"L", " ", "pt"}]}], "]"}]}], "}"}]}], "Input",
 CellChangeTimes->{{3.544886137453125*^9, 3.544886138359375*^9}, {
  3.544886176609375*^9, 3.544886220203125*^9}, {3.54488633365625*^9, 
  3.544886346484375*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   FractionBox[
    RowBox[{
     RowBox[{"2", " ", "pz", " ", "t", " ", "z"}], "+", 
     RowBox[{"pt", " ", 
      RowBox[{"(", 
       RowBox[{
        SuperscriptBox["t", "2"], "+", 
        SuperscriptBox["z", "2"]}], ")"}]}]}], "L"], ",", 
   RowBox[{"2", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"pt", " ", "t"}], "+", 
      RowBox[{"pz", " ", "z"}]}], ")"}]}], ",", 
   RowBox[{
    RowBox[{"-", "L"}], " ", "pt"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.544886139140625*^9, 3.544886222921875*^9, {3.54488633934375*^9, 
   3.544886348046875*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"-", 
    FractionBox[
     RowBox[{
      SuperscriptBox["L", "2"], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"2", " ", "pz", " ", "t", " ", "z"}], "+", 
        RowBox[{"pt", " ", 
         RowBox[{"(", 
          RowBox[{
           SuperscriptBox["t", "2"], "+", 
           SuperscriptBox["z", "2"]}], ")"}]}]}], ")"}]}], 
     SuperscriptBox["z", "2"]]}], ",", 
   FractionBox[
    RowBox[{"2", " ", 
     SuperscriptBox["L", "3"], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"pt", " ", "t"}], "+", 
       RowBox[{"pz", " ", "z"}]}], ")"}]}], 
    SuperscriptBox["z", "2"]], ",", 
   RowBox[{
    RowBox[{"-", "L"}], " ", "pt"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.544886139140625*^9, 3.544886222921875*^9, {3.54488633934375*^9, 
   3.544886348375*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"Comm", "[", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"pt", " ", "t"}], "+", 
       RowBox[{"pz", " ", "z"}]}], ")"}], ",", " ", 
     RowBox[{
      RowBox[{
       RowBox[{"L", "^", "3"}], "/", 
       RowBox[{"z", "^", "2"}]}], " ", 
      RowBox[{"KL", "[", 
       RowBox[{"[", "1", "]"}], "]"}]}]}], "]"}], ",", 
   RowBox[{"Comm", "[", 
    RowBox[{
     RowBox[{"L", " ", "pt"}], ",", " ", 
     RowBox[{
      RowBox[{
       RowBox[{"L", "^", "3"}], "/", 
       RowBox[{"z", "^", "2"}]}], " ", 
      RowBox[{"KL", "[", 
       RowBox[{"[", "1", "]"}], "]"}]}]}], "]"}], ",", 
   RowBox[{"Comm", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"pt", " ", "t"}], "+", 
      RowBox[{"pz", " ", "z"}]}], ",", 
     RowBox[{"L", " ", "pt"}]}], "]"}]}], "}"}]], "Input",
 CellChangeTimes->{{3.544886872140625*^9, 3.544886889046875*^9}, {
  3.544886965265625*^9, 3.544886966140625*^9}, {3.544887004578125*^9, 
  3.54488700646875*^9}, {3.544887300828125*^9, 3.544887302890625*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"-", 
    FractionBox[
     RowBox[{
      SuperscriptBox["L", "2"], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"2", " ", "pz", " ", "t", " ", "z"}], "+", 
        RowBox[{"pt", " ", 
         RowBox[{"(", 
          RowBox[{
           SuperscriptBox["t", "2"], "+", 
           SuperscriptBox["z", "2"]}], ")"}]}]}], ")"}]}], 
     SuperscriptBox["z", "2"]]}], ",", 
   FractionBox[
    RowBox[{"2", " ", 
     SuperscriptBox["L", "3"], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"pt", " ", "t"}], "+", 
       RowBox[{"pz", " ", "z"}]}], ")"}]}], 
    SuperscriptBox["z", "2"]], ",", 
   RowBox[{
    RowBox[{"-", "L"}], " ", "pt"}]}], "}"}]], "Output",
 CellChangeTimes->{3.544886896625*^9, 3.5448869675*^9, 3.54488700890625*^9, 
  3.54488730384375*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"R", "=", 
  RowBox[{"m", "+", 
   RowBox[{"Sqrt", "[", 
    RowBox[{
     RowBox[{"1", "/", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"z", "^", "2"}], "-", 
        RowBox[{"\[CapitalDelta]r", "^", "2"}]}], ")"}]}], "+", 
     RowBox[{"\[CapitalDelta]r", "^", "2"}]}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.544890120234375*^9, 3.544890121921875*^9}, {
  3.544890384390625*^9, 3.544890388375*^9}}],

Cell[BoxData[
 RowBox[{"m", "+", 
  SqrtBox[
   RowBox[{
    SuperscriptBox["\[CapitalDelta]r", "2"], "+", 
    FractionBox["1", 
     RowBox[{
      SuperscriptBox["z", "2"], "-", 
      SuperscriptBox["\[CapitalDelta]r", "2"]}]]}]]}]], "Output",
 CellChangeTimes->{3.544890125*^9, 3.5448903985*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FullSimplify", "[", 
  RowBox[{"D", "[", 
   RowBox[{"R", ",", "z"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.544889985140625*^9, 3.54489006540625*^9}, {
  3.544890107953125*^9, 3.54489015146875*^9}}],

Cell[BoxData[
 RowBox[{"-", 
  FractionBox["z", 
   RowBox[{
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       SuperscriptBox["z", "2"], "-", 
       SuperscriptBox["\[CapitalDelta]r", "2"]}], ")"}], "2"], " ", 
    SqrtBox[
     RowBox[{
      SuperscriptBox["\[CapitalDelta]r", "2"], "+", 
      FractionBox["1", 
       RowBox[{
        SuperscriptBox["z", "2"], "-", 
        SuperscriptBox["\[CapitalDelta]r", "2"]}]]}]]}]]}]], "Output",
 CellChangeTimes->{{3.544890032609375*^9, 3.544890073578125*^9}, 
   3.544890153421875*^9, 3.5448904063125*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"FullSimplify", "[", 
   RowBox[{
    RowBox[{"%", "^", "2"}], " ", 
    RowBox[{
     RowBox[{"R", "^", "2"}], "/", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{"R", "-", "m"}], ")"}], "^", "2"}], "-", 
       RowBox[{"\[CapitalDelta]r", "^", "2"}]}], ")"}]}]}], "]"}], 
  " "}]], "Input",
 CellChangeTimes->{{3.544890083140625*^9, 3.544890090421875*^9}, {
  3.544890163484375*^9, 3.54489021115625*^9}}],

Cell[BoxData[
 FractionBox[
  RowBox[{
   SuperscriptBox["z", "2"], " ", 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{"m", "+", 
      SqrtBox[
       RowBox[{
        SuperscriptBox["\[CapitalDelta]r", "2"], "+", 
        FractionBox["1", 
         RowBox[{
          SuperscriptBox["z", "2"], "-", 
          SuperscriptBox["\[CapitalDelta]r", "2"]}]]}]]}], ")"}], "2"]}], 
  RowBox[{
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{
      SuperscriptBox["z", "2"], "-", 
      SuperscriptBox["\[CapitalDelta]r", "2"]}], ")"}], "2"], " ", 
   RowBox[{"(", 
    RowBox[{"1", "+", 
     RowBox[{
      SuperscriptBox["z", "2"], " ", 
      SuperscriptBox["\[CapitalDelta]r", "2"]}], "-", 
     SuperscriptBox["\[CapitalDelta]r", "4"]}], ")"}]}]]], "Output",
 CellChangeTimes->{3.54489022278125*^9, 3.54489042528125*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(", 
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{"R", "-", "m"}], ")"}], "^", "2"}], "-", 
    RowBox[{"\[CapitalDelta]r", "^", "2"}]}], ")"}], "/", 
  RowBox[{"R", "^", "2"}]}]], "Input",
 CellChangeTimes->{{3.544890347828125*^9, 3.5448903505625*^9}}],

Cell[BoxData[
 FractionBox["1", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     SuperscriptBox["z", "2"], "-", 
     SuperscriptBox["\[CapitalDelta]r", "2"]}], ")"}], " ", 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{"m", "+", 
      SqrtBox[
       RowBox[{
        SuperscriptBox["\[CapitalDelta]r", "2"], "+", 
        FractionBox["1", 
         RowBox[{
          SuperscriptBox["z", "2"], "-", 
          SuperscriptBox["\[CapitalDelta]r", "2"]}]]}]]}], ")"}], 
    "2"]}]]], "Output",
 CellChangeTimes->{3.544890351640625*^9, 3.5448904409375*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"Sqrt", "[", 
     RowBox[{
      RowBox[{"x", "^", "2"}], "+", "1"}], "]"}], "-", "2"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "1"}], ",", "1"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.5448919873125*^9, 3.54489203528125*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1: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

     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesOrigin->{0, -1.},
  PlotRange->{{-1, 1}, {-0.9999999881528352, -0.5857864664884058}},
  PlotRangeClipping->True,
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02]}]], "Output",
 CellChangeTimes->{{3.544892016765625*^9, 3.54489203575*^9}},
 ImageCache->GraphicsData["CompressedBitmap", "\<\
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\
\>"]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Integrate", "[", 
  RowBox[{
   RowBox[{"1", "/", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"r", "^", "2"}], "-", 
      RowBox[{"c", "^", "2"}]}], ")"}]}], ",", "r", ",", 
   RowBox[{"Assumptions", "\[Rule]", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"c", "\[Element]", "Reals"}], "&&", " ", 
      RowBox[{"r", ">", 
       RowBox[{"Abs", "[", "c", "]"}]}]}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.544894396640625*^9, 3.544894411640625*^9}, {
  3.54489726490625*^9, 3.54489730571875*^9}, {3.544898078640625*^9, 
  3.544898099890625*^9}}],

Cell[BoxData[
 RowBox[{"-", 
  FractionBox[
   RowBox[{"ArcTanh", "[", 
    FractionBox["r", "c"], "]"}], "c"]}]], "Output",
 CellChangeTimes->{3.5448944164375*^9, 3.544897312734375*^9, 
  3.5448981026875*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"D", "[", 
  RowBox[{
   RowBox[{"-", 
    FractionBox[
     RowBox[{"ArcCoth", "[", 
      FractionBox["r", "c"], "]"}], "c"]}], ",", "r"}], "]"}]], "Input",
 CellChangeTimes->{{3.54489736040625*^9, 3.54489738065625*^9}, {
  3.54489741190625*^9, 3.54489742228125*^9}, {3.544900893875*^9, 
  3.54490089784375*^9}, {3.544901872203125*^9, 3.544901906359375*^9}}],

Cell[BoxData[
 RowBox[{"-", 
  FractionBox["1", 
   RowBox[{
    SuperscriptBox["c", "2"], " ", 
    RowBox[{"(", 
     RowBox[{"1", "-", 
      FractionBox[
       SuperscriptBox["r", "2"], 
       SuperscriptBox["c", "2"]]}], ")"}]}]]}]], "Output",
 CellChangeTimes->{
  3.54489739975*^9, 3.544897435453125*^9, 3.544900899140625*^9, {
   3.544901875171875*^9, 3.544901909484375*^9}}]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.544902891359375*^9, 3.544902892171875*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Series", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"-", "\[CapitalDelta]r"}], "/", "2"}], " ", 
    RowBox[{"Coth", "[", 
     RowBox[{
      RowBox[{"\[CapitalDelta]r", "/", 
       RowBox[{"(", 
        RowBox[{"2", 
         RowBox[{"m", "^", "2"}]}], ")"}]}], "z"}], "]"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"z", ",", "0", ",", "4"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.5448997636875*^9, 3.544899791828125*^9}, {
  3.544900514203125*^9, 3.5449005215625*^9}, {3.544901184828125*^9, 
  3.54490118821875*^9}, {3.5449012194375*^9, 3.544901221828125*^9}, {
  3.544902531421875*^9, 3.544902558484375*^9}, {3.5449028338125*^9, 
  3.54490291171875*^9}}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   RowBox[{"-", 
    FractionBox[
     SuperscriptBox["m", "2"], "z"]}], "-", 
   FractionBox[
    RowBox[{
     SuperscriptBox["\[CapitalDelta]r", "2"], " ", "z"}], 
    RowBox[{"12", " ", 
     SuperscriptBox["m", "2"]}]], "+", 
   FractionBox[
    RowBox[{
     SuperscriptBox["\[CapitalDelta]r", "4"], " ", 
     SuperscriptBox["z", "3"]}], 
    RowBox[{"720", " ", 
     SuperscriptBox["m", "6"]}]], "+", 
   InterpretationBox[
    SuperscriptBox[
     RowBox[{"O", "[", "z", "]"}], "5"],
    SeriesData[$CellContext`z, 0, {}, -1, 5, 1],
    Editable->False]}],
  SeriesData[$CellContext`z, 
   0, {-$CellContext`m^2, 0, 
    Rational[-1, 12] $CellContext`m^(-2) $CellContext`\[CapitalDelta]r^2, 0, 
    Rational[1, 720] $CellContext`m^(-6) $CellContext`\[CapitalDelta]r^4}, -1,
    5, 1],
  Editable->False]], "Output",
 CellChangeTimes->{
  3.54489979271875*^9, 3.544900523640625*^9, 3.54490118921875*^9, 
   3.544901224125*^9, {3.54490253459375*^9, 3.544902559125*^9}, 
   3.544902915890625*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     FractionBox[
      SuperscriptBox["m", "2"], "z"], "+", 
     FractionBox[
      RowBox[{
       SuperscriptBox["\[CapitalDelta]r", "2"], " ", "z"}], 
      RowBox[{"12", " ", 
       SuperscriptBox["m", "2"]}]]}], ")"}], "^", "2"}], "-", 
  FractionBox[
   RowBox[{
    SuperscriptBox["\[CapitalDelta]r", "2"], " "}], "4"]}]], "Input",
 CellChangeTimes->{{3.54490392309375*^9, 3.5449039528125*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", 
   FractionBox[
    SuperscriptBox["\[CapitalDelta]r", "2"], "4"]}], "+", 
  SuperscriptBox[
   RowBox[{"(", 
    RowBox[{
     FractionBox[
      SuperscriptBox["m", "2"], "z"], "+", 
     FractionBox[
      RowBox[{"z", " ", 
       SuperscriptBox["\[CapitalDelta]r", "2"]}], 
      RowBox[{"12", " ", 
       SuperscriptBox["m", "2"]}]]}], ")"}], "2"]}]], "Output",
 CellChangeTimes->{3.544903963921875*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FullSimplify", "[", "%", "]"}]], "Input",
 CellChangeTimes->{{3.54490396865625*^9, 3.54490399140625*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", 
   FractionBox[
    SuperscriptBox["\[CapitalDelta]r", "2"], "4"]}], "+", 
  SuperscriptBox[
   RowBox[{"(", 
    RowBox[{
     FractionBox[
      SuperscriptBox["m", "2"], "z"], "+", 
     FractionBox[
      RowBox[{"z", " ", 
       SuperscriptBox["\[CapitalDelta]r", "2"]}], 
      RowBox[{"12", " ", 
       SuperscriptBox["m", "2"]}]]}], ")"}], "2"]}]], "Output",
 CellChangeTimes->{{3.54490397346875*^9, 3.544903998578125*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Det", "[", "\[Eta]L", "]"}]], "Input",
 CellChangeTimes->{{3.54488655303125*^9, 3.544886557171875*^9}}],

Cell[BoxData[
 FractionBox[
  SuperscriptBox["L", "4"], 
  SuperscriptBox["z", "4"]]], "Output",
 CellChangeTimes->{3.544886558*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Comm", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"pt", " ", "t"}], "+", 
    RowBox[{"pz", " ", "z"}]}], ",", "pt"}], "]"}]], "Input",
 CellChangeTimes->{{3.544885350453125*^9, 3.544885352875*^9}}],

Cell[BoxData[
 RowBox[{"-", "pt"}]], "Output",
 CellChangeTimes->{3.54488535365625*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Comm", "[", 
  RowBox[{"pt", ",", 
   RowBox[{
    RowBox[{
     RowBox[{"L", "^", "3"}], "/", " ", 
     RowBox[{"z", "^", "2"}]}], " ", 
    RowBox[{"KL", "[", 
     RowBox[{"[", "1", "]"}], "]"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.544885386234375*^9, 3.544885434015625*^9}, {
  3.54488549875*^9, 3.54488550675*^9}}],

Cell[BoxData[
 FractionBox[
  RowBox[{"2", " ", 
   SuperscriptBox["L", "2"], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"pt", " ", "t"}], "+", 
     RowBox[{"pz", " ", "z"}]}], ")"}]}], 
  SuperscriptBox["z", "2"]]], "Output",
 CellChangeTimes->{{3.54488541096875*^9, 3.54488543459375*^9}, 
   3.544885509125*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Act", "[", 
  RowBox[{"pL", ",", 
   RowBox[{
    RowBox[{"Det", "[", "\[Eta]L", "]"}], 
    RowBox[{
     RowBox[{"Inverse", "[", "\[Eta]L", "]"}], ".", "pX"}]}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.5448115130625*^9, 3.5448115476875*^9}, {3.5448116015*^9,
   3.544811616453125*^9}, {3.54481164725*^9, 3.54481165275*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"-", 
    FractionBox[
     RowBox[{"L", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"3", " ", "L", " ", "pL", " ", "t"}], "+", 
        RowBox[{"2", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"pz", " ", "t", " ", "z"}], "+", 
           RowBox[{"pt", " ", 
            RowBox[{"(", 
             RowBox[{
              SuperscriptBox["t", "2"], "+", 
              SuperscriptBox["z", "2"]}], ")"}]}]}], ")"}]}]}], ")"}]}], 
     SuperscriptBox["z", "4"]]}], ",", 
   RowBox[{"-", 
    FractionBox[
     RowBox[{"L", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"3", " ", "L", " ", "pL"}], "+", 
        RowBox[{"2", " ", "pt", " ", "t"}]}], ")"}]}], 
     SuperscriptBox["z", "3"]]}], ",", 
   RowBox[{"-", 
    FractionBox[
     RowBox[{
      SuperscriptBox["L", "2"], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"4", " ", "L", " ", "pL"}], "+", 
        RowBox[{"3", " ", "pt", " ", "t"}], "+", 
        RowBox[{"3", " ", "pz", " ", "z"}]}], ")"}]}], 
     SuperscriptBox["z", "4"]]}]}], "}"}]], "Output",
 CellChangeTimes->{3.544228056046875*^9, 3.54423992821875*^9, 
  3.544811186390625*^9, 3.544811658546875*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Jinv", "\[Transpose]"}], "//", "TraditionalForm"}]], "Input",
 CellChangeTimes->{{3.544227988375*^9, 3.544228000484375*^9}, {
  3.5442281316875*^9, 3.5442281376875*^9}}],

Cell[BoxData[
 FormBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      FractionBox[
       RowBox[{
        SuperscriptBox["t", "2"], "+", 
        SuperscriptBox["z", "2"]}], 
       RowBox[{"L", " ", "z"}]], 
      FractionBox[
       RowBox[{"2", " ", "t"}], "L"], 
      FractionBox["t", "z"]},
     {
      RowBox[{"-", 
       FractionBox[
        RowBox[{"t", " ", 
         RowBox[{"(", 
          RowBox[{
           SuperscriptBox["L", "2"], "+", 
           SuperscriptBox["t", "2"], "+", 
           SuperscriptBox["z", "2"]}], ")"}]}], 
        RowBox[{"2", " ", 
         SuperscriptBox["L", "2"], " ", "z"}]]}], 
      RowBox[{
       RowBox[{"-", 
        FractionBox[
         SuperscriptBox["t", "2"], 
         SuperscriptBox["L", "2"]]}], "-", "1"}], 
      RowBox[{"-", 
       FractionBox[
        RowBox[{
         SuperscriptBox["L", "2"], "+", 
         SuperscriptBox["t", "2"], "-", 
         SuperscriptBox["z", "2"]}], 
        RowBox[{"2", " ", "L", " ", "z"}]]}]},
     {
      RowBox[{"-", 
       FractionBox[
        RowBox[{"t", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", 
            SuperscriptBox["L", "2"]}], "+", 
           SuperscriptBox["t", "2"], "+", 
           SuperscriptBox["z", "2"]}], ")"}]}], 
        RowBox[{"2", " ", 
         SuperscriptBox["L", "2"], " ", "z"}]]}], 
      RowBox[{"1", "-", 
       FractionBox[
        SuperscriptBox["t", "2"], 
        SuperscriptBox["L", "2"]]}], 
      FractionBox[
       RowBox[{
        SuperscriptBox["L", "2"], "-", 
        SuperscriptBox["t", "2"], "+", 
        SuperscriptBox["z", "2"]}], 
       RowBox[{"2", " ", "L", " ", "z"}]]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}], 
  TraditionalForm]], "Output",
 CellChangeTimes->{{3.544227989375*^9, 3.54422800171875*^9}, 
   3.544228067875*^9, {3.544228133234375*^9, 3.544228138796875*^9}}]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.54422820184375*^9, 3.544228221671875*^9}, {
  3.54422832571875*^9, 3.54422837559375*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FullSimplify", "[", 
  RowBox[{"Y", ".", 
   RowBox[{"Jinv", "\[Transpose]"}], ".", "pX"}], "]"}]], "Input",
 CellChangeTimes->{{3.544227911578125*^9, 3.54422794725*^9}, {3.544228109*^9, 
  3.544228116359375*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"L", " ", "pL"}], "+", 
  RowBox[{"pt", " ", "t"}], "+", 
  RowBox[{"pz", " ", "z"}]}]], "Output",
 CellChangeTimes->{
  3.54422361334375*^9, 3.54422665540625*^9, {3.544227928296875*^9, 
   3.544227951703125*^9}, 3.5442280728125*^9, 3.544228117875*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Det", "[", "\[Eta]L", "]"}]], "Input",
 CellChangeTimes->{{3.54424007578125*^9, 3.544240102484375*^9}}],

Cell[BoxData[
 FractionBox[
  SuperscriptBox["L", "4"], 
  SuperscriptBox["z", "4"]]], "Output",
 CellChangeTimes->{3.544240104421875*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{" ", 
  RowBox[{"FullSimplify", "[", 
   RowBox[{"act", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"L", " ", "pL"}], "+", 
      RowBox[{"pt", " ", "t"}], "+", 
      RowBox[{"pz", " ", "z"}]}], ",", 
     RowBox[{"act", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"L", " ", "pL"}], "+", 
        RowBox[{"pt", " ", "t"}], "+", 
        RowBox[{"pz", " ", "z"}]}], ",", " ", 
       RowBox[{"f", "[", 
        RowBox[{"t", ",", "z"}], "]"}]}], "]"}]}], "]"}], " ", 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.5442402213125*^9, 3.5442402215*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"z", " ", 
   RowBox[{
    SuperscriptBox["f", 
     TagBox[
      RowBox[{"(", 
       RowBox[{"0", ",", "1"}], ")"}],
      Derivative],
     MultilineFunction->None], "[", 
    RowBox[{"t", ",", "z"}], "]"}]}], "+", 
  RowBox[{
   SuperscriptBox["z", "2"], " ", 
   RowBox[{
    SuperscriptBox["f", 
     TagBox[
      RowBox[{"(", 
       RowBox[{"0", ",", "2"}], ")"}],
      Derivative],
     MultilineFunction->None], "[", 
    RowBox[{"t", ",", "z"}], "]"}]}], "+", 
  RowBox[{"t", " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      SuperscriptBox["f", 
       TagBox[
        RowBox[{"(", 
         RowBox[{"1", ",", "0"}], ")"}],
        Derivative],
       MultilineFunction->None], "[", 
      RowBox[{"t", ",", "z"}], "]"}], "+", 
     RowBox[{"2", " ", "z", " ", 
      RowBox[{
       SuperscriptBox["f", 
        TagBox[
         RowBox[{"(", 
          RowBox[{"1", ",", "1"}], ")"}],
         Derivative],
        MultilineFunction->None], "[", 
       RowBox[{"t", ",", "z"}], "]"}]}], "+", 
     RowBox[{"t", " ", 
      RowBox[{
       SuperscriptBox["f", 
        TagBox[
         RowBox[{"(", 
          RowBox[{"2", ",", "0"}], ")"}],
         Derivative],
        MultilineFunction->None], "[", 
       RowBox[{"t", ",", "z"}], "]"}]}]}], ")"}]}]}]], "Output",
 CellChangeTimes->{3.5442402235625*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{" ", 
  RowBox[{"FullSimplify", "[", 
   RowBox[{"act", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"L", " ", "pL"}], "+", 
      RowBox[{"pt", " ", "t"}], "+", 
      RowBox[{"pz", " ", "z"}]}], ",", 
     RowBox[{"act", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"L", " ", "pL"}], "+", 
        RowBox[{"pt", " ", "t"}], "+", 
        RowBox[{"pz", " ", "z"}]}], ",", " ", 
       RowBox[{"f", "[", 
        RowBox[{"t", ",", "z", ",", "L"}], "]"}]}], "]"}]}], "]"}], " ", 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.54423994878125*^9, 3.54424007225*^9}, {
  3.5442401233125*^9, 3.54424020728125*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"L", " ", 
   RowBox[{
    SuperscriptBox["f", 
     TagBox[
      RowBox[{"(", 
       RowBox[{"0", ",", "0", ",", "1"}], ")"}],
      Derivative],
     MultilineFunction->None], "[", 
    RowBox[{"t", ",", "z", ",", "L"}], "]"}]}], "+", 
  RowBox[{
   SuperscriptBox["L", "2"], " ", 
   RowBox[{
    SuperscriptBox["f", 
     TagBox[
      RowBox[{"(", 
       RowBox[{"0", ",", "0", ",", "2"}], ")"}],
      Derivative],
     MultilineFunction->None], "[", 
    RowBox[{"t", ",", "z", ",", "L"}], "]"}]}], "+", 
  RowBox[{"z", " ", 
   RowBox[{
    SuperscriptBox["f", 
     TagBox[
      RowBox[{"(", 
       RowBox[{"0", ",", "1", ",", "0"}], ")"}],
      Derivative],
     MultilineFunction->None], "[", 
    RowBox[{"t", ",", "z", ",", "L"}], "]"}]}], "+", 
  RowBox[{"2", " ", "L", " ", "z", " ", 
   RowBox[{
    SuperscriptBox["f", 
     TagBox[
      RowBox[{"(", 
       RowBox[{"0", ",", "1", ",", "1"}], ")"}],
      Derivative],
     MultilineFunction->None], "[", 
    RowBox[{"t", ",", "z", ",", "L"}], "]"}]}], "+", 
  RowBox[{
   SuperscriptBox["z", "2"], " ", 
   RowBox[{
    SuperscriptBox["f", 
     TagBox[
      RowBox[{"(", 
       RowBox[{"0", ",", "2", ",", "0"}], ")"}],
      Derivative],
     MultilineFunction->None], "[", 
    RowBox[{"t", ",", "z", ",", "L"}], "]"}]}], "+", 
  RowBox[{"t", " ", 
   RowBox[{
    SuperscriptBox["f", 
     TagBox[
      RowBox[{"(", 
       RowBox[{"1", ",", "0", ",", "0"}], ")"}],
      Derivative],
     MultilineFunction->None], "[", 
    RowBox[{"t", ",", "z", ",", "L"}], "]"}]}], "+", 
  RowBox[{"2", " ", "L", " ", "t", " ", 
   RowBox[{
    SuperscriptBox["f", 
     TagBox[
      RowBox[{"(", 
       RowBox[{"1", ",", "0", ",", "1"}], ")"}],
      Derivative],
     MultilineFunction->None], "[", 
    RowBox[{"t", ",", "z", ",", "L"}], "]"}]}], "+", 
  RowBox[{"2", " ", "t", " ", "z", " ", 
   RowBox[{
    SuperscriptBox["f", 
     TagBox[
      RowBox[{"(", 
       RowBox[{"1", ",", "1", ",", "0"}], ")"}],
      Derivative],
     MultilineFunction->None], "[", 
    RowBox[{"t", ",", "z", ",", "L"}], "]"}]}], "+", 
  RowBox[{
   SuperscriptBox["t", "2"], " ", 
   RowBox[{
    SuperscriptBox["f", 
     TagBox[
      RowBox[{"(", 
       RowBox[{"2", ",", "0", ",", "0"}], ")"}],
      Derivative],
     MultilineFunction->None], "[", 
    RowBox[{"t", ",", "z", ",", "L"}], "]"}]}]}]], "Output",
 CellChangeTimes->{
  3.54423998678125*^9, {3.544240028015625*^9, 3.544240039078125*^9}, {
   3.54424016078125*^9, 3.544240181*^9}}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"act", "[", 
     RowBox[{"A_", ",", "B_"}], "]"}], ":=", 
    RowBox[{"(", 
     RowBox[{"A", "/.", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"pu", "\[Rule]", 
         RowBox[{"D", "[", 
          RowBox[{"B", ",", "u"}], "]"}]}], ",", 
        RowBox[{"p\[Rho]", "\[Rule]", 
         RowBox[{"D", "[", 
          RowBox[{"B", ",", "\[Rho]"}], "]"}]}], ",", 
        RowBox[{"pv", "\[Rule]", 
         RowBox[{"D", "[", 
          RowBox[{"B", ",", "v"}], "]"}]}]}], "}"}]}], ")"}]}], ";"}], 
  "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.542905599453125*^9, 3.54290563253125*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{"Lm", ",", "Lp"}], "}"}], "=", 
  RowBox[{
   RowBox[{"I", 
    RowBox[{"{", 
     RowBox[{
      SuperscriptBox["E", 
       RowBox[{
        RowBox[{"-", "I"}], " ", "u"}]], ",", 
      SuperscriptBox["E", 
       RowBox[{"I", " ", "u"}]]}], "}"}], 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"Coth", "[", 
        RowBox[{"2", "\[Rho]"}], "]"}], "pu"}], "-", 
      RowBox[{
       FractionBox["1", 
        RowBox[{"Sinh", "[", 
         RowBox[{"2", "\[Rho]"}], "]"}]], "pv"}]}], ")"}]}], "+", 
   RowBox[{"I", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       SuperscriptBox["E", 
        RowBox[{
         RowBox[{"-", "I"}], " ", "u"}]], 
       FractionBox["I", "2"], "p\[Rho]"}], ",", 
      RowBox[{
       RowBox[{"-", 
        SuperscriptBox["E", 
         RowBox[{"I", " ", "u"}]]}], 
       FractionBox["I", "2"], "p\[Rho]"}]}], "}"}]}]}]}]], "Input",
 CellChangeTimes->{{3.5429056568125*^9, 3.542905667578125*^9}, {
  3.542905722296875*^9, 3.5429058728125*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"-", 
      FractionBox["1", "2"]}], " ", 
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{
       RowBox[{"-", "\[ImaginaryI]"}], " ", "u"}]], " ", "p\[Rho]"}], "+", 
    RowBox[{"\[ImaginaryI]", " ", 
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{
       RowBox[{"-", "\[ImaginaryI]"}], " ", "u"}]], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"pu", " ", 
        RowBox[{"Coth", "[", 
         RowBox[{"2", " ", "\[Rho]"}], "]"}]}], "-", 
       RowBox[{"pv", " ", 
        RowBox[{"Csch", "[", 
         RowBox[{"2", " ", "\[Rho]"}], "]"}]}]}], ")"}]}]}], ",", 
   RowBox[{
    RowBox[{
     FractionBox["1", "2"], " ", 
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{"\[ImaginaryI]", " ", "u"}]], " ", "p\[Rho]"}], "+", 
    RowBox[{"\[ImaginaryI]", " ", 
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{"\[ImaginaryI]", " ", "u"}]], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"pu", " ", 
        RowBox[{"Coth", "[", 
         RowBox[{"2", " ", "\[Rho]"}], "]"}]}], "-", 
       RowBox[{"pv", " ", 
        RowBox[{"Csch", "[", 
         RowBox[{"2", " ", "\[Rho]"}], "]"}]}]}], ")"}]}]}]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.542905884453125*^9, 3.5429062405625*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Comm", "[", 
  RowBox[{"Lm", ",", "Lp"}], "]"}]], "Input",
 CellChangeTimes->{{3.54290626821875*^9, 3.542906278875*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", "2"}], " ", "\[ImaginaryI]", " ", "pu"}]], "Output",
 CellChangeTimes->{{3.542906268953125*^9, 3.542906279484375*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FullSimplify", "[", 
  RowBox[{
   RowBox[{"M", "[", 
    RowBox[{"[", 
     RowBox[{"1", ",", "3"}], "]"}], "]"}], "-", 
   RowBox[{
    RowBox[{"1", "/", 
     RowBox[{"(", 
      RowBox[{"2", "L"}], ")"}]}], 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"-", 
        RowBox[{"L", "^", "2"}]}], "pt"}], "-", " ", 
      RowBox[{"KL", "[", 
       RowBox[{"[", "1", "]"}], "]"}]}], ")"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.538000189969559*^9, 3.5380002131778865`*^9}, {
   3.538001711349577*^9, 3.5380018076000824`*^9}, {3.538001853245693*^9, 
   3.5380018670804844`*^9}, {3.53800190966392*^9, 3.538001913834159*^9}, {
   3.5380021582251368`*^9, 3.5380021840566144`*^9}, 3.538010677457409*^9}],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{
  3.538001717500929*^9, {3.5380017555161033`*^9, 3.5380017676697984`*^9}, {
   3.538001803149828*^9, 3.5380018083391247`*^9}, {3.538001862595228*^9, 
   3.538001867723521*^9}, {3.5380019109939957`*^9, 3.538001914161177*^9}, 
   3.538002108318282*^9, {3.5380021556699905`*^9, 3.538002184886662*^9}, 
   3.5380106780914454`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"fY", "[", 
   RowBox[{"q_", ",", "r_", ",", "s_"}], "]"}], ":=", 
  RowBox[{"Y", "/.", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"\[Tau]", "\[Rule]", "q"}], ",", 
     RowBox[{"\[Rho]", "\[Rule]", "r"}], ",", 
     RowBox[{"\[Phi]", "\[Rule]", "s"}]}], "}"}]}]}]], "Input",
 CellChangeTimes->{{3.542755785609375*^9, 3.542755869765625*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Simplify", "[", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{"fY", "[", 
      RowBox[{"t1", ",", "r1", ",", "f1"}], "]"}], "-", 
     RowBox[{"fY", "[", 
      RowBox[{"t2", ",", "r2", ",", "f2"}], "]"}]}], ")"}], ".", "\[Eta]A", 
   ".", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"fY", "[", 
      RowBox[{"t1", ",", "r1", ",", "f1"}], "]"}], "-", 
     RowBox[{"fY", "[", 
      RowBox[{"t2", ",", "r2", ",", "f2"}], "]"}]}], ")"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.542755879671875*^9, 3.54275593425*^9}}],

Cell[BoxData[
 RowBox[{"2", " ", 
  SuperscriptBox["L", "2"], " ", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"-", "1"}], "+", 
    RowBox[{
     RowBox[{"Cos", "[", 
      RowBox[{"t1", "-", "t2"}], "]"}], " ", 
     RowBox[{"Cosh", "[", "r1", "]"}], " ", 
     RowBox[{"Cosh", "[", "r2", "]"}]}], "-", 
    RowBox[{
     RowBox[{"Cos", "[", 
      RowBox[{"f1", "-", "f2"}], "]"}], " ", 
     RowBox[{"Sinh", "[", "r1", "]"}], " ", 
     RowBox[{"Sinh", "[", "r2", "]"}]}]}], ")"}]}]], "Output",
 CellChangeTimes->{3.54275593734375*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FullSimplify", "[", 
  RowBox[{
   RowBox[{"fY", "[", 
    RowBox[{"t2", ",", "r2", ",", "f2"}], "]"}], ".", "\[Eta]A", ".", 
   RowBox[{"fY", "[", 
    RowBox[{"t1", ",", "r1", ",", "f1"}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.54275594959375*^9, 3.542755953359375*^9}, {
  3.5427567565*^9, 3.542756762125*^9}}],

Cell[BoxData[
 RowBox[{
  SuperscriptBox["L", "2"], " ", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{
     RowBox[{"-", 
      RowBox[{"Cos", "[", 
       RowBox[{"t1", "-", "t2"}], "]"}]}], " ", 
     RowBox[{"Cosh", "[", "r1", "]"}], " ", 
     RowBox[{"Cosh", "[", "r2", "]"}]}], "+", 
    RowBox[{
     RowBox[{"Cos", "[", 
      RowBox[{"f1", "-", "f2"}], "]"}], " ", 
     RowBox[{"Sinh", "[", "r1", "]"}], " ", 
     RowBox[{"Sinh", "[", "r2", "]"}]}]}], ")"}]}]], "Output",
 CellChangeTimes->{3.542755955484375*^9, 3.542756764203125*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FullSimplify", "[", 
  RowBox[{"Series", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"fY", "[", 
      RowBox[{"t2", ",", "r2", ",", "f2"}], "]"}], ".", "\[Eta]A", ".", 
     RowBox[{"fY", "[", 
      RowBox[{"t1", ",", "r1", ",", "f1"}], "]"}]}], ",", 
    RowBox[{"{", 
     RowBox[{"t1", ",", "t2", ",", "2"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"f1", ",", "f2", ",", "2"}], "}"}]}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.542758014890625*^9, 3.5427580990625*^9}, {
  3.542758225375*^9, 3.5427582256875*^9}}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   RowBox[{"(", 
    InterpretationBox[
     RowBox[{
      RowBox[{"-", 
       RowBox[{
        SuperscriptBox["L", "2"], " ", 
        RowBox[{"Cosh", "[", 
         RowBox[{"r1", "-", "r2"}], "]"}]}]}], "-", 
      RowBox[{
       FractionBox["1", "2"], " ", 
       RowBox[{"(", 
        RowBox[{
         SuperscriptBox["L", "2"], " ", 
         RowBox[{"Sinh", "[", "r1", "]"}], " ", 
         RowBox[{"Sinh", "[", "r2", "]"}]}], ")"}], " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"f1", "-", "f2"}], ")"}], "2"]}], "+", 
      InterpretationBox[
       SuperscriptBox[
        RowBox[{"O", "[", 
         RowBox[{"f1", "-", "f2"}], "]"}], "3"],
       SeriesData[$CellContext`f1, $CellContext`f2, {}, 0, 3, 1],
       Editable->False]}],
     SeriesData[$CellContext`f1, $CellContext`f2, {-$CellContext`L^2 
       Cosh[$CellContext`r1 - $CellContext`r2], 0, 
       Rational[-1, 2] $CellContext`L^2 Sinh[$CellContext`r1] 
       Sinh[$CellContext`r2]}, 0, 3, 1],
     Editable->False], ")"}], "+", 
   RowBox[{
    FractionBox["1", "2"], " ", 
    SuperscriptBox["L", "2"], " ", 
    RowBox[{"Cosh", "[", "r1", "]"}], " ", 
    RowBox[{"Cosh", "[", "r2", "]"}], " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"t1", "-", "t2"}], ")"}], "2"]}], "+", 
   InterpretationBox[
    SuperscriptBox[
     RowBox[{"O", "[", 
      RowBox[{"t1", "-", "t2"}], "]"}], "3"],
    SeriesData[$CellContext`t1, $CellContext`t2, {}, 0, 3, 1],
    Editable->False]}],
  SeriesData[$CellContext`t1, $CellContext`t2, {
    SeriesData[$CellContext`f1, $CellContext`f2, {-$CellContext`L^2 
      Cosh[$CellContext`r1 - $CellContext`r2], 0, 
      Rational[-1, 2] $CellContext`L^2 Sinh[$CellContext`r1] 
      Sinh[$CellContext`r2]}, 0, 3, 1], 0, Rational[1, 2] $CellContext`L^2 
    Cosh[$CellContext`r1] Cosh[$CellContext`r2]}, 0, 3, 1],
  Editable->False]], "Output",
 GeneratedCell->False,
 CellAutoOverwrite->False,
 CellChangeTimes->{
  3.54275804484375*^9, 3.542758101921875*^9, 3.542758227015625*^9, {
   3.5427583051875*^9, 3.542758306171875*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FullSimplify", "[", 
  RowBox[{"Series", "[", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"-", 
       SuperscriptBox["L", "2"]}], " ", 
      RowBox[{"Cosh", "[", 
       RowBox[{"r1", "-", "r2"}], "]"}]}], "-", 
     RowBox[{
      FractionBox["1", "2"], " ", 
      RowBox[{"(", 
       RowBox[{
        SuperscriptBox["L", "2"], " ", 
        RowBox[{"Sinh", "[", "r1", "]"}], " ", 
        RowBox[{"Sinh", "[", "r2", "]"}]}], ")"}], " ", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"f1", "-", "f2"}], ")"}], "2"]}], "+", 
     RowBox[{
      FractionBox["1", "2"], " ", 
      SuperscriptBox["L", "2"], " ", 
      RowBox[{"Cosh", "[", "r1", "]"}], " ", 
      RowBox[{"Cosh", "[", "r2", "]"}], " ", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"t1", "-", "t2"}], ")"}], "2"]}]}], ",", 
    RowBox[{"{", 
     RowBox[{"r1", ",", "r2", ",", "2"}], "}"}]}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.542758245203125*^9, 3.542758292234375*^9}, {
  3.54275833271875*^9, 3.542758337328125*^9}}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   RowBox[{
    FractionBox["1", "2"], " ", 
    SuperscriptBox["L", "2"], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "2"}], "+", 
      RowBox[{
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"t1", "-", "t2"}], ")"}], "2"], " ", 
       SuperscriptBox[
        RowBox[{"Cosh", "[", "r2", "]"}], "2"]}], "-", 
      RowBox[{
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"f1", "-", "f2"}], ")"}], "2"], " ", 
       SuperscriptBox[
        RowBox[{"Sinh", "[", "r2", "]"}], "2"]}]}], ")"}]}], "+", 
   RowBox[{
    FractionBox["1", "2"], " ", 
    SuperscriptBox["L", "2"], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"f1", "-", "f2"}], ")"}], "2"]}], "+", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"t1", "-", "t2"}], ")"}], "2"]}], ")"}], " ", 
    RowBox[{"Cosh", "[", "r2", "]"}], " ", 
    RowBox[{"Sinh", "[", "r2", "]"}], " ", 
    RowBox[{"(", 
     RowBox[{"r1", "-", "r2"}], ")"}]}], "+", 
   RowBox[{
    FractionBox["1", "4"], " ", 
    SuperscriptBox["L", "2"], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "2"}], "+", 
      RowBox[{
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"t1", "-", "t2"}], ")"}], "2"], " ", 
       SuperscriptBox[
        RowBox[{"Cosh", "[", "r2", "]"}], "2"]}], "-", 
      RowBox[{
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"f1", "-", "f2"}], ")"}], "2"], " ", 
       SuperscriptBox[
        RowBox[{"Sinh", "[", "r2", "]"}], "2"]}]}], ")"}], " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"r1", "-", "r2"}], ")"}], "2"]}], "+", 
   InterpretationBox[
    SuperscriptBox[
     RowBox[{"O", "[", 
      RowBox[{"r1", "-", "r2"}], "]"}], "3"],
    SeriesData[$CellContext`r1, $CellContext`r2, {}, 0, 3, 1],
    Editable->False]}],
  SeriesData[$CellContext`r1, $CellContext`r2, {
   Rational[1, 
      2] $CellContext`L^2 (-2 + ($CellContext`t1 - $CellContext`t2)^2 
      Cosh[$CellContext`r2]^2 - ($CellContext`f1 - $CellContext`f2)^2 
     Sinh[$CellContext`r2]^2), 
    Rational[1, 
      2] $CellContext`L^2 (-($CellContext`f1 - $CellContext`f2)^2 + \
($CellContext`t1 - $CellContext`t2)^2) Cosh[$CellContext`r2] 
    Sinh[$CellContext`r2], 
    Rational[1, 
      4] $CellContext`L^2 (-2 + ($CellContext`t1 - $CellContext`t2)^2 
      Cosh[$CellContext`r2]^2 - ($CellContext`f1 - $CellContext`f2)^2 
     Sinh[$CellContext`r2]^2)}, 0, 3, 1],
  Editable->False]], "Output",
 CellChangeTimes->{3.542758357859375*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{
   FractionBox["1", "2"], " ", 
   SuperscriptBox["L", "2"], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", "2"}], "+", 
     RowBox[{
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"t1", "-", "t2"}], ")"}], "2"], " ", 
      SuperscriptBox[
       RowBox[{"Cosh", "[", "r2", "]"}], "2"]}], "-", 
     RowBox[{
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"f1", "-", "f2"}], ")"}], "2"], " ", 
      SuperscriptBox[
       RowBox[{"Sinh", "[", "r2", "]"}], "2"]}]}], ")"}]}], "+", 
  RowBox[{
   FractionBox["1", "2"], " ", 
   SuperscriptBox["L", "2"], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"f1", "-", "f2"}], ")"}], "2"]}], "+", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"t1", "-", "t2"}], ")"}], "2"]}], ")"}], " ", 
   RowBox[{"Cosh", "[", "r2", "]"}], " ", 
   RowBox[{"Sinh", "[", "r2", "]"}], " ", 
   RowBox[{"(", 
    RowBox[{"r1", "-", "r2"}], ")"}]}], "+", 
  RowBox[{
   FractionBox["1", "4"], " ", 
   SuperscriptBox["L", "2"], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", "2"}], "+", 
     RowBox[{
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"t1", "-", "t2"}], ")"}], "2"], " ", 
      SuperscriptBox[
       RowBox[{"Cosh", "[", "r2", "]"}], "2"]}], "-", 
     RowBox[{
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"f1", "-", "f2"}], ")"}], "2"], " ", 
      SuperscriptBox[
       RowBox[{"Sinh", "[", "r2", "]"}], "2"]}]}], ")"}], " ", 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{"r1", "-", "r2"}], ")"}], "2"]}]}]], "Input"],

Cell[BoxData["Asymptotic"], "Input",
 CellChangeTimes->{{3.542758512875*^9, 3.54275851725*^9}}],

Cell[CellGroupData[{

Cell["Commutators", "Section",
 CellChangeTimes->{{3.5380051488421907`*^9, 3.5380051509413104`*^9}}],

Cell["\<\
The trick is to replace the momenta with the derivative of the operator we \
want to act on. This does not affect the momenta inside the operator we act \
on. \
\>", "Text",
 CellChangeTimes->{{3.5380051585847473`*^9, 3.53800522347946*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Comm", "[", 
  RowBox[{
   RowBox[{"M", "[", 
    RowBox[{"[", 
     RowBox[{"1", ",", "2"}], "]"}], "]"}], ",", 
   RowBox[{"M", "[", 
    RowBox[{"[", 
     RowBox[{"1", ",", "3"}], "]"}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.5380057933490543`*^9, 3.5380058214656625`*^9}, {
   3.5380059957626314`*^9, 3.5380060150957375`*^9}, {3.5380060830356236`*^9, 
   3.538006107038996*^9}, 3.5380061444811378`*^9, {3.5380062351233225`*^9, 
   3.5380062395035725`*^9}, {3.53800628560421*^9, 3.538006299473003*^9}, {
   3.538006384082842*^9, 3.538006386068956*^9}, {3.5380081246573973`*^9, 
   3.538008124845408*^9}, {3.5380081877170043`*^9, 3.5380082093452415`*^9}, 
   3.5380106845058126`*^9, {3.538052416292695*^9, 3.5380524354157887`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"-", "pt"}], " ", "t"}], "-", 
  RowBox[{"pz", " ", "z"}]}]], "Output",
 CellChangeTimes->{{3.53800580849092*^9, 3.5380058217186766`*^9}, 
   3.538006017696886*^9, {3.538006092641173*^9, 3.5380061086680894`*^9}, 
   3.53800614714929*^9, 3.538006239910596*^9, {3.5380062862652473`*^9, 
   3.538006299794021*^9}, 3.538006387680048*^9, 3.5380081263004913`*^9, {
   3.53800819306531*^9, 3.5380082114793634`*^9}, 3.5380106849948406`*^9, 
   3.53801076453839*^9, 3.538017470004921*^9, 3.538017536130703*^9, {
   3.538052404979048*^9, 3.53805243648985*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FullSimplify", "[", 
  RowBox[{"Act", "[", 
   RowBox[{
    RowBox[{"M", "[", 
     RowBox[{"[", 
      RowBox[{"2", ",", "3"}], "]"}], "]"}], ",", 
    RowBox[{
     RowBox[{
      RowBox[{"(", "z", ")"}], "^", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "m"}], "+", "n"}], ")"}]}], " ", 
     RowBox[{
      RowBox[{"y", "^", "m"}], "/", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"(", "z", ")"}], "^", "2"}], "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"t", "-", "y"}], ")"}], "^", "2"}]}], ")"}], "^", 
       "n"}]}]}]}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.5380174755952406`*^9, 3.538017491006122*^9}, {
  3.5380175411679907`*^9, 3.5380175969581823`*^9}, {3.5380194577726145`*^9, 
  3.5380194709213667`*^9}, {3.5380196577170506`*^9, 3.5380197444110093`*^9}, {
  3.538019832653056*^9, 3.538019864621885*^9}, {3.538054213611496*^9, 
  3.5380542711977897`*^9}, {3.5380543480881877`*^9, 3.538054425837634*^9}, {
  3.5380545524068737`*^9, 3.538054563060483*^9}, {3.5380547127740464`*^9, 
  3.538054741214673*^9}, {3.5380549509926715`*^9, 3.5380549746930275`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", 
   SuperscriptBox["y", "m"]}], " ", 
  SuperscriptBox["z", 
   RowBox[{
    RowBox[{"-", "m"}], "+", "n"}]], " ", 
  SuperscriptBox[
   RowBox[{"(", 
    RowBox[{
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"t", "-", "y"}], ")"}], "2"], "+", 
     SuperscriptBox["z", "2"]}], ")"}], 
   RowBox[{
    RowBox[{"-", "1"}], "-", "n"}]], " ", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{"t", "-", "y"}], ")"}], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"m", " ", 
        RowBox[{"(", 
         RowBox[{"t", "-", "y"}], ")"}]}], "+", 
       RowBox[{"n", " ", 
        RowBox[{"(", 
         RowBox[{"t", "+", "y"}], ")"}]}]}], ")"}]}], "+", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"m", "+", "n"}], ")"}], " ", 
     SuperscriptBox["z", "2"]}]}], ")"}]}]], "Output",
 CellChangeTimes->{{3.538054220515891*^9, 3.5380542413550825`*^9}, 
   3.5380542732949095`*^9, {3.5380543709974976`*^9, 3.538054426425668*^9}, {
   3.538054555530052*^9, 3.538054563901531*^9}, {3.5380547141401243`*^9, 
   3.5380547422317314`*^9}, 3.538054979100279*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FullSimplify", "[", 
  RowBox[{"Act", "[", 
   RowBox[{
    RowBox[{"M", "[", 
     RowBox[{"[", 
      RowBox[{"2", ",", "3"}], "]"}], "]"}], ",", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"(", "z", ")"}], "^", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "m"}], "+", "n"}], ")"}]}], " ", 
      RowBox[{
       RowBox[{"y", "^", "m"}], "/", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"(", "z", ")"}], "^", "2"}], "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"t", "-", "y"}], ")"}], "^", "2"}]}], ")"}], "^", 
        "n"}]}]}], "/.", 
     RowBox[{"m", "\[Rule]", "0"}]}]}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.538055089032567*^9, 3.538055091193691*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", "n"}], " ", 
  SuperscriptBox["z", "n"], " ", 
  SuperscriptBox[
   RowBox[{"(", 
    RowBox[{
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"t", "-", "y"}], ")"}], "2"], "+", 
     SuperscriptBox["z", "2"]}], ")"}], 
   RowBox[{
    RowBox[{"-", "1"}], "-", "n"}]], " ", 
  RowBox[{"(", 
   RowBox[{
    SuperscriptBox["t", "2"], "-", 
    SuperscriptBox["y", "2"], "+", 
    SuperscriptBox["z", "2"]}], ")"}]}]], "Output",
 CellChangeTimes->{3.538055092526767*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Y", "[", 
  RowBox[{"[", "3", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.53801969861339*^9, 3.5380197001964808`*^9}}],

Cell[BoxData[
 RowBox[{
  FractionBox["1", "2"], " ", 
  RowBox[{"(", 
   RowBox[{"1", "+", 
    FractionBox[
     RowBox[{
      SuperscriptBox["L", "2"], "-", 
      SuperscriptBox["t", "2"]}], 
     SuperscriptBox["z", "2"]]}], ")"}], " ", "z"}]], "Output",
 CellChangeTimes->{3.5380197015445576`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FullSimplify", "[", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{"KL", "[", 
      RowBox[{"[", "1", "]"}], "]"}], "/.", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"pt", "\[Rule]", 
        RowBox[{"D", "[", 
         RowBox[{
          RowBox[{"Y", "[", 
           RowBox[{"[", "1", "]"}], "]"}], ",", "t"}], "]"}]}], ",", 
       RowBox[{"pz", "\[Rule]", 
        RowBox[{"D", "[", 
         RowBox[{
          RowBox[{"Y", "[", 
           RowBox[{"[", "1", "]"}], "]"}], ",", "z"}], "]"}]}]}], "}"}]}], 
    ")"}], "-", 
   RowBox[{"Y", "[", 
    RowBox[{"[", "3", "]"}], "]"}], "+", 
   RowBox[{"Y", "[", 
    RowBox[{"[", "2", "]"}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.5380100083891406`*^9, 3.5380100182167025`*^9}, {
  3.5380100632402782`*^9, 3.538010067028495*^9}, {3.5380101079708366`*^9, 
  3.538010245402697*^9}, {3.538010293312437*^9, 3.538010324495221*^9}, {
  3.53801045193651*^9, 3.5380104616860676`*^9}, {3.538010569806252*^9, 
  3.5380105942466497`*^9}, {3.538010625757452*^9, 3.5380106469716654`*^9}, {
  3.5380107808833246`*^9, 3.538010800973474*^9}, {3.5380114428881893`*^9, 
  3.5380114578030424`*^9}, {3.538011938333527*^9, 3.538012067826934*^9}, {
  3.5380142504627733`*^9, 3.5380142832626495`*^9}}],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{
  3.5380100208868556`*^9, 3.5380100702216773`*^9, {3.538010132078215*^9, 
   3.5380102466497684`*^9}, {3.538010296925644*^9, 3.53801032500425*^9}, {
   3.5380104555807185`*^9, 3.5380104833783083`*^9}, {3.5380105740964975`*^9, 
   3.5380105953687143`*^9}, 3.5380106373191137`*^9, 3.538010688104018*^9, {
   3.5380107682546024`*^9, 3.5380108012094874`*^9}, {3.538011440081029*^9, 
   3.538011458388076*^9}, {3.538011944169861*^9, 3.5380120680899487`*^9}, {
   3.538014256312108*^9, 3.538014283662672*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FullSimplify", "[", 
  RowBox[{
   RowBox[{"Y", "[", 
    RowBox[{"[", "2", "]"}], "]"}], "-", 
   RowBox[{"Y", "[", 
    RowBox[{"[", "3", "]"}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.5380105972298203`*^9, 3.5380105987539077`*^9}, {
  3.5380120707381*^9, 3.538012070985114*^9}, {3.5380122884025497`*^9, 
  3.5380122995671883`*^9}, {3.538013497892729*^9, 3.53801349861977*^9}, {
  3.5380194807479286`*^9, 3.538019481224956*^9}, {3.5380524770051675`*^9, 
  3.538052491929021*^9}}],

Cell[BoxData[
 FractionBox[
  RowBox[{
   SuperscriptBox["e", 
    RowBox[{"-", "r"}]], " ", 
   RowBox[{"(", 
    RowBox[{"t", "-", "z"}], ")"}], " ", 
   RowBox[{"(", 
    RowBox[{"t", "+", "z"}], ")"}]}], "z"]], "Output",
 CellChangeTimes->{
  3.5380105991009274`*^9, 3.538012071201127*^9, {3.538012290729683*^9, 
   3.5380122999162083`*^9}, 3.538013499113799*^9, 3.5380194817879877`*^9, {
   3.5380524650934863`*^9, 3.538052492169035*^9}}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Invariant subspace", "Section",
 CellChangeTimes->{{3.5380125108032703`*^9, 3.538012516312586*^9}}],

Cell[TextData[{
 "The invariant subspace is spanned by ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["Y", "i"], TraditionalForm]],
  FormatType->"TraditionalForm"],
 ", ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["Y", "-"], TraditionalForm]],
  FormatType->"TraditionalForm"],
 ". So at each point the value of ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["Y", "+"], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " defines this space. (only D changes ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["Y", "+"], TraditionalForm]],
  FormatType->"TraditionalForm"],
 ")"
}], "Text",
 CellChangeTimes->{{3.538018024951662*^9, 3.538018090745425*^9}, {
  3.5380525250859175`*^9, 3.538052544670038*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"Yp", "=", 
    RowBox[{"FullSimplify", "[", 
     RowBox[{
      RowBox[{"Y", "[", 
       RowBox[{"[", "2", "]"}], "]"}], "+", 
      RowBox[{"Y", "[", 
       RowBox[{"[", "3", "]"}], "]"}]}], "]"}]}], ",", 
   RowBox[{"Ym", "=", 
    RowBox[{"FullSimplify", "[", 
     RowBox[{
      RowBox[{"Y", "[", 
       RowBox[{"[", "2", "]"}], "]"}], "-", 
      RowBox[{"Y", "[", 
       RowBox[{"[", "3", "]"}], "]"}]}], "]"}]}]}], "}"}]], "Input",
 CellChangeTimes->{{3.5380180938106003`*^9, 3.538018156813204*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   FractionBox[
    SuperscriptBox["L", "2"], "z"], ",", 
   RowBox[{
    FractionBox[
     SuperscriptBox["t", "2"], "z"], "-", "z"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.5380181092674847`*^9, 3.538018119069045*^9}, 
   3.538018157779259*^9}]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.538018125870434*^9, 3.5380181266504784`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Show", "[", 
  RowBox[{
   RowBox[{"ParametricPlot3D", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Y", "/.", 
        RowBox[{"L", "\[Rule]", "1"}]}], ",", 
       RowBox[{
        RowBox[{"-", "Y"}], "/.", 
        RowBox[{"L", "\[Rule]", "1"}]}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"z", ",", ".2", ",", "4"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", 
       RowBox[{"-", "5"}], ",", "5"}], "}"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "3"}], ",", "3"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "3"}], ",", "3"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "3"}], ",", "3"}], "}"}]}], "}"}]}], ",", 
     RowBox[{"Mesh", "\[Rule]", "None"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", " ", 
      RowBox[{"{", 
       RowBox[{"Blue", ",", "Red"}], "}"}]}]}], "]"}], ",", 
   RowBox[{"Plot3D", "[", 
    RowBox[{
     RowBox[{"1", "-", "y"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", 
       RowBox[{"-", "3"}], ",", "3"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"y", ",", 
       RowBox[{"-", "3"}], ",", "3"}], "}"}]}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.5380126935917253`*^9, 3.538012733389002*^9}, {
  3.5380136481803246`*^9, 3.5380136764929442`*^9}, {3.538013723784649*^9, 
  3.5380137652350197`*^9}, {3.538013837914177*^9, 3.53801387906153*^9}, {
  3.538017663603994*^9, 3.5380176641690264`*^9}, {3.538017931750331*^9, 
  3.538017932062349*^9}}],

Cell[BoxData[
 Graphics3DBox[{GraphicsComplex3DBox[CompressedData["
1:eJx0nHVQVe339mnsRgUVA1FCRLAFXVtUBAwEE8FABRU7EFTsABULVGwQCzso
EXAdBGkJ6e6uw6H75bfv9f7znXlmnhlnzjjHfa99XZ91rXXDM3HHIVMrCTEx
scd9xMQke/+srM+83tUzT7DLZ1K22/w13MNHWvWaDasE/YKqv66coyyYttH8
c/+NOtyu5vYuyXnzBV9GXBy0ulpBsFrP/1DFBC1u2kzHNLc7mgL7Ewl/Cv2H
C8K7fta7PVfh3FbsHxD3eorASc101ZGxgwWxYnJnf9VN4toXFz29YjlRMPxU
Laf8ta9gmdschcDlipzrnlDBOL8xgoLaqNCePGlB/vLMmrCI0dzTiy9qw9xG
CnbOsro/Y4CkwG3HwRvpt0dw48KuDl3gNUxwsO+vLcNyxQSX2nxnmWoO5WYv
3zlGtmeQQF560OwZy7rxQvbkPV4RA7hRGjtUggV9Bc6u/ZYeO9aB3Tu4t8dl
+3AzZD+U+hpIC162Tqr9PrYNH99LLJhUJskZFu1QW7pLXDAyOHl3i1ILHhQ8
ud1vsRin4mveY1jQgQY7+xv+ON6ESp5nAxob22C8h/WBve+b8KhzSmlPTwN6
vmw81PsnnA34m9rdU4evLFUFPgdmC9YV2n4MVjHglIfvKAn2WiYwrYzOvz59
kmDqDG2r6atncdviE32maGoLpF79eP51+CiBV2DJ+rHrVLnZNt2rCjynCBSv
793+u3SIILMoO9Z5xCTug9atst9jJggeH9DXe/++n8C3qlll3q0x3JCDrtbh
R0YLNqe+nftdSkZQLSGfkfNbjluQ/PocpzVcsLZ+Z2wPSggG968+73F1KPfw
hrXk4k+DBKdMTpu7rRUT5AS0yjmcGcBVOqhOgs99BIVnvD32VHbiydiZt59N
l+W8JqgvFouXFGyTGmCqKmrDfQZbFoQHS3CS2rObfA/0oP3Z4q2Oji2oPNhy
TEZGFzhvnPPY3KIVFVOS56+52oRcndKIjVNawN1Z//WjCSJ8HX73zJeUBtwo
GiaqUqmHFasOvlo8pAJ3lJl+7L9LhFHCrUVvjpXB5YwtDyYE5+AOe5eZLpPr
saJzmbypMBOCfo8b9Cr/D25LtGval6UlaHD7vjZp8mLO6e5C+beGCwWztEwn
uqxSFCQEKlb/8pnGce1bbnw5oSIwm1k3fbjOcEHPPKWf/cMncvLxdrteqCoK
HHWkm5eoDxBUpMocUhgtz904uvfV1Slygo9fF8wtmicj2Hd9/beVScO4m/LF
Ob4HBgteaFtOBzMJgXTQ6hn9xgzkXm7dcya+RVbgXNbxrgd68OKTTUlW4TJc
x5CyZCtrCcHEnElLOmf36jB0rlxGrDgnNyhRb15HB5aVV175OLoVG/rse2Rz
sAPWfDPr0vzSiK8l+x2a5N6E1y86pF862wiHl9d+21xQjVZ7f5188qQBJzyW
0PxVVA3Vap+mhZYX4KNvV6/U1NXjhDuHbWPGFkLQ/X2aLyYl4OyE1a67HYW4
IUmxT9fXBEjzk7ZtmfQM2lNnjf/1phafuzb2vJx1Dw1Mth22O/APXkc+FzN0
qUbDs3EVN5sSsTpWoju8PR+0Lzqv13eZJtAf3mJeEDeHKz8e/7cgTksQdnPQ
hUGLRgtyBCUhC1smcU+6DX9bHB0nsLiy4mxV2CCBQduq0Xqao7idG871iY0d
KkjaMVdd8pqMYJrqlp3a/YZwT6+d01qo1UcQ3DB92tgIcYFt4A012y2y3DRB
2Ou7k8UF8eNmGz0078LhJqGfLY3Fue1lAS2rNrXikWrNwJ6eVkyF/R5C2zaI
ULv2UugrxNWjjOOjwppwdMRM1TtjRGD5WO3StPZirFk7aZ9QvwGH7A9z/FxQ
Bo9PLnE/Gp6MVRJ9nMesrEe7eYtqs7ZnglXFsguDV75AT68Zqtu21eGljlHT
fQ4Fw2A0FA2d9RfUxh7xlPOuxood3UuPxoZiV2BjzvSuHLjmPcoUjlbip1yv
0ND4DPwp4zzRXrUUNPNCS3ZdKceG04pu7euLsf3cas2hVdVw2WP04wNZpXjj
iO/kxE1V+O5c+YM9H+vhLc8NZYFLjl7Nht/qXLpHQ8LG3xMF63huDBNU5B51
+x4xknPxL/ww1W2AQIbnhqxgrUKY5hGl/tyN5ClDrmwVE0zguSEmaHU4WfO7
W5yz23Pm65y5jfiM50Y7Oj0Yv1b2YitUg5Lr+QnlaMFzoxnFr483v7xMCHW6
K1J0OtNwA88NEW67+bug4EMRjFAogsHbvqEDzw0hLglr9TCQ+Ac/9CU6FtZF
QgnPjWrUisnTLjx7Gn1zhrSV2GTBDp4bFfhHS8tpT04COm5QWmJ5vRhO89wo
Q6edbdcMs/KwY4JphHt5JUzkuVGCw59GVvUtKsUPX0N26dkJwYvnRhGav7my
yvBQDeY/fx5+aFMDWPHcKMQn0d2Cj8n16B47cuC88c2wi+dGAW6P3RnSntCI
S13r/7QntMIcXs9jBUF97+YMl1Dkbk4oMVSXkhJE8nruIzBX3D1Fv1KWO7T9
zs1JkVW4nddzNz706xdb9bcdFD5yM1cPScFUXs/N+MdvmuHC4DrQrYiacMrY
HpHXcz2OGJpzdviyAjA83LGm8mQcJPF67n1uh8UxP02jwGuai5b94Ww4zuu5
HJP1O87OmemLLS6vo6ynFIMJr+cS3F8eZjk+Jxll9ow/f+lDBQh5PRfh0CNe
3zQPFOC6CTEVr6pqoYbXcwHqKXwW25Zfho37snuku+vhDa/nPDx3Uvfb8Loa
3NwYaSZr2wgavJ6zsUFXbtXZjHq85y4K1MlrBmdez5n4ddzFvKznjbijYkvP
G2iDmbye03G2/Wph/qoWnH/KWnf/ww5w5PWcijsyb8kqVLXhshdjByhUdYEu
X+cBgrAjnfUHdw/kVktc6FbQaoK/fJ1bUdloTvbMrCbwuey+9pZaOezm61yL
pSlnVxm+Kgbdxc0zdh8qhSy+zqVoZdBs6r49DjLuaJw/0VgGoXydC7DZ8gTG
HvmI+muH571/XwkZfJ1zcILPmeeDYv7hU+N0haOiGjjJ1zm9Nw8MTG7tl483
wyusHf4IYQNf5xT81+jzrWNUKa5ptBfYvRdBI1/nJDT3kuTKBFUYrz5c97N7
I9TzdU5Ekfea8YYuQgwblvp8vEczfOLrHI+56mfHq6s34MkiLw8vr1aYxdc5
Fkc/0l596lsTBnYMDp7r3w4ufJ2jUXuUypMHqq1YXCgZaBndCfP4OkdimP7Z
jEcP2jHK4IGyckE3OPN1Dseowqxd4e2dmJrsM2vnGTEueVR4eFdPa9D0u4/N
tGZKcr8sPUfFxEpxCRGhRSvnlATlLZcdfdGqEm7vkWgPCG6E49P7Gq+uzgwq
0X/0a+bqJEiff894hZ8Q0puGNRX6JwXNupaboTrwJjqvVj27V0wIh8sL3Y6M
jQ8accThuNTiBEwf9mlKn4tCqP137qzy16igT5o57trLc/CbTNhAvYf18Mpn
bmtP3p+ggZYRaskXivHeH/1hlWINEDpjwP/9F+Q9vuPb+I4KDOn7VND3aSPI
matfHZYrCLK1sjs0WbsOt/T7m7RyUzOMzXx8ZsayX0FFXFv3m3Ei9HU/e/aM
eivIPEi5cuxYYNCiKYpz/e42YmaOwY+Zg9tBtcZUzXtsQNDpHbpt9m3NOO6P
/J45PR1wst3IvUXJP8gbfTKSN7ah9Y07be6tXTC8n73Dj+O+QUZzbjmkfe5A
43lvIne09cDxwrCRYmI+QW4lRhk9PV24cEN1bU+PGKfE9Mx5k56Pkp5/MD2D
HOn5H+l5JdMzJJKejUnPkUzPoEJ6LiM9+zA9w88dTM8mpGdkeobZpOfXpOed
TM8gu5Pp2YX0vITpGTJIz+tIz0VMz7CD9JxEei5keoZG0nME6dmF6RkKSM8O
pOcxTM+gQHoOIj2fZnqGWaTnUtLzJKZnCCc9x5Ce7ZmeIYb0nEZ6VmV85t4T
n22Iz8GMz9xK4vNs4vNaxme4QnyO/8D4/JfxGbyIzzeyGJ9/MD5D9xDGZw/i
czjjM9wnPscQn/cyPoPhcsZnGVfG5+WMz+BIfB5GfC5jfIaxxOftxOcSxmdY
SXxuIz4/YnwGJ+LzNuLzRMZnaCE+PyI+X2B8Bh/iszXxWYXxGeYTnxcSn88w
PoM18dmQ+PyC5Q3uCuWNaMobxixvcDmUNxwob4ixvMEtpbzhQHljDMsbXA3l
DUvKG/dZ3gB7yhvRlDc2sLwBDddY3vCnvLGG5Q0woLyxQZ7lDTuWN0Ce8saA
5Sxv5LC8AZ+TWd7IpLyxmeUNKKG88ZDyxnGWN+A15Y2+E1neUGB5A8ZT3vhO
ecOT5Q3YTXmjhPLGNpY34AXljdeUN7axvAHWlDcMKW9osPzMAeXnAsrPApaf
uVTKz7coP29k+ZkDys/mlJ8TWH7mplB+vkP5+SfLz9x+ys+TKD9Hs/wMAyg/
m1B+3s/yM0RRfv5J+dmI5WcYSPnZiPJzJcvP0LWP5edDlJ/LWX4GU8rPC8tZ
fn7G8jMMovy8nvKzMsvPoLqT5eexQSw/X2b5GaIoP0dSflZn+RnEHFh+lj3P
8vN5lp/BjfLzF8rPFmwe5OpoHjxP8+AMNg9yUTQPzqd5cAObB7l2mgeH0Dx4
ic2DXBHNg5dpHvRi8yBnTfPgRZoHn7N5kOsMZPPgY5oHHdk8CKdoHmykeXAc
mwehleZBGZoHi9k8CGU0Dy6ledCTzYNwnuZBc5oHd7B5EAbTPJhO86Abmwdh
CM2D92kenMnmQVhA86B4AJsHm9k8CKfvs3nQmubBF2weBCuaB9tpHvRk+w3O
mPYbE2i/sYbtNzgl2m+Y035DnO03OE/ab8yg/cZYtt/gUmm/8Zb2G25sv8F9
pv1GP9pvbGT7Da6U9huzab9hwvYbXH/ab9ym/YY9229wabTfKKT9Ri7bb8BR
2m940n7Dgu03YBftN5q12H7jBNtvwFjab5yn/cZYtt+AObTfuE/7jZdsvwHG
tN9YQPuN7Wy/AT9pv2FN+43tbL8BUbTfcKD9Bu3ruP/Y13H/sa/j/mNfx/3H
vo77j30d9x/7Ou4/9nXcf+zruP/Y18F/7OvgP/Z18B/7OviPfR38x74O/ndf
Nyzak0v3UhcYVDwe6eLHcc13//g8OLpIEKF6UTljzlxBf8XOQGXllVz26vJG
5deGgpHjm5a4bWnGtw1JDjkhHRAQckH9nbAZxaYrDgusFqGjruvh89KV4JVe
+3fUznwcdnGia79PjXht2WXfJaebIOaf/qX5svU4tzhA4+fZekzzG9O50yoP
wtJWWJ9Qi0ENXZ1Pi+c3YHdfhbfX7tTBjvz7N54alOHXC2YFSkuF2LjnTFJ+
ViRInp4y+63jV2gKG/ZUZ1gb/t31aHXwDDGu9dJ7Vexpw6hp6/sbXGpEHytD
jJEXwmTuotuEw0W48WPMaj33Zjwzpd5v4cg2eHZEVk1hXQNK3DS8uuqiCBeG
jR67NaYYenyuS02/9Q8Fr2S+5T9pRNmMN9G7fURgfcczsLyyEouKUu94ZAsx
rl/j/f5GKfAz/8hb+9vHMOnkLUFwSy2eumlbYqzwFvqOfGzgaJkAh981b/HN
EuJXC+MJYQEpsNs0GM0XfccA51d3kjyq8eZVy8h1o2JR99YUjaSsPNh9q05t
wPNKjP6zqkf8Xw5eHKA+pnZGGViKzIPmWHbj/aZVOxvFpLh+QdsT1t3qxlXT
RZ/rPVrQ8Y3XqB7/RoitzdRLdSpF92v/tt2Y3o4Zzn29fQ51Q9zQwdr2Rs24
XfBy6Kgtjajhe+DfIo8qUDlb73HjQyqmit/QSBRrQYOlHytPvGsGp1eSd8Ml
6vDtbafKGcX1aPH35/Sh4/Jh//2tb57HfcQFqppNXuV1uOyzl6z2s0gQnH10
793haMjaqu74+nU9znBXfqaqngdXLjTN2G3zGzdn3Tr9Lboam+Xeq2l99MXW
TSZnHx/LhjT3bepBk4XYx2L10e2hETAo4KnUDRsBDNRfXSBYUIlPdVvzE5xS
sAGmGhnrlUDbu826joIa9Pmhf+Rqsx82ZgvGxHHp8Not30J6ZDl+C+2/JW1u
ITpP/doDmVW9c5bDxaEPqnD0kOmbcwan4vABy5dJPysCCZOUP9pLS3HkNBvl
QTMrMNJJtPTuwHo4KD/NNcG7GPd8sm+2jK/Di/u6nd72b4QPmQkVL0NlBIvX
X3Hdd3Yg9+qV+oQtO6UEG0sk3j7SExOkyn691zi2p5d7beZf/lbgVJlj86f1
+jWhVebHgOdSXFq9aK2FaQe+xXMakN6Kc6t1/9gKG8Dnm+OrQoV0fPDsXYjU
5E50+z37QPDBLojsczdxooYIsyRmLP4p34jnhyYX6OwpB5ncd15Gaz7jPBun
Fx/zhTg1NtIEJDJ6dbh80MSHUbCktuLqslE1OGv1zXEtV33h1cOrurNmZsFh
nktCrPn7Sn2YKAX26l0cZqnuA/ULBhhPvF2BGp0180w0InDYzjsup8cUw1ie
V7U407vuce73d1Bw2V+tWywFClu9k0KiS/H5QxW7tNBMdEl75blDuXfO5jlW
hXvMvD8dXRmDt5f9/jQqrgC+PL1eGXGnGDsjdm/Q2lCMgVo6h+0z62BdWK0H
F1SIIwNGjDudVInbarZ1fPUSgZ2vdtvKWQXoPCBmzanTQjy1aJzn55VNsKDy
TuBffTnBLsd1nw4ZjOaq+k51OxbUR3Dq3PIRak59BaNvHeqdHvpwIcY7Tk8r
fI/v2u3DrjrKCh6uu7JVWr0v9/5HV9fXjhbcHa5mqqPbiRYNVxZLHm0BvYq5
1d56ESCZvzdS8VID7iy4G2g1uALkfr9T8gpIhe4S7YQVCTUouSrcc1JrKgzJ
+Fe6Z2M+vOTzjwg1o81nbZxQCHWbawKe7vIGnYT9F/IUe3W47GnIseY3sPSL
Zkf88BK4w+eiOpRcMeCvwr2/8GO6zE3R7GRYtnKhSjxXjNandEarKMVgpu4V
Uf2XClDm81IVDtA1lKpqeY93HC+cO1qdD6HmzpUWxwuwz1C92P05WfikW26P
5vxaUPo0yCXkQy5+sLj+Qs+6GDd51IlmmdfD0LtHdvmaZSH3tHz+0D2VKHB1
GBJ2vwFkgwZ4B31KR7S6HWjSX4jPFU4a2P5tApn1mTuOSNfj5Sevpbunt4LW
wa0XMk62wDs+/8gJFlrptG4ZIccdDopr61iWiB3TI+b8+1eIpTMcZXt6imDY
JkOdzZuFMInPOULcWlB16MnbAph8qTtKOjoLbFLm9leVykQZ1Q/D7pRHwfTW
wEi53rneg88/lXj60uUWR89I0I9dIFf9sxC2P4q9rp2fhM9cF5vlfu+dQ7W3
SqZeq4VtfC4qxWpr+WNX0Q/3enY+ytpVBo6zG8Tuj0jAw2FXNWQUkrHaRmbq
OAMh7B/ydvYI8RgUnnfK+XUgHx8e6tl17H09DFMOnJe4LAK9LPv1v7CoFPM/
nJM5s7QBGrYaRXz/lYjLbc/d/2TXjiOvL1Z69aQbKtbx9YGTVB8dqo8hP+90
4oa+3sgJpLkHFde+BYIEd5yfa3JRaft325jYdBha9iTU6FMtZLK6QSbVbTTV
rYSfd1Ix5tbYU1NrvUBms2FOYFcN6LK6QZEKq9scqttCVh+Ip/oMoPrsY3WA
U1SHWqrDQlYHaKA6PKY6dCUN3Fbr5Y8PP5v5nLzXid4FAyfOsxDj9jF/cf3I
X+9XMH+NYueFVXRedzrvInZeGErnVaDzbmC+gxXku2Ty3S92XthM5x1I523N
4/0IK8mPy8mP1cyPkL+S+VGJ/KjBfAdxS5nv1pHv5jN/wX3yVyn5q2Iy/97h
A733QnrvAcxfMJb89Yb8lczqA4+oPj5UH23GJW49cSmBuPSM+YWbQX65F8j8
8oJxiXMkLjkTl0Yzv/Sel/nFmPxiwvoLh9RfhlB/ucv8AovILxvJL89ZfwFl
6i8nqL+YMr/Aht3ML3bkl2TWX2An9ZcD2ay/aLP+Ai0xrL8MKmD9ZT7rL+C2
ivWXaOovQxl/wIf4s4X4U876C9hSf5lE/UWccQmWE5f+EJcyWX+BIOovL6i/
tAXyvIJQ4pUn8cqL9RfoH8n6SxT1lwrmXzAi/8qTf1+zPs5pUx93oz4+ifVr
Lpz6dSj162eM8zCSOP/enHH+NuvXcJX6tT/16yuM8/DBiHE+nzi/nOU0sKec
9oVy2hjGedBZyDj/gjhvznIaDKec1naG5bSXLI+BAeUxmXssj2mzPAY9n1ge
63+O5TFTlrvg9EiWu8aZsdy1ivVfUKb+a0X9V4blLvhJuUuSY7nrCOvL4EJ9
+Tz1ZXeWu+AX5a6nlLu2sLwKtymvdgayvPqE5VL4S7lUQLl0P8snEEr5ZMQS
lk/+sVwKCymXHqVcOoLlE+j/neUTmSssn4Sz/A/vKf8Pp/zvxPIJeFE+cad8
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
bq5osn/JqyuTVUWr/z7cN8VMh9Nf9f7TuCnaIkNPxemeigNFs4clzB62Yjw3
KU91ct6rsaIUlQXefF9Zq+ezV18boMrNzcnfEzJ0pOjTB/7qKSrQv56vf30o
NyyCN/wgkcnG+BN8X9nJV29ZZwUrcQPym2VmaykyO3NSovKubXxxvh+XxP9F
bn1EygFPzvB9ZZtPf/rheLw3JzM3Mwrc5URXu6zM95VdYak26Nnk7pz04x7R
En+6icY8tz3L95XN6sUbWIrLFtbZCRcv8FcTpKfyVwdareevZtD5lLSO7yv7
FDy9V49twv0DqxY+GlkLR+HgI76v7NTtz49WqNdgpMeMAKO+pfBDNDaM7yv7
dZ5/xNtDxTj7Xu8Dqj8yYeHtMQv5vrLf+McVp6GNgcyUtzlhIPz16Voi3sqJ
Y2ZzP86dMv+wcKbIVHDo4SJd2cWbOe+JXJP87mwPO3WRB2/m6Yqijb3Du/6M
4pxfjX/0avxw0Y5zMaeNNXqLeulv1B46aDCX6udieWGskuhGPm9gWZGuabyO
aXx/ju2rguiumsdOvk+yp+cgcc+h8txxq2L92KbuzM6iTti+resKl+WEz21S
ot/X1zrxfZL9T7ldSv0lyV29EKBh0NYG9bsV/Pg+yV5PAlfu3teG/QZd+K75
uR7q1ug5832Sy7u/O+h0oh5VzKZXrMutgCeP+asOtDB/IuZXoG5oiVZoSS6c
upH5ku+TbNPr8LxfKnk4zi4995VqLBTqWH3k+yT/i5u04Z9HLA67u60jR/Up
3lS+t4DvkzylrvL7bZ27YJE8dpHd3r84RjB0BZza8UnhWkMciHSSLoS35tD3
E0UnzT9E5f+exrFPLdHM5pyzCrMGiSb1/eE3q0mVy5rybfeGg8NEpjxthPYR
1RpNqTeaMpCL/sVf/UQj43o+5vt+S0srFWj37Mu59PoyfJaWnOggTxsRkqIU
W8tkW8vu3AJhvyVFfomD3/N9vxsPj5u4aYkk5zS3otTMopnw1gIba5Ssamxb
UPj8KoYDrse6/QxtgNPr5wbeHFqLU8NM3Sa1FoDlqt53+b7fB7buPPw5txg3
fqs/eTg8AYIHtHzi+373fxO5PXNjGpYJ//4SNlrxVzXUftuf+W3/D7RT0Dmu
oBODDwt54qiAhJSI/Ta/QmDMNXHepI5MfLnC+Qjf99t8wZp+IX9SISrIHe3H
F+Gbj5myW8+VwNabcataVxbAkasyRX3LK5D5bRGkdFk31qIcKuZsPr7jUw2m
Cf9BTTRf92jGmmANjn2OEk0SeKO/aOo5+aAvEcrc3vEPDo5/0FtkIPBGd9HU
g6P1Do7uxRWc21ByboOEKFngDQnR8rlzLoT8k+Qybjl/19OrB4E2PrTCcLkz
I+XONKMU/zGyBBYJvNEIK0OfVTnNFaPfSbHErPZkZmeuFn7kaQTmfczHvC4z
K1l5gpLAG2LYvGKjeKHUX3QYO3X99OpIvCzwRgUkGXVb/urEMbgxYkJtwa50
VBV4oxQS5HlDx4Jg7ssFKNDGhWLoXJDe9Scbjj0vcXheUobaAm8Uwrdzf370
yC+CHuUfFhrZi/GIwBv5oJDaS2fh/kpY3Xb+636LOgwQeCMPkuWv//iUUAM5
vdRl9Ec0IvOjXJjGu3FsPX024yjBn1VEn50y25WlhnOWPb63TJKWFk0X/FlO
VGTrsmF+WXfu2/IzM9Qiy2GR4M//IKUiJqsiphWrl/aVMe+bCMMFf26EzOea
F2f9qMZJY1ZPqFlyBGwEf64B0wFzzQfMzUWv4qPPio/+Rh/BnytB5V73wT+W
RWGfCNlJ9jYZ+K+Tv0pgNh+Pp36FnTxtjC1AG8GfC0F++ZdfwzMTYNXT+7pn
P5biOsGf8+F4T8+TU/bmAiqO9HYpr8IgwX9zQfbfyvwNOcWQa6VbJfOvBi0F
f86GN4rVrorVlWDe3XZpd9t6fCD4cwZcMr+95ERqDfgeXek/PbsRnwn+nAap
a8+Wpj+rh/c7pWXeQgu6CP6cAv4XrSRzTZsg5HzLgj3Obegt+HMStMdajBhS
3kKfHThMsHNvkb96YsGB7fLcJfeV01S0GlBfsHNzV34/qkUnvQH72MeYXJ9Q
gvMEO1fBzEUuxotcCrBt2/7GbfuLcKhg5yIw7Fx08eXG3xiuFTXHrr4Y9wl2
zgUQ4t8ncBf8uwy9BDtngvfED+p9ov+CutWQmgO1ldgm2DkFPJovf27umQMW
jrzgEONewc6JMDa4//O2gUXQljbO1/5DLa4R7BwP9m98ZxRz5ZCx+o6++/N6
DBTsHAeMF8Ug9UHl5YgXjbhGsPMf0BCuOngnXM14R7DzL1B722zl4NkAy/98
/6nn24qPBTv/hJ5Pf3vdH98MqR+X/Lb+2Y4vBTtHQrp+ZuPD+61QNM1+llru
P/QU7BwOIPByO4wcUt7FHBIc48OqAMF9pnbjBLr9Jc0djps70PJwasDsKMf9
Z7eW4VLLhdv9f9Sj3aZxXX9iA/J0zPJ1zOJxq4nPFhMfMU5p2NIl7SICTH1V
lyvJXwODWXeP75QQI9MbwQF9pGf3lZ4dCyMF/hDjtMpxXZIjMOBgQp+t2vMz
wWnNm+5GzjUoJcRB/4ChXXIm4XQBCPpRog6/Cc/vE+DB5uYAx+bmYN61N78/
z/QOOJTmd2yMdjWkHRiQstiiER8KxOEVkGqd3fPtsFrwDd554bhGMx49wl8e
AfN9bi3wuVUPoVMVwqcqtKJyze1TNqruAW4hQ/oebWmE9PJMh2mdbZhpIesa
HPoxYMiX4oaE1S1QFrSj34vmDpxR/9htDr4PmD68+7Nk9zaYq/KycFNLJ+m4
dwHs8x/FG0luIvNnLoz8+TD5szHzZzxE/txhx/x5FfNnXET+LCZ/Hsf8Ga3I
nwPJn+2ZP+PvcObPb8mfg5k/43vy5zHkz3LCc6XiR/LnVeTPR5g/oyr5cwv5
82bmz3iQ/DmN/DmC+TOqkj93vmf+vJP5M44nf35D/vyK+TOOJn82J39+z/wZ
e/zHn92YP2Ma+XMB+fMP5s84i/x5BPmzOuNn7hvx8wHi59mMn7lq4uc04udl
jJ+7JBHj5yHmjJ/HMH7GSuLnKA3Gz7aMn3Et8fNp4udAxs+4gPi5PZzxs4xg
51Js1mb8vJH42ZbxM/5bxvh5CfHzRsbPaEf87Ev8HMb4GSWInzOJn7cyfsYX
xM9mxM/PGT/jBeLnr8TProyfMZn4+S3x8wfGz+hL/BxE/OzP+BlbiZ9biZ+z
mN7gTElvmJHe0GR6gzMgvXGM9MZMpje46aQ3KklvpDG9wa0lvVFCeuMz0xs4
jvSGMukNM6Y30JL0RgrpjW5Mb+BP0hsLlJneGMj0Bh4hvbGU9MYNpjfw1Eym
N46S3hjH9AaGkt54RnrjCtMbWEV64xDpjWlMb6AH6Q1Z0hvHmN5AOdIbK0hv
INMbmEB6I5P0hgnTG6hNekOb9MY4pp85J9LPTqSfRUw/c9qkn4tJP5sz/cw1
k36OJf08mulnTo708yfSz4eZfuYyST8vIf38g+lnbCP9fI30szTTz7iT9PNO
0s+HmX7Gy6SfjUg/WzH9jMdJPx8h/RzK9DNOJP0cqMT08xamn3GpH9PPC0g/
P2X6Gd1JP/cl/ezC9DOKSD8Hkn5+z/Qzrif9bEP62Y/pZ4wl/VxC+pnFFy0u
j/LBUMoHl7J8kDOkfLCN8kEvlg9ymykffEH54G6WD3J9KR/MonzwFssHOQPK
B/MpH7zP8kHOl/LBs5QPSrN8EPdSPriX8sE4lg8iUj54n/LBJpYP4nfKB4dS
PtjA8kGso3xwPOWDz1g+iCLKB40pHzzD8kE8TvmgiPLBIpYPouJflg8+us3y
wTssH8SoGpYPzqN8kPltBe6hfHAa5YMZrL7BeVF9w4vqG1NYfYNbQ/UNQ6pv
zGD1Dc6Y6huaVN9IZfUNzprqG/OpvuHG6htcEdU3RlB9w5TVNzhNqm8oU31D
itU3uEqqb6RRfYPxhgTXQfWNHlTfuM7qG2hB9Y3uVN9QY/UNzKX6RgHVNy6z
+gbmUn1jC9U3dFl9A19RfeMw1TccWH0D9am+8ZfqG4GsvoEBVN9YSvWNRay+
gZFU37hJ9Q2q13H/o17H/Y96Hfc/6nXc/6jXcf+jXsf9j3od9z/qddz/qNdx
/6Neh/+jXof/o16H/6Neh/+jXof/o16H/63X/fhinp36TkN0ou9k/Ts+Ig5l
tv91PjhLJNDJND2RM+/maos54dN1oWiDXepWvo+xY/ftk7OC2vB98PLc9+JG
qPKKnsz3T+6rbLHxtEwZ7r6qFT5ocw5U7x3kwfcxHpRft9j4WBe/hqiNMOxe
A7P7zJjH90/OvRV6eevWbJw9btDboxOiYaby3HC+v/GqmwPeX75ZjQbqL+4/
XVAMOoaXGvm+yhmVplvy0yNx7Nbu0S8veKDare2/+T7S8ornfX5oSnD/sEv0
draA7oKzOnzf7Cej9s//NViMkvZhn0bZ5IO1crg930c62n/m5lnKLdia5ZU6
ZEUd1D6NfSv0zY5VaNkQXYAjteqjp1z/C7r/5OL5PtLBjmZrd3jX4pCa8LzS
sjJYa/zhE99P2+6buK33okQsLB/fL+nGIWjJOlbN99O+v3N9tsWQt9hP8KtY
lOraFb7Pc2CNx+Uwv0RcXjTa03qWF4yxxG98P22j+KnSywf+guTtywz+pmfj
ioBHpnzf7HINzeWSfzNB4UTvgErNYgxpd1fWs/4HV+zel9dLSHOp0q7pK6//
gweh2g18P/aJB6K5Tt96zOo3/XLyxSJgvNQK+y34AP4PF918K310USNYCglS
PUz1PpAIL8oxZv7dl9c+JsGEWSus+f7kJ5dsumP/vhFXxzsVREhVw+3AP/21
CmqgLMy6ud+wHGx5PWLTx9+f4PK/mbrvS6oh4VLtcZ2nkdjjrU3PtzY/8Y0r
f9XAFEE/Z+O+XfwVDLImPp/5/u1Re7XXTvr0FT70/Ob48FAGjpXMNeb7eK+v
wfpNIRE4cOka64u7OGwf8KB3kGEZfM9YqB57MRGCG1sLzYwKUZenc64Sqo2/
HzzT6AOOvb/0jBGloOB+yiWwpsv6yXp50L7jpDekleNQa7+3fB/vTYVpdzIU
kiBs36hU6af5GP5UtpDvc95Ru7VFfmopyA8+PeGWfA3Olh7tzvczzxtdlWX9
pxo653oeedurHoPnGe5xCZEVRbg8vbfnhDz34XtFtw2bu/T5i/HSj4wkRBdc
rH0aVDrxuUunmmdMKSh73TzH9+HXl5q7Tv6ZNHdHIf+E5bI2GL5nxiN+rsHK
Xw7H7MR1mGq5RKFwSApUHDFTkxnTDppF58wD93WgvorEe9VJtXD2+fqL/FyD
cv+0zBk7SvDJ/tpfFkvdYfdVn3h+rkH10gcokkrFXi9EG4Y7R6GysMGVcOar
sPOoL+TH6XhL4KWu/9/Y6KZibSKum7Z/0zoNb6w/fv8iP9fg/aGX75dMioA7
6u8mHhtagMsFvqqCNY9HLSr2eo+9lxbKdUgk4sc9tpLBP4sAJg4uSQpJg9Wb
1FZtUitDgcYOlcM/m8XdDiyOBsOBv6cP/J2L6mujFSJvFsDYgvNjtVYVQMjj
JwZH0qpx3stU5Pv2mxf5Sx6LL4P19pGlHu9qUSfOWNFUJxdKKhcudjgmBj9t
y4fui7t0wNNrrb/nKYkmOk4wObBgEOcw/NMb2wA50ajVfe9oXOwh2r5jbs9G
kOPkXo1+Oy/vA5wT4ld30X5ZjcOyGj24c15t17zamkBvBn+1wzzpg6bSB5vw
rofRdg+jCDxZp6XP/y61+97G2G0KpRi571H5G78kVC1xX7Y4thIUaga2jW5O
wmk1QQd2rM7BO4L+qQVJ1ak9LUbm4Z5pt+7e3/IFda8mJvHzO0IWvmhzaHyD
y2+Yv/yjWIhCGQaqwYDXA3djcAuvP3UT8OS7w1v4uR5hptVpY0dHQ8Xrge41
n0vxl6CXyiHdpjIgv+kDZP7s1etgRQ4eFOobubBEYeemPZnpUDswQ3eKQRVe
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
qCW9pP9UpSJUnHgx3K8rP/62a3yq79FKtL6Y3MLPfxl9Pu/hnR9/4G7jm+Yk
7bwuPaYk5ue8zNf5I20zLxt0tZoXwYBStHuxu5rv859VVHTNrKQGI9WX5Ye0
lsKixOKF/LyAHbdWdC/vVoQlKZ5PR69PAcuqXsoHXGph0Kobtz97l2DBoaMf
987OhlA6Nxx2dvUfGXEyztWIWmU+0hc2Z0un8vMODGavnJ/u1ICv+mmtXVte
Cf1jNhbzcw2erT1tOdehClceG3JY81MeOPqOfMjPQTD5aL+tV2UOymjOqU89
Fgotrlat/JyI3nweN6sNz1arDBqwrQbO6ppc5edBqO2tGGCwtA6vnOlpilwh
6ATmP+HnPtxMPVsm9aYUvWOK5q0IT4S7G8NW8HMi8numdFMSp6DurtHjD67y
wvXMbmBNdntFdrtW/M2Ln/vw++ixXEefZEizNng/0LMQXzN7wjay5xyyZ+0N
hav8XIY5Wz032JnkwzZJp6H7rSpQV3Q1nJ/fcU/u6vILRm04787tHQW1JZB2
uMe0vvpN0GsLl52UV4MHRWdBaU4K5NiJByzvrIW8OinfQs8CjHieO7f8li/+
ZX4CIx8xP0Hyk8fDFLfzczqWzLd6/szlF7w1Ms84O78Ay5n/gAb5jy/5z8FK
bj0/p0NO686GV5sz4Y+9x6Cik2U4ifkVDCW/CiK/6jexp7LMFSkR/Pp+0j5V
gjN37+bye3gsuKY2qO7+2Axf5cf2avxViyVv9po2lLvh0mXDNnV7XgO3jcKK
Vp0swvlfLJ1WtOTgY4YLuEe4GEi4+FQpeZefkzLmZ9arpQfjIC5g5uR051K0
YHiBAMLLOMJLzdiTdzCqGlLjVi/pf70SOy7cs9wSWYm3Q1dsmqCVCK+vGEw8
216IQ4rXcC2fanEYwzXEE64lYxmu/9TdC+fnzjy+XjApKTwKTpvof0xRqsJT
DO9QR3i3IrxXM7yDHOHdkvDeY7DAS1hHvDSGeAnZ8+Bbep5B9Dxy44TnxyJ6
/hp6/lTGY3j5PzyWzHgMtf/DY7ns+fE8Pf9xev7NjN/w//ntHPHbfcbP3Hvi
54HEzy6Mn/Ey8XPtasbPymzfufm075do31ez/cXntL+GtL+fmD8gkj+EupI/
MJ5Hb+J5eeL5T4zn0ZF4Po943ov5AyqSP0SRP8SzuIa2FNcmUlwbyeIavqC4
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
ZryNW4i3hxJvyzOex6fE89XE88+YLsK7pIt+ki5qZ3EfV1Lc30FxP5XFcTxK
cdyT4nh/FvexmOL+JIr78Sy+4xmK7wGfWHwfxeI4HqU4bu7O4ngJi/uoSnHf
jeL+PRbfUduOxfezFN/XsTiOUVdYHC/6yOK4Oov7qElxfwbF/WssvmMgxfdn
FN+HP7kRxPejbnTdbu2g/Bf8028GyHflTfosvuNPiu/LKb7fZHoAF5Me8Cc9
0IfpUjxKutSQdOlkptNQmXTaNNJpRkyPYSvpMWPSY9lMv2ET6Tdj0m9qTD/j
CtLPK0g/I9PPqEf6WVqa6WfSmfhfnXmvX80tfm6C3TEjQwP7cpTN+F67vUc+
VBS3yRYq1EK5mbX/3twC/Lfha6F+cQo8FQRcPTTv3vzoz1Ux/vE/9vjRhiLw
HyXrwvePDTj8Xb1IqQz1PucMD/maBd7Vavb8fIfFium3JSdmY8TtiDnPJCKg
2aqnXJ1ulz40Oma/cnQknl73rGnImm948YyZDz/fIXXCRAOrST5we6GFZeu2
JIReb/7wcys2PvEpONRajiNWO2yc8i0TNF42LuL72d47HrfKVrEQFaduvLQl
4Q94fpI4yM+zODsyrrNxbyLeFRc8uH/gJa5/wi+gCkK6vPXclLf4SVx4ftDN
v+jvNcOCn2cx4YPDEOW2aDi5ZAg+S8jBqw/7ivh5Fm+LFV+9fJoJLTcyrkXl
FaOvkGA0wnYJjZYxh2vRL8wlq49eLtw15wmxART8+S8qsalDXXX+97+Q6vrt
MT/Xo6lXu93tG8WYHuuz4wT+BKkN+1/zfXp3rLiZxyXmoNVnWcf6/OV4YfMe
a37eh55bny7m+YkJ1weHKK2NRa7mgA0/72OwlbJeyS8v2HX0m11tdRbKdZP8
yM/7mHVDc9iU7wlQMrbT/pNGV/6d/EdZI6QJ9L5Lf7qdUIOqeQrbKtZFQh8h
HjXA3D429xe4lmNTy6rTQ367Y37TZid+Hoout12i7XYGnr6hDCZf/+Lg4FEq
waMq4MHlup/x5xDP3XHVkTydjauP33Xi56GEpV/IncMFg4eZZmLIjULcfCOh
mZ+HIiU2PvTzSjZ8K/OSCLxYha+pT+ZM464rtAfnKLyXmINLhHgtI3Lj+1Ad
k+GsqG9STENpKz9HZuyUn4ucLRpRsclz8tVFmfhaOLdqgLfjekT4Ktfi5Z7p
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
    "], {
     {RGBColor[0, 0, 1], EdgeForm[None], 
      GraphicsGroup3DBox[Polygon3DBox[CompressedData["
1:eJxN3Hn8blP1B/DzPOdLJLPMRMiQeQ43rnmeSqZMl8iYmVJxCRmSsSJkqsiQ
RFGSWSEhU4YyhkpEgwb6rffdn+f1/f2xX2edddbeZ+99ztnrs4Z9Fpz0ma0P
GHZdt/Y0XdfX8fkqzmeuMmvXeGNV5qjyniol1s0SGddmrzJ1rs0W2amqvD9H
1+ZMvWmr/KMqvlLHGavMXeW9VaarMleuO3+xGn5fHeep8qdB1/2hjjNU+WPR
L9Zx+ioLVJkp/VwwR/36YI76vnD6pC+L5Ki/H8rRmF7pW/8WrfLnav+P6ctC
aUP914r/5/T39aJfquO8xl91367xvGrcRV9c9F+LXqbKB9LHv5T8XzKWZcPT
3+Vy1N9dqt67JTd9ld2K/l8dZ6zyRpW/pe9vFv12+jlj3etSckX/tfj/yJje
V/xLiv9O0W8V/091XMy8Fn+aKv/Rnzp+u2QGdf3vVaapskLxP1pl6fT9PSXz
75J5q+g1w9P3v5Xs1FWWN95BG8Nanqm26rhilX8W/c86rmS+q53vVDvvK948
RV9R9ExFb1fHt+v4bsnsUPS/iu6q/LvKsMrq5raOa9RxE+9P1f1uyc1QvNkG
ra+bVflv0VMNWh8+UDLzV5m7zt+p8p4qE81v8a6puvPW+X+qzD5oY1qk+N8v
/vwZzwfzzFfI0buz+7C96DOXzIHGUWWZolerl/wjVX5XbSxW5UfF/1DxZ62y
UVXZTv+LN0edb170qmNtHDtorvjvH7T+f7jq/rjOF6vzD1b5RPE+VWWv4o1V
ma94S5fMTUUvUfTedZyqygeMr44L1nEb31jRCxT98aIn1L3WqPJs1Vt9rPVl
ryqfTr+2r3JLyU9TZSHPvuR+XvRyRa9c9G1Fr1D0fnWctsriRVsg3lvlw0Vf
p0+DNpbPFG+6Kkt6BnWvNas8X20cWtf2yFg+OtboQ6ocFt6eVZaqOpPqeFCV
w8PTz3VKfu2x1t9jqu05q2xSsoM6zlLHDYu/et3jl3W+ep0fUsfpq6zk3al6
B9f1ye5bMvcVf0Lx1x60+xxT5VDvUZWVi3d4HWesskrRx3atrn4e4T2t8pHi
f6lr49H343Ld+fHh6fuSdd9fm7uSX7/o9aocUfwjvTtV1vAu1vXfFL1h0esW
/UjRGxf9eeOqMrHoL9Rx1irrFD1WbcxW9JZFv7+OW6ePHx+0fpxZZYNq59G6
tmnxph1rfT2ryjnp3wlV1qtrJ9XxG1VWKZn7vWe+g6q3QR1PLv7ZXaurztHe
2yob1bUPl/wvvX+D9h3Mknd0quI/Vefb1/mWdf2Zoncq+vg6zl3lY0XPPNb6
cZm2izdXla2Kv8eg3e/SKicWb54q2xRvupKft+hJRX87Y/halZO871U+WfzL
M45zq3y3ytdzvm1dO6+OV1SZv2R3qPPzi56v6O2K/mbRp/hGquxc5x+rPj9f
9KeNp+gXit6n6K/6pqrsXvTpdfxglU/5rqtvCxV9YNEHp3/XV/lRle+kL9tX
Oy+WzH51/cfh6e9N6df3rCl1fc+6flXRPwnvSmtR8fcq/tVF35h66pxpXamy
d107q46LVtm36Be6pqfpv9mqb38s/mHF37368OeiP1v0XkXvWeWooj9Zx/8W
/5Ci76o6N6Tvd+eov/fk6P7n+darfK7kfxGecdybfv+0yop13xWqTO8dyXXX
Fqt6h1a9Wzwb61aVI+t88ToeXsefF3+f6s+7df6FOr81a+fOxT82/XukyqNd
o/XxsRz18fEc9euJHN3/tznq45M53lflqRzvr/J0jr+q8kyOD1RZucawUpU5
qixZ/fli9ePB4v+t6KWqHFPnn6k+H1BlctG71vFPxT/COl7000XvOGiYCPaA
Rf4afU0PwkDwBvwB38ARMMYIJ8EY04YHi8BSc6TONOE5h4vUna4bxzowBFwE
I8Ek8BGsAT8d1Df89Eo3jpMWyHvjCKPAOAulLf1YOOcjzOQcRvpQ+gAfLZo+
wUtwEYxxSN9wEqyz+bDhnpe6cbylrS2HDT+9nHvDFUt343hohI+WzTV9Wj7X
Xq72p+obvhrpadf+Flo/+4zH3IxlPM6P7Bt+gof+VPR7g4XcG5aYUOVjw4aZ
Xiv69bo+a98w0p/rOH3fMNVrdZypb7hL/9ZM/W2HDff8q2v4aK30eSxYY4Sd
pgkmOaZvmAlO+mLfcBj89EbRs/cNL/21jnP1DfO8Wcd5+4adYKVhcAa8BCdt
3DVctGnGMnvwhb7BPFMFh8BcXXTo8X3DT3DSW0UvEOz0d8+6b7job3VcqG/Y
CT6dMRhj52HDWNMOGladOTgEXoVF4UDfnHXi5q7pbtho26I/XvRpGe9X+oaH
4KS3i16mbzjnlDouPGg46Z9FL9k3jLTnsOGqOd2neIv3be0YCybarWsYB3aA
JaYORtq9a7hpgWAO2AnegktgJTgJ/oCZ4BM6DsbRDry0fPHvqTrLFm/fYKdF
iv5P8VfpG16aNvjogK5hJZjoM13DR7DOgV3DRnCIPvy76BX7hrvgpo8Gu7g/
XAFjwEGHZyz6d3iuwUirDhrG2COycMlq1d6v636r0VPBq8t7xiW/ed/WqGmK
3qpv+vqwYCdYCA6Ck45Oe/AAnPHNvuElGOmQ8OAQWOuYro3n4PAmp3/Hp/7/
qu7afcM8cNG6g2CSsSZjPOsPGs76ctFHBS99tM4/GwwGO/mY1+sbXhoUvWHf
MM8Xg53gpdmCkU7vGl6Ck87oGi46M/3WJ9jjrPTxnJxf3DfcBWvBRvj6CR/B
F/DT5OAiWHT24CM45Lhg1M0GDWvBJMYyNczfN4z0Th3X6BtefbeOa/YNl54Q
XAQvzQ3zRl/DQXDSJV27PzwAT8wTfHRx1+6DB3/AWpdmLPoOn8BdcJG6+vm+
kvl43zDPfMFI8Ad8BGvATycPG36CtU4LXtql6FODwWCnGaudbfuGl2Yqeoe+
YZ4zgp3gJVgJTvph+gdj3JD+/jjn+nVjzt3/ppx/PbjrwPTvJ7m2cDCSNeXs
4CJYaJHgI+vM14KR9h80nKUufPX+6ufOfcNIsxe9W990N4XxrWHDU18OdoVF
9RX2uLMbx0Z3Zz2zrt3bjeOnu9JHvF9mDL9InZvCcw4nqauf8xS9X9376EHD
S3ARLAJPwU4wyuLBTfDJBcFjn6/zbwZTwWZ/r+Nxg3HcBDM90o1jpke7cZz0
eDeOk57oxnHSb7txnOR8hJOe6sbxlrZGmMk1WAlG+l3R8441jAQXLRms9Puu
zeuXBg2nwlXqGgvsgQePzMU27BteZUtbu+k1emrFYfMPbFbH4wcNS/ABwTn8
P0P6uW/YZpmSOSUylxV96qBhjIuKPmHQ6mwRGv+fRZ84aHWXK/qMQcMG/yr6
K4Pmz5m6bzJouAzugXm2KpkvR94RH/6By/4c2ZMGjV68ytbDdg5X/KHafKlv
GGnp4p88aPR0faNfL/p7xT8r9Ax9G9cbvpfin5l2rir67PCnDiaar8osRZ9T
/DfNb9/mAT1b38b1VuaH/JJV/lP018KHz2ApOOrrg4Zd1goNP8Axy5f8edHd
X42uh2+XLf7pg4Z3Yb1/pL0/1n1f7Rt/m2GrA/OsUPQ3Q38idWGnufs2xv96
Z/r2XP5d9LUlc35kriv6gvCnC45bPPODXrXK9UVfmHbMJ+z2kcwneomuvV/f
GrR3zHzCdKtl3tAfrrJ95hlmWqnoi0LP17dn9G7mHE7ks9px2OYfPjOvffhL
1Xv++77xNxxr/E3yXNT1LEZ4EVaEjzyLFfOuw/Tw/MrV/qX/73nAeTDeJ4v/
jUHDcjsVfe6gYTM8eHRi13jw59pFr1Iyl0UedsaHpW8s/rdTd47g0JWL/5Pi
f6fo91ZZsG/vAHrhvj3H6QbtGZFfr+RvLvq74S/at2fHt7lq8S8P7TnCtuuX
/K55pvDlR4q+IrTnCPNu0LU5R3u+k/J84c65g5FX8fyK/73wl655fq5vPouN
xxr+tL54hmgY2NzBzTCzd2GW3OviQeNvFhoOha2tQ54FO8t8mVvP7ZJBexYw
9hrVh6sGDdPeXvQ1dZyryh7DJoe/RN/mH/9TeaYwLVv46tCeBTy+le+rb/PP
H7hU357RPHkWc+eZ3lny3w9/4WD2dfLs0FsXPaHoa9OOZwTjf6xrzwi9rjkp
/g8GDU+f3LfnBTcvU3P4Qt9ozweuZgtsOtZoOPTTee7qeg4wNrtguap35aD5
G83lwpnPNUv+h+Hvk3lbJG2pCwv/ovjXh7/6sLWjjX3ZdMOmQ5eIHbBF1/yy
/K1w+1KxG7bMHC6R+byzb35Oc23e8He1dvTtefF5rlX8H4XeP3ML3/N7sg20
f2bf5hPWn1gyP47M2kXfGD7cD//DyeYVvZtx9a2dvfW5b/PAt/yrqvuT0MbO
PtjPOhtbYaeiD8qcwPYPFv3T0PcOmy2yf8n8q2/zzmZZNTYKH8vDJXNz0St6
P4r+2aD5Ttfq23jRxsEmYMtMKP4NkV+35G/JNeNjE7Bx7hw0PMyXuF7J/DzX
PlDP4YG+2Spf69u4YP3bc4Sr/9u38a+WscDIR+W+q2fs6/ftvmtV+Xrfxssu
MBY4+vMl87mMi+1wR67rz2PD1j/8J4q+q45rGnvfxo7eqG995oN9ediw7ffd
t+h7wvf81s7zvHXQ6GNCsz/YTRuU/C9yvkHGzuZZmP8w9o+xsxPYCDA8GsY3
P2yhz3at/xsMxv226HMzFrbUKV3r/4YZ+7pj7X1aNc9xQt6BX+W5wPawNMwP
Dz8waHYMv+jGbMZBs18u6Nv8uHZs3evu8J8cNnvrK12bqym2l2+/b/OzeZWt
i/7loPl4t+jbPGxR5XdV98HIPFv0Q+GTZW+x1/qxRpvPDUvm4bRzbNdsusl1
vHfQaDbdRiXzm0Gzm9h1H4/sfYNGnxl6m8hvXPKP5Pze1HNfz4S9d0LmatvM
s/nZLvPGTsFnoyj45pKdpe7XMofsvPMzJ9tnrrxvbNZT8w6jv9C1OWGLX1D0
pX2bHzbXZX2bn50zh2RO69rcste/WvTjkeVDNp/4F7pX6vEhv1r8p4rercpL
Rf920Oy4r2Ru0dv0bQ53Nda+zc9uef+fDP+9Y83eNJ+PDhp9CZzTt3N+cjYn
W5VN/dig0ZeG/lTkN602n8m5/u+Z93CT4j+ddthQ+Gwsha3HVtomNuu3ujYW
9DVdG9PeGa+x75U5Wbb6PMNYu+a93iHv+Vf75j+6Ou+zd9t6QkfTEbuUzOF9
81HCzc8Omn15S+aTjXttxo6+2DuQeWZv/rXoF+t4UJWdSua58F8r/vN1PKDK
60W/UMfPuF/fxo4/y1izd83bp4r/u7TjiM+OZtOzqdn1vx80Wgxiuao751iz
FXeKjcvHrv9syZ91rS+HZyw/7lvs+JT04bCMi91Hnp23d9/ucUjO1WW7Xd23
sRyZsbDbbuvaGNnTt6b/+NcVPSl29g9CP5OxH9s3nylceG7mhD37TtEv5b77
940WI3h10Gxctu0fBs32/HXXbF58dvr/qu4rkT+sbz5oY3yrji8Pmu18fp4R
+gd9k2e3smO1yW59K5jioa71AX170Qf2Tfa53PO43Pf5rtm5VW2KzcfWYw+y
OdmbI5887Mgvf3Df/PJsy73j7/F8r+9b/oA6L0Ve3Rv6lmdAnq3J5uR/F893
L7bPoX3zv7Mhf9S3HICT804elf6P7NXFMofmW4xju/hyLir6xr7lBnj/4Vl4
FQa+qW85AWxIdgn7hN3w99DsFDbfV0P/MzTb8PN985+zo9iBp4f/2b755dl4
n+ub/53t95O+5QyQu7lvOQP4Vw5b3gC766i++fDRVw9bDoH2v9A3/zwb7Gd9
i/uzVdhV7Fg2E78+24xdBr+zkdaic/sWB4dBp4o8PluNvFwE9ts5qfue1J1Y
9NF98+O71+S++ffZReyqcyNzS9/yDfDlKeDD7T/tW26DeTiub/5/ttDlfVuH
rUE/GLYcEd/Ll/oWF2D/3DBsOQpo8QE2DPuFHYNm47BXLwp9a9/yDdges4bP
3wJPX5xnPUeeO1tmtvBhdXNyafgn9C1+oJ2f9y3/wbUT+xYbYJ/c1re8BfSp
ffPpw+4/G7Y8BnbCT4ct14Ftw65ga7ApfjhseTDmYb6xFo9w7aS+xSPU/XLf
YhbqshWvSF12A9uDD//2vuU6uO+CkWGPnNa32INnPXPk8Y/oW4zJe853IYbH
n3F632INbAP2mhiEeTijb7EJtsFdw5YngZ5/rMUy2Aafic21W9fsoh+EPqdv
sQOYe6nwJxX/rL7FGtgDFw5bvAHWZyvIvWAv3N23/Af8e/qW5wCjn923mAL6
/mHLjdA+mwSmh+fP7Zv/GfZdYKxhdPF9tgpMD88/MGw5EPD6h+LHhlEWHGvx
BfzDY+PAw4fG9lH3g2Mt9gCj39e3nAe4/P6+5Ty470PDlhtB5ry+xSHg+2/0
zU9O/u5hy7kxD4smfgEb/apvOQ/kz+9bfAJ2lzsBix9TfVh+rGFu+RgjewPe
Xi80XC2+cEfoh/oWw4VlYW18tsPjw5YPwX747bDlo8DHR4VH5sK+xSbgiW/1
LTahnQf7liOBf1HfYhUw8cN9y5dAw5KwJnwidwI2hVflS8DHMKocCVgWBmNz
GCNbA869L/Jw8b2Rv6Rv8Qz14VP5HjCq+IV7wbRiFr/OfdkHsC/cCyvhw7Hb
hk/+98OWh+EdWGSsxXTMA7+fuOrK0Z/0Cp3y7b7FmGDN3/Qt1wL9nb7FPODO
R/qWd4H+bt/87zAoHAfPwXWP9i2nAl9uBswJT8rNgC/hJZgU/+KuxS/gS9hS
zEI7MCFc+Xjo04KHtf+HYcuxcA5PwTx08WN9y6mA7V4ZttwLa/HjfYv7w233
5ptb1PrRtzgI/hV9i4+ou1hiLupe2bcYCQy0ZzCee30yWAuWe6Jv+RtkxDhg
OPjtqr7FRdSBrx/LPMBlsN3Pg93Iw3jiIM+F/suw5WHAbdf0LfYBb70xbHke
6O/3zQ8PG/22b34V9HV9izHAX9f2LT4Fk4lBeNYw2AXBV577k33L7SDzVN/y
J1x7um/5E/DWEol9oOEiuQvzBi+h+TthDLHkFYOp5Bnwq/P5y2eYEgfoW74B
v/viie8YI3l8uOiPqQvziAWoy0/O9y4/gR9YXOD19OEfuS/f9WaRmSd8ugBu
WSby/MPPDVtekXVJHtfP823eMWz5c/TFVvlGpmC2QcsD4DvkD/9Hxjh1+BO7
5mPHXyfycgPgBHFzNNzFfy7fgL+Ob1kegBwAPm2xE7r+E5HR5+3D5wPno5ZD
wNe9UuiNgnO0A9vAfvIGNo/eR8NO/MxyBuAiPmQ5AHxrO4XWfz5euQJ08a6h
+YRXTt0pPrphyxugc/lsgecpMfexliuwbTAMPjwDq+Ab16TU5TfmD5Q/8Mmu
+VfRMAw/jHgue5lfAU0v8H/KFdita35OOQF0LmwgJ2DkwySzdfhyCIyFL5Q8
fylfKP7uwRvqGgt/oNj/rl3zZ06Tvq0Zet+u+RXlCtDFfIbk6c39w2eH8h/K
Gxj5DqdLn/kGxfQ/1zXfndg9fwJ/3PRpk49OvJ5/hg9uhrTPLyfG7/08KO3s
G50yY+7FtzZT2udPE4vni+NLQ9N3fGJi7vwSdCt5OpTPa5a0zwcOI+2U+Reb
p5vE2uTY8NVb58V0r4r+ErM/I3oNfWzXdLFY+7nRU7OnD2ix+POy/ouL04/8
V/j8Y/xX4vJ8L/w9c6UPfFv4U3TfsMV8L+qaj0g79Ag/0dzpj/bF4623e4Tm
6+DTEKdm5/LhiJvTm3TofGmfP0fcnJ9n64zdWsR/84GMnby6dNZ2qcu/xJcj
/k5P8ZssmD7wB7gv3cefQ+bC8MXd6RR+FfLsbv40Y+c/OTgyl2XOPZfJXdOP
ngW/C7/JIrkvX4o4Ox3EHkHzvbBJxNnpFz4QNH8pHSSePfIZLBYZtHj2yIeA
prP4LsSy6RF+APStXbNNxbvpFDY7+rauYQwxZnY6e8o6aA08Jnzy7D5rqPXT
Om29Zk9by6es+11bj2GXt/MeGi9fE98IeWs7O5o8HcFXIMbNJ8A+VRfmsU67
FzvYWjtlXe7ac/aus7n57fmc4AS2Hv4q6bM2n+1a/s9myQFit1nHrXWwLYzr
W7aOWlvFzi4PbV2yplpbrdNsMbQ1lm1nfbe2s/us19Zqa6f1l81kvbSGvj/r
hLXDWsJuWj1r1xWRt76xk6zX1mprM5r9ZO3XPpvYd+/7Z0eyqdfIOsC+seZO
6po9NCFrmjUVn21k/bM+irlYL62bYkP3h299Y2dMzJrGprAOWgOt2doU22KX
rJ01zdqJXjJrJHkxDuuudthGfBX0MV18d+5rbWRrmJMv5l3aMu8GTLthvinr
hHXEGsOOsD5aG+kcemi0LuJPzDqkLv82DLxR1h/YcpN8s9Zj6/Uq+datNZ/K
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

        "]]]}, 
     {RGBColor[1, 0, 0], EdgeForm[None], 
      GraphicsGroup3DBox[Polygon3DBox[CompressedData["
1:eJxN3XXYLVXZx/EjPHvPpiQkpUVCUgFpEEVRUboOKSWHPHBAUrq7GwkJqSPd
CgagoJQoLam0EiogIPLen2f99uX7x7rm3utZNWtm1vreMfPMvdUu64yfZMyY
MV8bjBkzaR3n6o8Z88VuzJif9saM2WpkzJh1Kq1baesc16u0WP1tzTpuXul7
I01eq9LZ1cY5la4tectKa6f+Nqm3fqUv1d83quN2lfartFOlnSstXf1+qdrd
uOTvp+wGlcZV2rDS2ErbJs/vLdKnPpapuktU3U1KXqXG/uWSNy1515QzlvH/
b7y75Ohvu+fcjHFCyjrvLw/aOH5Qablqf9leG8ta1f43Ki3Va+PeLO2uUGUW
r7ztS16+5OV77RzXrrJv1u+V6veydVy6185jt8r/T/3esX7vlj6NY//Mh/Fe
Wn//RqXvVJkNqvz6lb5V8kZ1fKvyVyt5xTp+NW2sVPIqvXZOB+X8ndPKlb9M
5e9R8qZV9+36/d36fVyugT4PSJ/mZu1e+328c6l5+EeVX6Pyjq3fP0yd9aqd
b1ZaufK/Ypy9NldfLXndkg8s+Wslr99rY/l+lf1X/d6kfn+9jl+v4yHOu/L/
Wb83qt+X1XHVSqubu8p/r+TNSv5mHdes41GuT8ZxjnunyuxYaVzlrVJlvlbH
gyv/2yWv02vj/1bJW+dcVyt5vZJPcB3reHQdzxppY90l83V/ldmm0hn1912q
7Y9K3r7kret4Wh0fd7+XvFWvjWEt5Us+t+Q1Sv5eyae7t+p4hmtY6VrnVGnz
yjt80Pq8rNIe1f6klXav/JuNudJOJf+6/nZ9pRs8c5W3c+X9uOS9q+xIpT3q
942Vv3alHUr+YeX1K+1V8pHV/hGVFqq0Xv19fOVd5PzqeHHa/USdXhvDUYM2
xhsr3ZTx/qTSodXepysdVOWmcO9VW7uWfFsdN6i0Z8k/r+PYSvuU/Kuqc13a
P6baPLrSIpWOr3RcpcUq7Vvlrqm/31np2EEr/8tKP6s2Nqy0d/39avdmpU1L
nujer7RxyXdlPozzd5W3RaWT5Ctb6bCST+y1th9wXjXmGSsd5X6p48yVjin5
Dvdapf2M2f1Y6VDrWY3nF1XvwUqPjLRroM+TKv/EQZubU+t4SqW7S35opJU3
/j+MtPNX5+Hk+f1LY690SLW/T9WbrdKn6/fd7utKR1T+aTWuz1U6231Zx7kq
nV7yyXWcu9KZJa9d9bas8ueVfJ97rNIJ1uc6XtBrY9lg0MbxfKVTKu+xOr5U
6R73XaWjK+/FnNsfK72Qcft9WNWdpcpc7D7rtXN4zv1W+TNW6tffDqqxTFnp
gPr7A/X7+5XO6rX1zHNvrRxbZbev/Gsq77pe6+PtSudVvQUrXVl5f6i/b1vp
fM9P5X2h0uUl/6nytqt0UcmbD9pY36l0Sf1+pY7vWTPr7zfW7w9L3qHkS0t+
teR/jLTyf6n0bs775Ur/qvTX/H6kyo+rdGHV2bGOl9Xxtcp/zDNX6Yr6/ZMa
y5cq3VbyhXVcrNJNnpuu7Ym3lLxFjW3XKn9HyX/2fFW6tuRf9No4PlXHkV7r
21gm1N9vqN8flPyEZ7nSVfW732vn9H6lXq+V9bvrtbx/V5q05H/mPJ6rertX
urnynqnjLpWuL/n5Ov6g0q0lz1PpM5Wmr3RtjXfZSr9J3qQZ108rb5lKd5c8
XaVJ8rcbK++GSveWfEUdv13pl2lLPWPco/r5lfWg0ow5B+OdIX/3e6bkDazF
NVcHVdq40szJm6zSntXOXXWc0rX13Ff6bcm31PGDOu7mns745q40b/rQ5y01
ru9U+l3Jn8/4/O1zKe9c50tZY5k/R/3vU+3/vo6zV7q12vhKpftLXiB/n6XS
F3L8bKUFc5y10qF1DodU2sazWGnpqvvryl+n5AVK/knJX63jvtXHAyV/sdc4
CR+sn+cDY+CXbfMbu+ANHIKTtsrvtZKHUdZLPWyAe8al/p1d4x6ss0v2MHu2
/vADrsJaymOnpcNI+ARnYRMcNmQ7feOY8ak/5KTx+Tum2C3jwxS7ps5u+b1s
GAljYKfdM+5fdo2f8NB5/cZJS/Zau8a7f8511/Rn3PgCZyxZ7azTNXbaOWX9
7dx+Yyy8tWbGauw/r7I/q/Rgr7V3UOYFP9jvzyx5uWpzs67xzwolb9E1trmn
axyDky7sN2ZarteYCttglWXdy13jLuPDIceMNObBObgCix2UOfl91xgIlxj3
camDj47P+WOt43Juy1T7G4bxHuga0+CkS/qNmVbtNR7ERxhjpSq/bdeY6ivW
3q7xEkY6O2NbNeyERXDQORnDI13jJDyE/XfvGouuWPLWXeOxlUveOXx1Vb/x
0wbuc2tg17joW2Et/LNi+BODvVTyXpXu6bU93H6OYVYPI2GRVaqdPcM/Xy95
n7ANfsFJOOSJypvQa7y1UFjFudzQb+z1fXNS+fuFfzAP1sEW9u7De22/xiLY
RL9rh7OuHml8hZHoLOuEtTDKU13jPGyHZXAS/tA/FsAh36y8g7MnHljH6Svt
b23pN16yjm0YPvp5lf9WlT8sTIWb8NAdI42Pjg1/YI270j5G05d5MHZ8MeSs
Ub4YaWO6K3/DWPjH+NfFmVmXNghb/azyj6y82Sod2Wv8YL9/dqT1jSMeTLsP
5/evwzAY6dWu8RLW+g6uC1NhJ8x1Z8b1h9Q/tdcY51Hth7sOrN+/Cf9gEuN+
JHXw1cm9xic465GcG77DdveXfG945tj6/V1sFl56s2tMiJHWqPzTw1S/Dy9h
RYz0XMa2ZdjpmfSNVbATBsISxvBgv+kCOGd17BceowdgCoyFtTCGc6Qj0Bte
zjm9mHZXw8NhUToC3eAS4whHnVO//1bHP2TPUA9L4B9t2/9xwKNhGIy0XTjr
TWMNU2Eb7PR2+jXGd1P/8X7jHpzzlzDD7SU/Gf7BJFhLeePfIYyERXAWNsFh
+A7bvVXy0+GZifV7o+r3x+Glv4ZPMNJmlX9ZmOrZ8BJuMSZcgT3wFH4ak/6x
xEj6xhK44oXwD87ZtNq8JDw2IUyILXCW8thpt7DSZBm7NrS7ftU9Pyy6Xsnn
hj+3Kvmq7OnYAUPMm779niFtz5TfuAlvTJtz+Ex+j6MrhKN6qTd9xjdz6u+Z
dRFXbF3lrw6PvZo1EwsNmcn49wgvYRE8hcFmyRxNn75fD0fd596oMreFbfwd
J82T8eGkuVNnnvwectJ8Ge+8qaP/BfK3IQ/ho+0HjXPss1+rfh7uNV7DR/hq
oV7jpAVzjvuEiRbu/Y+xtLstHTCMSuejH9NVMYznwJ5+ROW/12v7x49K/mOv
8cM7JT8Z+ZySH+k1Htiv5Cciy8M6mOfvqYuB1rTnx06EpegweGzLynuq12wa
j/ZaPp75euX/qdfKr5oy7D/rJp/M9qRt9qvz+60+ljig5Gcjv1vyc73GFY/1
Gi/tWeUv6Lff8sdWm4/XcQVjrflZfNDY6f0q83zyPyj5hTquWOl7Vf7FOn6l
11hv2ZzTuuGmHUbaXJH3KXnzrs2b8pt0ba60M2QRHPLDfhuDfr9VZf6SOdEv
bjqyyhxU8qu9xidL1xiXGjROOrDyX+k15sGAeAAj/rjyn07+RSX/OXX3L/mZ
Xqv7Scmv1/GbqYOlcJR5w0SHW59THgtt07W5Vf7jyn8t+drWL2YbG54yz+O6
Nv/fNi9dm8/vZG4x3REjbU7Ie2WunO/eJR9cZf6W8j/J/K+e+cePbFPmaa3I
n6r8N9LX5f12jXDYlinvWuxbc7bwoOUfUmX+njbNk3PHUe4n9zBWP33Q2mc/
Wr1rewY9A2/iT6z7cq/JJ4603+vm2r7UazJGPbTqvd1r3HZYye/0Ggde2W/1
Md6Erl3fsb3Gi5gST07Gjpf8Xsn/SPmOHa+OG1Ya37V7gHxFv/W9Xq4Rrjxl
pF078qG5Lhj2sJIPrzLv9prNx/0g/9TMJ7Y9reSf5j7ZNNdxs9wbR1b++722
jpw5aPssXvtB1+4Nbf6w8hcdNAZ1Pb+XNs298rj6mn67dtr5a+YJo5M9I9j9
zV6bEzz9eNfGjB2nKvnDXuPSvbo2t9tWeqvX+BsnX9dvv7dJu1tnjq/PdVF3
6qr7UepOW/J/6rhdr/WLhfF9Fwa/YKRdC5x+vvsq12W7XItxuR+O7jf9eptc
X3VPqvz9c+3YEm/qt+uLjyeLTnBh5pB8csn71fx9cdDO99gq/9+Ut05jaZzv
OuBw67nxTsiYj6nyH6evA6rNf/eaXRHTKo9zj6syY/otn09hfP5+VL+V194U
g7YGGc8M1c6nwtt7RZ/40UibNzrBT3OOe2V+po6eMTFzRT6v5JlKngQbucZ1
nLTf7Jy399v8Y2jnitvpDidX/hRhYxwvHwOfUHkjYe4T69iLDvBc186dfHiu
r/bZYbE+zp9h0OSbc150i9tK/mzJXb/ZLVcdtLmja8xex0G4+pCUvzLnQs+4
3ZznvA7utXEZL13giK7NszaP79r5slXOWfJkKX9SHSdP/uFp86qqe1K4+76S
7+y3+TeGXvQD+s5U4e77M4ajci5/zZjx/19yXvSEqXPE1TvVOc4a/W321L23
8qdJPXb4eSp/2ugCp9RxyvRtbMZ8XM7lmIzzt/12XsfmfI/J/Hx70OaCTjRv
HadL3VO7dn2Pz3U9Mdf5jK71xQZ7ah2nj3xaHWfIOTt35elFp+VcTs450hke
DZ/TJfD2/NXmZ9KXOaE7/Sb8r/xLOffTMj8T6OBp8+RBu2/M1f513GTQ2Hee
XKMnqvx84eEPM/5R3ajkh/qt33NyvvSb31X+65mHszIn8p/MONV9quQz6ZKp
u0jJc5T8o17jbToDfl9r0HQy83B21+bqXM9n1+ZK+YVKnj35s6ZPdt0Z+60u
He2Crv1mN56p33Qd+XRUehy9VT6ZPjtzv+m29L0z+s2vqY78i1LG/NH36Hr6
NWY6zuklz5m+PttvepFrRC9TfmhnviTnemaVmTvtKn9G2pk28uOZK7o4m/M8
/aZD0dMWiS7yRs6R/OeRNif0ktdH2lyRnx5pc0ovo+N8vt/0ObbldzL/9LiL
una+fLhnp1/Xa8mS50/+vCnrfli8a/cHPe6pnDv57VwXfVzatXO8uuSlSl4g
8ll1/EK/2cA/1286Kd3w8q79lu98r08+vdS507XPrvwF8ze6Ff1tkPHTI/9W
ZTYctDZdR3+j602W8d+Yc1885T/KnNyQ+XFvXpZ7ic7vfngo80B3/M9I29vt
6/b0Kyt/0X7Tiyd27bx+5t7uN71zipw7XfZj90Dm099e7Lc5UXe5yl8sdRfq
Nz2Ybnt9dJ1PRprsb3fW72u6Ng8/L/l7g1bevbFC5X8x+ZenX/r+SiV/KXXZ
CejObAXGSTecvNLNVWbhfrPhr1by4pGd168zfrqY8nQ7531XznG56KNT9doY
jPnTvdaevvg4Psw53pPxK//favMAfvNBy9euNumAL/fbudBtr8wY2P+XSB6b
/KcGzVdOT3ut387xvpShV86W87o38/ndkr/cb76AlUteMuVvz/nKp4uqS/e8
o2s666IpQz+eOnXJc/RaGw9kPP9N+w+mvvxFek2Ppu9Om+PDkacKe9gfh/on
3XOSQYsboCt+Kfns77/omh1fPt3xjylP76Q/8qstE5ke+uuu2b7pbPRj9iL2
bzrfYykjRoBM3/lV1+zvdLlJBy1mgLxS5nDqPNeehb9X+ZFBiw3Qfi9+f7oi
3YzORZ/qBs1f7zcdha5C//haZDpLf9DiA+jJdLw/p+5vumZnp7Pd2zVbNx3s
oa7ZuDH6v/st7kH+YNBiBpSfbNDiAehvv+2ajZ68StrX731ds8/TzT7st3gC
Mp2JbsbfT9eii9HR2P7/EpluRE+xDmB8awI2Xy/59CaxBvQjLI0/xW/QkX7X
NZ+CdicftJgB+s/9XfMBkB/smk1fefrZy2nz7q75OMzVXV3zkZjz//ab/9uc
7BD7PB2DjkJXYQOnf9AHcPUkXYszoLfwA9Bt6DV/6JqPQP7qqXt6mFxd+suU
gxaHQPd4uGv2f/rVH7vmJ6DD0FHeSnlrprJ0mW2STx7qVNqfatBiFdT9U9f8
B3SSx7rmO6BjPNo1/wLdY9C1mAYyvcK50iMm71pshPL0vfeSTzejY9Avnu6a
vZ5u8+lBi4XQ15Nd8x/QGXZJefb/qQctpkH++LSpnTFdiz9w7tMMmr9bm3/u
mr+BXjftoMVFkJ/tms+CbkD/oRvQC6bpWpwEvhcj8XHyp+tarIPyO8Zn4W/7
pi67/Qtd8yng9ee75lPA6HQCcRv0gs90LY5B/mcGLc4Bf7/Rb74H8vSDFvOg
nRe75nfA97N0LS6BLP6BPoDV6SS9yGIqyFh350FjcTEA4wfNd4DX6Tbq0iNm
7VpMg/w5uhZzgO9nHrR4Bsz9Utds4OSXu+Y7wOi7DJpvQPlZBi3mQf4rXfM9
TJE93F6OnXaPXwOXiIXA4fQLMSGYG2fyL2Dlx8LsU6UMjp46+QcOGkOLxxjq
Ho+Gx9XFbLPHt4uPP9+12CBMd2+OyuwWHwRWfqNrPgLl5+tanIT8v3XNH4F9
5xi0mAfy37vmn8DBb3XNh4FxxUg4PhO2nSmyGAbys2GZmSPPOWjxFdoRRyF/
lHt7jUexK18Gxn0l3PrZyJhX/qthW3Eg+JZvYrbkf3bQYlRci9e65gcy7wt3
LX7CteBTwBD44R9ds7HjyH91zW+BHRftWgwETp170GIqcOpcgxZrofw/u+bP
kP+5QYvHUBfTYTu8J+4CW+JJbEh+M1w5T/L5O5THgeIl5GMq/o550w5+JGNg
voz5Iu8RXwa2+3LXYizI73XN74Dz5hm0GADy+13zceDFJboWq6Gtzw9arIX8
eQctHgPnibPAfhjmg675S/zGVgsn/99d85coLx5DPu7iB8F5k2fv45+2t/4g
vgxzi7lcC3y1fNd8sVhtvkGLecBVe8bfIf8/XbPDy/+oa/4IrLZi1+IzyB93
za+Bq/aKfwEb8VngM2w2/6DFZyiDueTjqAUGLTYCW/FTLJn8Lwyaz147n3TN
l7BUvzGSeIWh3V6cAzs2uz15kzCSmIM9wj/kbSOLN8A/S6QdNlS2dPls5PwF
4gcwGJ/CCulrv8jsvdiGPxtX/DDl2YRXST77NHZeJPf8M13zZVvz2cNdF/Zv
vgBxBViODVw8wGhcQr/599nf2P9XzrngEPEE2OCA5LOLYgZ1scdFqWtsbNFi
AtiusQH/ov2XPZnvHyewk4kfYCs7OOWVuTj5h6R9/bIZX5667Pxs1OInxE6w
G4sZYFvDA3z/54YHyHiJDXm1jP+KlMdU7LriAOzdfDr8PfZc9lhj5g/FafrC
Y2y5YgXs19ek/KlhDPlDO7A22ZPZXPh5rfOHZQxsemyG/PhXjDS7F1+2PYsN
k++f3x8DrJuxsU+KD7Bf3xSZfZVtdq2cL3uvWIELU1fMAfskm+EGaf+69IuX
bk8+e+MuKe/cxTutn7EdF/nWkWZT1T4eYEsUQ2BfZj8ks2eyuW2U8vhhbMbM
Tij/tyPNPslfz87Djufc2XbYyDZJm/ZH/nV7PfsY3zo7G7vl2OSz122WNu2V
ZHsoO5zy9kH2t00z/0dnrtgh2cdcF7YL9jE+evaN/fNcHJo9jj/+wexZW6fN
85L/TPZl+S+nvNiF4T5Ifih1+evta2w+fOX0GvYkfnZ7GbuWMmxibF/y2bXY
hrZNX+w/ZPYHNp1x6Yudh9/9zew75Oey7/CLP5/9lO98aKfZIf2S+d/tR+wq
5NfSjrr2LHYWvnh7E9sM37r9iI2F35x+zT4jn72I3WR86rL/qMtexK7C/87O
wJZAfjvzaf4fSD6/u73G3sqPPrSv8J2zsbBriBOYIvkTMjZ2D7549pabU944
2UCU/0/WRn5rNgC6P782e8Iv0i97xV0po30yvzhbAdsC2f7FnqCu/YVtU7/2
PvEQ/O788OwHfN/2FPsOf/NQX+enprPT5cl0fGv56Jrea3ox2dpu7bcHLJ66
+6RNerF8+wL9d//ct/RTa7T12TpNpq9bm63vdGL3uPJ0aLqhfGs++4Yxs6tY
g0fX6F6z4dMt+CCs09ZrPkf6kDXUGmUttIbSh6x/8vm26HbWfWu+ddd6bW2m
35Gt23Sfo7Lm0Iess9ZYOrR9xZ5i3VJmq6wT1pFDs+4qT/eiMxmDdYyuZ821
3lp3yfRma4C1gI5Iz7G2WqPoINZK6yS9x3pnrbP+WQf5fax/8ulV9AzroPWK
jmAts45tmHy6CH3t6Kw51mx98THRY6xl1rGxkffJPqAdfg186xytk9ZpY+OX
wbjWNWsanZxuvmTWA+uLNQPHnpF1BseennXDmmft4xfA/GRroOfPOnhSnkvP
6vA59pyzl3qvgT+PXxVDnpVnf9OMx/qNja1H1iLrEPmirGHGwHZNL9CX9RZ/
np01wf1/bu55tiWMgk/Yn/DQ9nkWfpTzZQ86N88F2xJewSrsPZgGz7jPz8/9
z76FsbZLX+ekrmfkwv/3vGhHzAM7zoWR9XtenjXne1euHZ3XvWG/83xdlOfF
M4KB2DYwC5sPbmELko+LPF9YZ9U8a2xNWIht5ZLke16uyH2rHQzEVsTOpS5G
YgdSBs+wf2ACPMD+c3n6ZW+6LONhw7o0z69xXprxsP3gJIzETsE24lqzO1yd
59rYJua5ZpPBOjjH8z4xsnXgmjyPntnr8qyx+cg/Nc/jlWmffFWeU/aga1PX
c03GVGw52hm+2+Ic+aOx5yi/9tr6dEPysQYW4ftjh8E0V+RZJvPJst3cnGfZ
s8nOg6nYem7Mc8oudFPy2VUw08Q8j7dFpn+yCViLcPZteU6N84Y8+2wft6bf
9SO7Z6wnxnBh1oebMh7t68saYn1gr7FGOS92id9GviPtjIm8X9Y05YfrCbuK
NW3jjNMaNUg75sd6xf6D39iAfpZ+rbFsMda3SdPOIVn3fpXzfSPzfGuu+9W5
vljs7oxTrMrbeXZwGZ7j6xxlun5jKnYY+RivS90jUuae5A8i4zu2E7aVk7Ie
srmckLWL3vpJ1jRlcIX1h/4+XAOVt34O7SbGw77ym7S/WeTHUp495OmUZ2/B
dBgNq/Ezsqewq2A6HMeugfe+n3wsx27xcMqzl7CbXJh25OOxGdLXSWlHX5hw
aH85P2spGROOSzs4cK6cozbZfB5Kv+wu7C/WYfo/OwA+wmvsHphtjsj4jn2C
neKK7CnsJPaRuSNrB9OxseA67bBTYC02lqfSJj82e9p9KSOf/267jAejsnM8
mX53iozldswYcOns6euKjP/ptONas6FgSHzHHoLx7FlsFPamBSPby+ZJeTJe
Y7PAbOqyE+G9+dPOrdn72HRw7Oci2wfZW15MX4uknSGTyr897ZtnLMq3wcch
Rm7W3Bvuk4Vyr2JeNgk2C8zI7oHDMNheyceZbCJsJnxY7CH4daqUeTl1PYue
SevN0K5xX8q8lPK3poxnVhwTX4a9b++Ux5bk11KXneWV/v949pWMbcygxXqt
MdJ8ZGwi7CFP5HkXv2fv5juzX6+WebC/r5R85fl0xAKKPbOv8ePY+7yj+k7q
iifTF/8SW4u+2FHwD3+QuME1Imtno7SDh5/NOYrHWzTX2jXiuxHDJ0bLusXO
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
P2vwvzbOSnnvcJ2d8R+XMQ/lc3Jd/g+kTP9Q
        "]]]}, {}, {}, {}, {}, {}},
    VertexNormals->CompressedData["
1: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
qYr2As///udedZlpxG/IBLWdC+/oafb83+cnNTZeUFJmwSebHF/JsO7/+/xb
Flf+VjUL9O6ditdc8v+ff7S7Hp2wlw3+Bm3P07O6/u/zMp8wMec3bKgJ682x
c/j/z8eUkgoX/GTDGbE/fHrK//95yQKHZbzyHNBSlR6Om+yE381DNWSf4cZp
77l0n2UKkpPpPrt+uvSM7DPsfTVvDt3nNyaYTvf5nSJDmOwzSKhY+9N9fpaX
cZjuM8+f+Plkn0Hm2dNuus8rprm20n2e6ZpUQPYZQibiCu3JPo8IPsqn+/yi
QvgZ2WfYnLRzJd1n+dPzbtJ9vnbotg7ZZ1h1p2ML3Wfh2LvCdJ954r8nkX2G
TdkGfnSfvyyvMKf7PCm9M5/sMyi1+IbQfdYxWW1K93mvzv4Qss/Aw8cXTffZ
G4Lm0H1eGHl79m02wmDJXEm6zxK/D32j+7yeq8Fl+mZA+v4ooPu8SD5hap8v
d94VarNPg4Lf3YvpPn+H0m90n5Nljm7JUE2GqHXrdtN9PmS0emqfBf5EtI89
T4Rt25UYdJ/LkrQX03020Xm3jfgzHNndU0n9WV5UaAP1Z7GD5p7En0HwZ9h0
6s8Kp93cqD/f3e6ZR/wZnrO0Rag/B+x2Y1J/jp/4rkT8GWZPL9Wk/rzMa8WC
h8Sfc95W3Cf+DJ3NfT7Un8+7bD5O/TntVq4y8Wd47KUnM078WTDDZRX151zV
0e/EnyHiq/ll6s9qqkNR1J9jV6lQf4ZwfdE86s8azkkG1J8DnW5dJv4Mzo8L
Cqg/F5zc7039WS7w1VXizxAlxFKm/vyDwZGl/vw+elUF8WcIrZW3oP4cHgp7
qT//4L0uHppRBszuMUPqz1ufmP+m/vzmwoFM4s/w6v1pd+rP10TCp/x53Y48
W+LPIPTk5S7qz1vupkZQf3ac2fGyTi8XfDi/dKk/70wz/UD9Wa/n9lrCGzBe
FTDFG0cPR+hT3qi59fffkj4GCCyuOEl5Q7XsWTjlDdEvPbWEN6B3WtQUb7y5
/9uf8sZgZLkL4Q1Q8Jt/i/LG3aPHPlHeCBv88pvwBty1WLGA8sZej4dTvPGW
T7ed8Ab8ZG0ypryhHF6sTXnjwaxMyhtQVPLpMOWNuzxhbpQ31o/8R3kDJkde
9VDe0E+qyae84fO7aAvhDRgz97sYQHijZmLmDMobPe2K/YQ3IL9B8wvljWaF
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
uncG2Wc/kGOyGzsu3B6iFi4+/rjPVDHj136pmkENXitumr9klOZeOpeFe0vF
oae7cG/53DHJgQYMUGu9QWvc326OyT6B+1vTJwJq7HVD9NXfJVK4p33WTApw
Txt0r0NlT8gwldbb8arGvpxmJ9ctEferIzwDf+Qs+Hrp3OBVB3G/Hbk3b9Zt
6WqiseXjRfeMXnrK6tVr3Fe/43xbh/tqr7zbxqVfe+j4sYA1zzoqabwzJ7ez
Rg95831x+BzDMqoa6F/l976Hekdx3Hsu1EtCf99N/NGnoTx+7eUrXqtaukju
vPfUzxHSGPbq5lz2A8oFQ+3uYSuT6KvUkvzoiTHyW8Lce2b9S2pi9Uno77du
4uMnstKMt59Yqs9bGeuYQM1kp9RcFvYQv3I/QSOufvL91tvAkslOIjbwt1B4
US/15tEZC45rJNmBMWbMc5J3ed4yeM6NR0XY8JwLfEwdBD50ElPPtPjfb27R
nSsUPPG7xrUVHy1T+FvI8LcXKfj9Ys7zrgD8fvF//z1IrOvflY+Z/2+bW2T6
m2X9RPo/1Z7BN/7EYUD452qhHnLBRWSF9tx+clfwgDpzzqT7uQLFOcfd+v1v
HXPOL456R374NkDcBm71i+wIIIuvv4rF70H3Xd5MGnL1kG0FTwfwu89ZXsEk
/O5TleETd+rpCDl3oEP87IMXdLdp/Fz8Xjbrc9dActgAWfpTnAO/ix03+8H6
XWzzrTvzpi50k51e9azfv3r3b16I379ms+9BvZEzcjUBqLfCGi0v1Fu73yh+
HyQysSmO+H2wuyklFL8PWlmYuw+q9ZOa30ta8DtgxTUPM/wOGL6saMadtWPE
7Mxx/ztMX3i8sPFyZvoi5sX0CaYviOycQEv0hUHSoyfoi5rTY41Mn5Ks8On/
0KexPbZb0KejRTOSmT4lAoJJSehT65Ozr6BP550bOVrJUUlCeA+w7i1Nndm2
4N5Swf6HbMGscnomcfvU4J0uUvPxdnMjZz9Z5Ou7Nye/hkoc3/uqO6iTTAdm
XTmf2EcadDcEEPlCest7/awy0y6i1veZP6CEqRNdmR2HZlTQxGEn7qPRnYTt
2T9L9uB+0ryoMCujNYPqucmwk1sdJNafW3Fr4CD5eVXlXuOVEjq52LSpJ6+d
SE6ddnllOkgKIleXGIm10pmf1Tp2evTQ3hbrnHlqnfT76TQXtXSm/2vkd2iU
dtNk6655montdPmP7f/4sjtpkk1Nxisn5u9bxspHq9to5lwdmv93lLpNOJpw
dZbRuWrzzpWymdOFdjbP9H620LX/OY2JlvXQKcUHPvH/Oujs4LuW24076FsF
uwOGe3toX0jLq29W7fSs9buIfq1O+syIPXLbwh6qn3ky6YxhG11FCvomm0ao
w/Ld8eNxtfRPQv1IkWYyDTF3O1giM0blHLVHnX5k0QUjCxXbjnwk1y08/u65
Pkyb2N6FRp/OI+9+XZyheL6JvBu4vZ3ZU2jFD/8K7CkhWTlG2FM2Geh8D3Lt
o0eEvssG36olD23lJcvudRLXtck2UcmjNGnW2qWSg2X0aWSwpu2mXLLfJzYx
6/oI5f7U0v3J9R75qDgZLfW+nmy1qnZlm+6nGVfTv7SfKycGRh3HveU6Sern
G0uXSI7QIhGZhvK9DbS4sdIp1+MdkbaZeVjReoT+/fg4cMojj/IulDkbtrmO
rFaOHNzANkhX+SqFm+W8I3Y3G7hu7Okka4PjzyelDtK2rV658Ufq6T3/g5Ki
1xtI2kTkzIm//XSDQWSjpP07em/ObIVbT7rIl1GH9INR3fTFqfMCYz/fk3k7
r26wn+4jkpaX7jI6Q33uzvoIncle8X1WCKMznDm6Qs+WNlKtWjO92A0VdGxA
nt9ydIjc+FrRuUSohgprJdWF+AeSn0ezRh9vHSXCyww+MzpJXoZsqoZO2gdP
3oFOjsTmr2c+h8y+IH0Yn7O2YDkvPuf2nYS/zOeQNQ4Fn4KZzzmRoDCIz+mc
6LnIvBcxe3blI95rs5KuIN7rVd3kHOa9yKyiFo71zHtJmklvwnt9DxbPYt6L
aFXW8eC9TjQJieO9nOsC9jL1T84c4udA/R8uUtyO+n9otDaUqX+yU+NXC+pf
rlXJGfUvc37XzVvt5UThcmKodlA7UeEtUC7lHCSekTXayrOHye0HCx/iPjbJ
wkXz4MFrROL4yGLmeyTWy/XG8D0+65ozlsN8j55z9EyY75E8Wy7Sh+/xgHW7
Er7HJW8kfzDfI1H32C+C77Ht1Krfbsz3eGGecTzT10R2o9kM9PX7c3Wsvj7k
r2rL9DWRWGTDjr6WeS5hgb623CdUtpUw+rWnbCDYtJOk/Q1RczXpJ9Y6n84x
9UlOqX5WQn1K71QRRH0q+75eeehnC9le9KQTfXdKXswKfedh6mDA9B2Zt2/6
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
e8HN2fFI1Ep9ZyP1i657ucb+Kb0WGd0Ibs4T+YeGx3MKaa5RwvkL7kUk/aS8
Gbg5qqpHxpHjLVyzM11FP5ueXb+lBtycrM2fVGo90sjIAa2aCdJMRoQ394Kb
c715/u0fvwtof9miFJ9cSpoKdN6Dm+OQ0G3z/WIV+eu6VQf57Q6lMzim3Edo
kG3a/cLCdGKWkzAHOd56jxrywM1plmoqRn576pttD5HffvHcR47Bkn5axW1p
gRxvibNe+5HjrZjw1Q7cnHw77wDknC+a1rBDzjlfV2wTuDkL9u/IRp55qOHE
G+SZXzFJmAVuzu7rxvwsbo7UNwvk7Qfx7osAN6drxrGn4BqYBbVy10dX0M/7
KRe4OTSaTQk5/PGOchXI4X/3WueL/81+uqBVln358y4arrHmdlJxIW2ar84B
bg7v954w5PDPNHojI7Gskd55E9VadGiIph/1UZgIaadSVRf/+xX2hD4+WDEE
bs7izXPcvbtqaNSK1Om00wUknPtVOrg5/jwDq6xM06jWvocmTjObSKfQnc4E
o1FawGf5C7n0sbcvv+lb+4q8KfkhHP6+n5byX9vQeKmAbGl+kgCuweCfiyfB
zWk23tp5KjqB3hOeKe8yUU2WhM+PBjfnmKLxc3ANrin9tgPXYOk5wTxwc/4Y
nRl7J1pMWqyli4bmdRDReccdwc1ZVJqeBq7BKY8T33uS+4i1Y8BxcHNoSXc8
cvtP6BhkIrdfLzPqGrg5/5l8ykc+/6niUw7I53/FqZgIbk6OaLoS+BQFt2rz
wKd406/rCW7Ohx81auB6NKsvth8450m9Kv0Uwc0JGdq9FXwK2dfiB+9y1dAk
vVU7wM2RPbRgH/gdP1wXH66WTyUZTo3Ty9YNUr1llfNMStopu07KoTt2n8kX
X6G9+HdzQld68y2vVtMZimqJVYwPS7njtRXcHOctVc+ktZqpwCz5r/vVnpN3
tjuywM25zG8cmDwYR+8YNHqC35HJvoIf3Jw28VffPIRKqef3eY1/ZKtI0n35
SXBzeLl/s4HrMfR9dBW4HpGPbS3Bzemp4B2q6E4kXDE5uY7t7YRdRnoc3Jya
S35Vmpl1ZN164X9nsgZIU79mBbg539iztMCtaD+2WwzcioU7OD6BmzP05IcN
+BQmvk/ng09h6PfROuliKS2LLfEGh+Jl0gxpcCg+p7rKgJuzLCZkWZ1LN21d
t28JuDC6/Bpf5UoZXcqwHwMHpJ7bYaePaTTddM0lD9wcrynT/Bs/Wyjv5RM/
Ldz6ibBNEgE3xzZJ6UBUbRN9sWOVaGF/DanNFdOantlA694LGzr0f6RL3q1c
C/6LoHUgO9fbAerq/NpcMr+Qfpbf8zJscSdJdurX58yqop/+Glw29Ukja5p+
BYILY8UVkQxuTu3ZhvFF99JJmsFKDnBA5L9ekthj9on2uEbtBS/maMEcbfBi
Itx4BMDNsfJY3gNezFT7ehHwYqyKBPeBmzMSa1sKfkr6gdcXwE/50PslCtyc
Q2YVl8DdMPzXVAPuxj+xaQ1wc4bExQVwPhWpzZw4H/YnK0+Am7PafOVNcGRW
+VkvAEemV3SxRPLvRpohaJj5gNZQR2uf1eDIFGq3NICb8zT9TjHO7VOa8TjO
rV/JwhbcnD+jOScE2uKpM3XbDY7M+pak48y5kfffgpxxbip/o1fi3OQry83A
zXk6Y6MTzqdXy/kezmdyQECOOQeirNyvi3NI6E9g8YMmy1IlmHMg/OpNwziH
TQvvr8Q5xK5a/CTbMor+yF/6GlyYwd5fMuDChB+1uw1uzoYFieror6LU2PhB
pr/4FbbYgJuz6306632X//eAC+9bovXfbuZ9yRibSz7eNyqtVRDvW6SXuR3c
HOf7jQfQdzcaf5ZVMX3H28dmB25OhtyOs3hf2av/duF9zd58Rz8SLSEnbvTj
6ExzbfSjaDzRxr9vUg7X7EA/jm3R9EA/qhtW54Kbkz+8oQF9F9oucQN99/a1
+g9wc+pzdVn9FXHJSBj9NUv435eYBznkeKBaNb73kJ9NF/G9z+iTm9mY0ULW
LT9UhP7K5VX/jf46t1ImG9wcDyNl1vmkC7VtxvlskfF5Cm5Ox7yNLF06829d
GXTpy/Vr6BdiVS7A6pfBNTy26JfiMVEFcHOOW5exdOncteOHoUu/bicrg5sj
uu3yEfTLYfdRAfRLSldLELg59VM/EzFfNE6Nr8J8GS++in4hXYG+ZuiXt8k3
WP2iNNz2wx+/kw/sZsN80Y11MMZ82fUi8zW4OWOyrUnol7ptl9nQL/FHFzcz
84UcXC+lhPkS4TC8doqZL1dK7g6DmxMy1eSI+cIzZwZvOjNfSmebU3BzVAwN
yjFfdqSlSmO+1P+P/pCJ/4/+BMjGSjLzhfit95mB+fLvsOQjzBcP1fzX4Obk
Gu1n8byCf+WxdIn7jt5zcHMWzHMIw3zJnbXyAuYLuXvPhtEr8nShoA/0yjjg
6UYW52tNzHNwc3bYLX+I+fLhyMFRzBczo4N/lva+JaVzS66gfwXvatSif3mD
9kx3iHUQn0tPl2OO+xrLncEcT311ZDG4OV5iY/KY10PewYWY1+k+FbLg5ny8
dzYKOr/g4h2FA4zOR/98OAfcnDrN4lDM6wm3Lax5vSrz1XJwcxZPWJvcZHTe
54pnBHT+8b+u74xPI3r1vzTg06y070fAp13NWesAbo7BK+1L5YzOr3FY+Bw6
LxM6YQ1uzp/II8/g00oW8F2CT/PIC9oJbs41JTZP+DH1Z1db1jJ+7PfmvU3g
5jxu7QyGH2uz3iUOPzbferoe3ByHhWfnw3dZxrt8hO+anlmkCW5OvOUuFrfO
fIUKa/6Kn1ibCW6OZOtuF/iuiaBTBvBd9mkcLuDmbBp9yZrLClFmrLns9Mix
CdwcPfeORPgu6xc7/eC7jHZvjmf8Kllxc/4P+FXe5s418KsGGtz+4Oa8G+Tp
hC9VDMg4DV8a+DO9HdyctD5rLh7Gn/R1dZnDn4RGcZ4EN+dxyaM2+NJXEn6X
4Us36rqbg5sjeXT+DTPGn7y4ryoKf1L85Ag/uDlj2nMOwv/zNY3ywf+HPb1d
AG6OAr3TCn+i4uqRD38iaGeVxfh/4ui5lluG8f9Jnif/g/+PVq3TATcnakDF
ED4/9FLuIRvG56ePntUAN8f3UkuNAePzb7xbPAs+P8CCR43xk0R/K+cj+EnD
xj1X4Sfjfv/TZHw+uaXnGgGf/8zYSgE+X2+d2sw/03WE/dKLdJbPHPuZCp85
NnudPrg5yl7BfvD/R+7f7Yb/TzB9swDcHI7x8nHsO7+a7wVi3/FNCzAAN+d8
RvcKU8ZvS0fyPlZl/LZtx2cucHMOfR6Wxb7z4NmUPPYd37Vr4LeJ+mLfO/Db
V1/px8Fv31VrL2L2HeKadtEQ+461Vfh57DsLmgSXMH6b7FRtySxg/Lbq9W3V
Fxi//d7hQzKz9xELfcWv2PsSrTfJYe+jY8qLGb9NGotzdeC3R4SKVOG3IwRf
hTF7H1l/RGsCex9HWa7QHGbvs5iWCAM3p35CKAD7Hd8tq9vczH43EXvAFNyc
vTGi57BvFob0GGPfzB5ZfwPcnP3y26OwT50UVYzTZ/apxfu765h9k5DlnJXY
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
rfzFhBrm2p8ARXVwc5IqeRdirmkY52Zhrg3+x74J3Jyg6rRtKsxcU+e4FXyK
mWvDVlk3wM3J2+QUZ8HMNf7jCfKYayJPFqswc43sz3Fyw1zzeOnSjbk2crMx
FNycok0KBphrU9HzRTHXVv3Z/g3cHDnrMxWYaxFLnJ5irklOZPsz/oGkWqra
wj90/LrqC/+gVRS0D9ycdE/T3/AP4pWNN+EfjtvV3Ac3R8hy90v4h9F5RlXw
D4MeVm7g5ngt1/8N/5DgvnhdDOMf2G10d4GbY1Obv0CO8Q9atbPeZjD+obWn
kYvxD+SM39aD8A+mOmON8A/nTo2XM76IeKRq74AvGjI8GgNfVJN2IhrcnK6C
WmX4IranVgvhi45NHYxmfBExNX/7Hr5o6+a7kVcZX/S4M7MD3BzNSydYvms/
t/IL+K6QmHlh4ObcHZCfdf5ON72uz1UODkLJ2hpNcHNO/TvrBw7Cmhj59V3p
LVSvOVkB3JxA846b4DLcfLd2K7gM3NVrL4ObI/ngZQG4DGNl/mol3K304wAn
ATeHL6I9FVyGU15eYt5LGqhPgpUvuDn+9znfg8sQeuhwJ99YOZUIXF+2Qa+D
ehpy+4Ir0SJ23RVciaIfBTfBzdmyfMZ7cCUKnsVOgSvBU+PLDm6O+KozNuBK
nC4rfAeuRJIVe/Kj4wM0pNv+KLgSu8+uZ6u9VUnnfxf8Fbatix5Ke3YGfA2b
2107+BKa6IOZU8fBzWk8U6YDvsYVk/4R8DUk7sfPADfn++t5duBr7HiwYhB8
Da7SfS7g5qg+tVcaUG+jDm+vq1+9/p6qDsyX3s/ssWurt7xLdK4nTdHGc8HX
MHIamt36XzvNGE8ecD7WRhadndcEvkYA50e+X08bqdOPi0bga4xv5XwPvkaM
tpgAuDn7ki+UgVdiJloj4htQRRN2BDqCm7NVX0gEvJLRDU/0OHZ9pu6nnvbJ
9g7QeKkfHJeYc15T2ay9k5fS2Nk7ssDN2fZVaTl4JfMC/5WCV8LD/2UC3Jwm
78Tm8OVNxM2o9CZ4Jd3r6gvAzak0+bIQvJIU36cq4JXMyV3/Atyc87vFo8Er
yZd2DQOv5FCRmSq4ORoSW73AeeHL15sz1zyULNbaqwNuzjflMA1wXn56mh4y
Fskjwy1sp8HN6eFNVgTnpe9B+3FwXm4eU3AFN0eWv0EDnJfiIO5f4Lz80Fvu
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
NjvyKo5Tfj/cnG/yO//TheeVUJeIXHJ91riEyR9Cn6yuRP4k3bRejvxZ1z2+
Am6OxGPHUeT8hpHMPfJMzv9UfLQIbk5k+9QK1d1tNMLMUHY0vIKyXRHcADdH
SDX7LfL/c7Lk1CiT/yutIhLh5iRz6wd9rm2gH2+/3hicnkzdnjd9gpvDdaeS
VZDJ/xwFh2l5Jv/Nzc7kwM3ROfO0EfMim7dWKpiZF+WqFlJwc1Lk0kKmmblA
f6vlljBzQUB2sgpujpxcuzHyn1dEbD3yfyxITBJuzrDF2HrMQcei6z8KmTlY
xHO0+xhXH4mxNEhT9Gim6UksE6SsjAYs58J8JP1log51zHzUKWJlxXzcaq6k
CTfHx0fErMawml43XvfSZXco5d7gs5yZj0TU+6og5qP1k55SzMfY9W2ScHPS
P/5u2cDMU+u3t61lmXm61fKmD9ycr2NP3mNer+UzDce8XtYhxgY3p7LkpRbm
u6r5xdmY78taOOTg5mTkZ8ysB358rFXGesBXPVQCbg5LED2Lfb8bHz4bxr7f
EVE2l+DmFP86cq0orYV6bx0TqlxSQ2UVsmPg5vT2T6Y7xryh8lc8fbv+FZBe
97Q+uDkmy9JlFwxEkfEDdG6QVTX5fq2Sdf2Xb7SOg62Uo6yJmN4P3wsHp+3G
ez24OVJWUr8FeFvIhZsnP2B/+MwzXfOZvyf6W/6l4O8Txeo18feKa9PT4Oas
lp1b7q/0hUxSJy04MgHNPu/g5hSlLT94jzkeuZQseRwPp+bBw3BzTs9ZmlQy
VklrvZT0TupFUmVvO024OWJrN87sP+n0Pmcj9p98E6s8H27O6tV51tjPvFD5
uyX2M/fqvu4NN+eE+cIN2MdMqEbNDvuY/YqJPQY3ZxnfvkB8f6ht+UUj5vuH
RFvrnoYMUIveIiPsx74v0LpwjRylxU2zbeHmFJYmnrufmUz94uNXOwbkkxb3
s5fg5riOTOXp2NZTXsc7wwWhn2iWilwk3JzgsOJfON/tXakHcb7DRTJ2cHOc
8oK5J5Jb6Z3u0Rfi6lV0dV/yFrg5RSUf1yTpN1Fp3g3Zk155tOxs2eTKhUP0
8M/rTZcFi+nG8AWvX2Z9JCnbeO7OuDnCYjex374TTbdsOVZEz1pfWQY3R+lH
gvFnnnJa85O9fP3ct8RsONIJbo7Y6RMtcnNjiVhe2xL7bXXk3uybKXBzDt4L
2Fp+u5J6GfEvOevpTErZ9gXCzfnkuWVI1e4pUX4pnmpxuIaoes55ADcnocTV
0fhwFbmi6qWN/fMLAu150osH6fmn862Khlypw9wjqTknK0np0psxcHNmH7J/
hH31r9wKMcG++oa/nbTh5izmLSk40tJISE2XP/bJj0/Zeh9uzoOQqB9jG8uI
2vZz87CvfkIlx3a4OXLJ+dNwFgRKivwG3J3JHp8MVbg5Unr2k5P1KZTnU11a
9r4a8sLPfOLH/QE6f8ujFdSlni6s1jvWXx5GY1qNyuHmCLqxnVU2zKQxVdct
BHsriDvL0mD8+/+EhO6orD95ROyr38jV4VZCeVbOG+gepFEmf2VrBXOpzomf
CSUCxSQgbK7apG0flUnx7H6dmUN2+2rdumfUQrrPHxqAmyNerJ0OT+EJy3Jp
eApBH2s5nx7spyeW5U7PP5dJfIUn+OEv9KW5+MHNEWO/+RkuxrP1Hp8eyGXT
vaFrZeHmaH6RkH7V10xfJQttEtS/S14Gl2jDzalP+2YjI19JDwsX2T7eWU0E
PP/pwM1xPWmXCUcj3rPA6sS7SKo0qiEON+cUZ34PvAyRDp9aCcMyIlN7tBRu
TtiWnwsylS8TlTh2J7gYymfdF8DNefNOMuuxRjXtubjYTNstn+jfPOMFN+e4
ssjzw+UP6fog6c/bPJtJc6hTHNwcl6hFYv/Gysim/LsL4GIcCAiOhZtz5NDl
opC0UBqvGBipuryRnN3LOuPmvOCN2znR20w3iB4yNLWoIjfO3LSCm3PagX/d
0mWVdGlRWHh1STvRVexPg5tzKN/lC9yT7UqPhr8FFxHt0Jsij9R76XZ2lh3p
OhW0Py18HnyTmK7WH3BzRhdH1fx3/QH58zpoCxyTdSbGvXBzBFunmvIkK2hW
HkvVIa4mss0swhFuTrhUoPZlXn9S3sESAt+kJaDBDW7OlJ2QyRqFciJa/M0b
jsngnoCbcHOspUv+dgX4k7c/LRXhnij5CefDzQna/HQa6yX9I69fYL0kp5Na
DDdH8Un5Qj3dThrjwGsDd8bFaFEk3By/dSF9M27Om7xfizJ7yOdCl2i4OcMB
lsJPxEuo8qqSXPgyAezdrXBzHNOuzN5f+IV+3GnQOJ3YRfakqXrBzUndudkx
vCOTHrQ/FQ53psVAegM3Zx7d/s50r9jZd+RTrIgvfJmsaTXN5Kct1K+O68VF
wzd0i+diG3g0nCMTNnBz+NwX5mO9WtJ/7iHWq799Or7CzXFe0imE498xJHoL
xy/ksuMj3Bz/DRMzxz/X4/4Qjn+s3OQ73BzWyXFBHGfX7rhqHKejy8VWuDmX
uAeX4bye7VmdhfOii+SD4OZ0qnIG4PjvmxYG4/iTjPsMmeMk/VmL5UyZ41Tu
TryF4xTZy32OOS+iyaO4FecVlic54+bwFTvPuDmnRFz3oK4GTylro65y2n9l
wM1xfluZi/opTIjn72Dqp/NdiT3cnNQz3jtQb1Nd+5+i3n55vRdn6or4lmlo
o64OWQvPQl0lco8OwM0J/KIxhvqpvxSWiPppqR1nKRbtJPvUdpEGpt5MNpfL
o94cJd64ws1xG5DVvMTU1R1rnkDUlYbqPAu4OfoStidRP5EkZR3q5+ChEA+4
Of1fmgxRbxUD371Qbzyd1ANuDvfujRXIh2trznC5M/lw5JibFtycFmmeEvR7
0dHh1UZMv7umN+vAzeleZe6FfFhxMPM88uFYTp0Y3JzCsSPz/jE54FJzxQs5
8Me/ZD7cHM/os1Xo94XT97eh3y+vLqmGm7NPeXxOApMPPN/LbiMf5A9K+cDN
ybvuvPcIkwP61x5mIQcKf2Ymw82pst38L5Tp9+7BKEf0+8eywGC4OcaPWI7M
5IPRBXHkw7aq09vg5lw0PycQzuS5tI57Zg+T5wZhOlNMbpOtVzNFkduHHn1b
hNx2bcvSgptjzerDN83k/P53o9eR828z7lTCzUnPz4tFnlfEdxohzwUG67iY
3CbrolKvIbdD3qecRm5fO7T5Df6/kq3ybFeQ82uc5nQh5/ucenYzeU5Wxouk
Ic/76vxPIc8P3C5azuQ2kT+c5M3P5PZzwkrvM7m9q+zLNNycMn7WYOT80boh
EeR8Va3/Qbg5zhksQ1gXXTSMTsG6SFmG+zrcnD23zglj7qda7c/B3P/21+Ay
3JwzfRz+mOMG5te/Yo7f/31igpn7ZKWuws4rzNz/sEg8/QUz9+tbeTDfCVe/
oBnm+14BtkjMd55Jywi4OSbPRKMxxz9d9pI6wMxxIQcxd7g5bOPbm2SZuS/C
Vjhlx8x9xbtCr+DmDGdcs9vKzPfXP/IdMN85liQJMXOcaG+d/lnFzHH/KH5z
zHH37y/s4eZUzrnvj7m/1Oq4Aeb+B3W+VLg5Fmt7bTHfP9/iMcJ8H1i6NARu
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
3X40nQpJKGs3HS0gzxbF7N5l30/nma/+GHwul2R+zhWBiyG26qwN3JyETbd3
wc0xdly+CG5Oo16b8hO7Ljq16XWun0st2dO59E/Zo3ayeF2MMdycG6ordqzq
LacV+x0Crq7NJhbnWYfg5nxQI6/T7B6RJZIOZqty6kmvlmcZ3JwfK/fuhzNS
mum5CM6Igi3f1IKVA/TsvqkXlbsa6Nvi8PT0exnE8scpG7g5iyIeP/p3L5c2
J5zY+WxdHbE04t2xmqWX2rieWnw6K4PYyEe+grdyIbfAGW5OzFyXlKij9fSL
UsK3pfYNRDTLTRtuzjLeB1VrLDPoXI/ET87h3whr2uE5BiEddH7lrLaBvznk
a5LJH4vpLmIg1B8GN+d4bHs7cialeZYZcmZknsB9uDlL9eJVXq+qpIZiTo0X
B/uIQBHPHsHFX2igakiHh7cv0TCf2wzvZk8OL+/cw+XEZPLnTE42b11/CjmZ
qJn6GG7OujSWXfie6kdjtfgeLZnzRsz3kNebDZzwPTeK+RvxPfb+nq5wc6b2
XsjDealrNRfivPbt3qQHNyfmHesPnNf0fL5MnJfXN2U+5rxIdHxTBs7LzNtw
GOdVZ7PkL9yc7KU3WFH/y7mCZ+p/TvdRPab+ydtj28pR/11yFTP1//1QbQnc
HMemhZ7wMtbHKWyFl/H1fiSex5I7n08uw/NY+zVy8xbq3yXnuC6NMdeRhEYd
z8J1PKjXPw/XMUAizB5uzunI81W4jiNj+6VwHb/72Oky15GY+Wa8PMVcx2aR
Z/64jg1/Hh6AmxNg58eNvq70mZ7paxn2o3lwczgeXh03ZPr61UbJ0+jrTBZu
TUVSTUaXi9XB+3icsHEbvI8hlynUJ4nbXq6O+rz+wdgd9bky9+txpu9Ijp/l
L/RdzQ6N1+i7g+fVuODm/BwNmek76cjxP+i7QasTv+Hm1C+y7k1l6vm4tc1e
1HNr9PNBuDlBy0a4UM/VbhETbkw9a7Jq68PNObPTZQw5pqfgWY8cszpgfhRu
Tl7h30Tk2HV+l+vIsTrLsA36YvUkPSrJE47JE68tNnBMJPWXr4WbI5zzXQvv
QQ7ainNMeeXRczL34+DmVJ2te4J+zwv/PIp+fxR2yQRuTuo/BTUHpt8H+Hpo
I9PvXYE89KgMsw59nM66g8kxhzvFc7mZHCvlG1GGm6Nh+3wfckzRMXErckyw
YuFRuDnnK5ceQT7YLVfu28zkg77jeU0mB0jOksR3yIF3GjoDyIERgz2+cHP4
4vV/cjH55ho3/Nabybc5Oj134eZ8TW5Qxvsmw6NnA/C+qcfpuDizDqdXq7bc
xzrcaWiYC+vwC5qtmXBzenael8P9QuSbtgbcL/gnfwqBm0MclFiWM/O300dg
Zv6Gz+FKgpvjnPG0Dm5OkLmED9wclrmfu+Dm5B+mz3DfJ31o/k3c96Wv1yiF
m5Ns4d+O+7tIK1MV3N+Fz52rCTcnuu26MNYhNSqRM24O+96VOyOtogi/pJ8a
1iEJLOtn3Jxdaw9vgpujLR6ki/vcJUpPpHGfa5rvkQY3p1Hmxnvcp0dVnVhz
nLlPHz9W84O5HyfH3ypU4n7c587Eoz7mfjzjk7oQ3Jz7Iys78Zxh6l2MkLf2
ZzqSc3E13JycH+myeO4Rs2bzFjz3uBwplajq0Ut0x7hc8fzE4ER/BZ6fDA53
RtLKYGqiH3MDPs7dySwX+Dgps5oVsyuDiTALNcfnY9u+OuHz/uzK5Uy9UTVT
jseot12qcTP11rHfloPpI+r6Nm/GzTHwvUDQR7cj7jyFmxO0w3XGz+or6prJ
gWauP2vh5lTHSEXAzWHRXsHHX/QfldDTioWbcyshPwFujpkLz/7SOc20/dHx
v7GBkSQ1268cbo6prN85uDlxvl8KLExbyKHaCBm4OSG6XXzfn7fRb5KbS2vs
WolzaGI43Jzk53vz4eaEDRbMgpvjJ+EnBzdns350GNycF+YlCnBzRqYnX8PN
Wap8aDXcnEeeV8xUepLJhW9mPXBzrArFBeHmrE1Z0g83h3NgSA9ujuJxNVG4
OZk65vlwc/RbrvnAzZFuH+iEmyN45q68TUklNfEd5Yab83v3hALcHEsu+8hs
3VzqN6QiCDcn8MriVrg59iujYuHmpIQX+sPN2TO4xAVuzu6wHcvg5rysmW6C
m2PYY6ELN0eAXfS9amQSvb0togBujtZEVQPcnFcKvx7DzanQOnsUbg5fsqww
3JyD2pb74OYYb3ILhZvz0+B2G9ycXxeX99Ztiien5cfN4ObwTf5eDzcnx7Ru
+OuKcPrfudkW8G743GrZ4d0ML08KWJsSSqW1taLh3Vy89tAM3k3Sn4idyoZv
6GGF1TNuzp0GsRk3h9v4ljTcnJd/62/he1b5VM18T9DI7bINKaEk22dzOL5H
7LjeFXyP9fXREd8hH5KQvfg43BxtIZ8ZN2dbzucauDlT2U/04ObEGuvowc2R
8nxxHm5OW2vQQ7g5GvWnOeDmjBffm4abw72mSx9uzhGzl1MhZ7rJw+qvJ+Hm
rA17Hww3Z47E8R1wcz605M2Bm7PrnHU93JwTvXeF4OYs86qLhpvzbJ1aHdyc
0q51DnBz/gf+mTou
     "]], GraphicsComplex3DBox[CompressedData["
1:eJyFnHv0pPN9x3/2nhWLIxpi6WJaaeoogiJiJheb3xAisrm1Ia4tZUgqcZeL
njqKkh0kq9HWURKXVJwknfxy/JjBcji6PcS67ZCwNhIby/5Ydl2n6Tyf13fM
6zvPqX+eMy/ffeb9vOb5PZfP97L90accdty0sbGxP505Njb9D9vHjzvrnl5v
dmd4u2ntk5//+MvjzRkZb4/PW9CsbJTxY792y5Wtxhtt8wP7+1mX8aP67X+f
8S/1eTfjY/3/lu5n/pWifdX8xGL/Gf9UkSfjxxf5M35Hcbw180MKPxmPz2W8
g9di++7a8OcBx7M5ns3xbI5nczyb49kcz+Z4NsezOZ7N8WyOZ3M8l/AO/ort
u1I78+HPA45nczyb49kcz+Z4NsezOZ7N8WyOZ3M8m+PZHM8lvIOn3fd97JPd
1szk2Zx/b85nczyb49kcz+Z4NsezOZ7N8WyOZ3M8m+PZHM8lvIOP6/78mjMr
9WnJszmezdmvOZ/N8WyOZ3M8m+PZHM/meDbHszmezfFsjucS3uG4d+37fytd
p8zxbI5nc77PnM/meDbHszmezfFsjmdzPJvj2RzP5ngu4R2O773bnvSDRvfV
5Nkcz+Z4NsezOTnM+WyOZ3M8m+PZHM/meDbHszmezfFcwjscxxu9//vvxeTZ
HM/meDbHszmezclnzmdzPJvj2RzP5ng2x7M5ns3xXMI75L337p1+WqmvTJ7N
8WyOZ3M8m+PZHM/m5DbnszmezfFsjmdzPJvj2RzPJbxDrkW77H/ln9TvTJ7N
8WyOZ3M8m+PZHM/meDbneMz5bI5nczyb49kcz+Z4LuEdvn+/wzdftmP9l+k9
wRzP5ng2x7M5ns3xbI5nczybc5zmfDbHszmezfFsjucS3uF7HvjdkR9sdJ9N
ns3xbI5nczyb49kcz+Z4NsezOZ7NOX5zPpvj2RzP5ngu4R32d97i+bVK/aXk
2RzP5ng2x7M5ns3xbI5nczyb49kcz+Z4MeezOZ7N8VzCO/y7q26+4NnFldeS
Z3M8m+PZHM/meDbHszmezfFsjmdzPJvj2Rxf5nw2x3MJp/5W+8n96y7+w4NI
8myuel3iqtclrnpd4qrXJa56XeKq1yWuel3iqtclrnpd4qrXJa56XeKq1yWu
el3izSN+/aVKfVZneDsvvSeaX158rpW0zzif+Xfvv+32X4w330y/rzmfy3hZ
ftch1T5xtc/8+Hv3WvmjzZuV2Z3h7aa1+Fwr4bSvnbT0iztW6m+31T5x8pXt
3/lpV5a/5HszP2qfvld5svz+3u22vmlZr5fXdY/57+7yXi+vn8Pd/tDeVhO9
3ltZPRzu9iv6/3991h6e1ZP73zuVtYe7/RP9///brD3c7X/d54+W1PMnJs1p
P7ouPTFp/lDRPqvbw93+kSJn1h6e1c8LD1l7uNs/WnjO2sPd/uDid8zaw93+
6OI8yc5/uNtvW5yHWXu423Peut7L+WnOeWjO+ZbV1eO8Muf8Med8GF0/n5g0
53c35/fN6vbxO5rze5nzu5jj3xzP5nh2vRfP5ng2x3NWVw/P5ng2x/Po+vnE
pDmezfGc1e3DszmezfFsjmdzPJvj2fVePJvj2RzPWV09PJvj2RzPo+vnE5Pm
eDbHc1a3D8/meDbHszmezfFsjmfXe/FsjmdzPGd19fBsjmdzPI+un09MmuPZ
HM9Z3T48m+PZHM/meDbHszmeXe/FszmezfGc1dXDszmezfE8un4+MWmOZ3M8
Z3X78GyOZ3M8m+PZHM/meHa9F8/meDbHszmezfFsjmdzPJvj2RzP5ng2x7M5
ns3xbI5nczy73otnczyb4zmrq4dnczyb43l0/Xxi0hzP5njO6vbh2RzP5ng2
x7M5ns3x7Hovns3xbI7nrK4ens3xbI7n0fXziUlzPJvjOavbh2dzPJvj2RzP
5ng2x7PrvXg2x7M5nrO6eng2x7M5nkfXzycmzfFsjuesbh+ezfFsjmdzPJvj
2RzPrvfi2RzP5njO6urh2RzP5ngeXT+fmDTHszmes7p9eDbHszmezfFsjmdz
PLvei2dzPJvjOaurh2dzPJvjeXT9fGLSHM/meM7q9uHZHM/meDbHszmezfHs
ei+ezfFsjuesrh6ezfFsjufR9fOJSXM8m+M5q9uHZ3M8m+PZHM/meDbHs+t1
qsslrvpb4qqzDerqw/W0xFU3S1z1MdXPU30scdW7Eldda1C3H65fJa46VeKq
RyWuulNW5xzeDuqca1dsfn2rMTO2m6T36zuvOuO8Rndmp9hukt6vLx+qi89L
79d/s2DhX3ZbszrFdl56v9476rR7R50Wn++6dovnx5uzO8V2UG88ZKg/alA/
XBD5F0R+fE5F/qnIj8+7Iv9dkR+fV0T+KyI/Pp0fn86Px8Vzv/76eHOj2A7q
b8PbQf1tz0s++uNWY1qn2M5NPmcfesM/NbrTOsV27qDeu/lmx1bq0zvFduPk
86aHTtu/25reKbYbJ5/nXPHkVs3KjE6xHdRj7xjqLx3U3y6L/JdF/lQXor4V
+fG5V+TfK/Ljc07knxP58bki8q+I/Ph0fq4D50b+cyM/nudsOPeQSv3N9ow3
99+pWZmVPP/o7IOmNytvtR+57bqN6s1ZyTPb67/57id6vVnJ87rznj2p0X27
fdZHTm21GrOT5yWzfrZ9t9Vrf3L6iu80urOT5+3urp1YqY91iu2c5PnF8394
QLc11im2c2p6fmjvofrbxpF/VuTH882R/9HIj+fDIv8NkR/Pr0b+syM/nq9U
fjw7P57XRv61kR/PL/T/fl5pn75mzqJua1B/K/qdXm3Xf3zKLs3K9OS56FdZ
397mq4/MqTenJ89s1+z+4Wd6venJ8zee+8TZje6Gdnvdf9zWasxInrdvbLlr
t/Vae3Fr7pJGd0byfPfalavGm6+3jz7jq39fqc/U9WFd+4eqv01F/jMjP54v
j/wHRn487x3550d+PD8R+V+I/Hj+ZuTvRH4876D8eL4n8h8T+fF8Q/93X9Ne
3v/d307vd2v7v+8L7TP6v28vvd/N7/9+a9uXHH31ns3KWPLc6f89T7WPrMze
rN4cG9STY7v7s43Vvd5Y8lz8fb7UnnH98qWtxkbJc/F3+HL74RM+9O+N7kbJ
8wlR19pD9bdbIv+jkR/Pr0b+syI/nreL/JdGfjzfGfmPivx4Pk758ez8eP5R
5H8k8uP5+X6eX7VvvXqfv+621ifPt/e/9+n2l/vfuyF5ntXf/8r29P7+X6sO
P6etav+gf769nt6ji/vHs3FevZHeo9kW588b6T26OE+ei/PkzfQefVLUtbZR
/e21yH975MfzXZH/qMiP57mRf2bkx/Ohkf/6yI/n70X+gyI/np9UfjxXIn8z
8uN5137+m9rX/MOynzW6a5PnRX1+a/uA2d8/oduaqg73hy5tr77w+O3qzZeS
57/rt7+//c/z9nqo1Xg5eV7aP94H27s1p19Qqa9Lng/r72d5e/mWD+7XrLyS
PLM948p/m+r1XlH9bWJyWn+7NnleEvmvi/x4/lbkH4/8qc4Z+Z+P/Hg+LfJf
GvnxfG/k3z3y43lR5H848uN5ZeQ/M/Lj+anIu9myO+ePja1Knj9d7Kf6heWH
n99t/SZ5Lq4PD1av7m54sdX4bfJ8dJGz+ruVl32xWXkuef54cVzVv1i9y12N
7urk+dDCQ/W0qft2rjefT573LrxVJzcc+91K/YXk+cioaz2g+hvbP4r8eF4Y
+Q+P/HieiPzXRn48fy7yr478eP5Q5N8t8uN5YeQ/PfLjebvIf3vkx/OOxXle
/dpBN1Yvq9yXPIePan2PjU8dG3sgeb6s+DuqrvjoRxb+vPFQdbgff1X1hE+f
vvXJ3UeS5xnF32l1w5f/8/lKfUXyfFvxd109/+Rn2t3Wk8nzmuI6UL3w9ovr
9eZTyfMxUdf6mupv8yP/JZEfz2wXRX48Xxr5V0Z+PI9H/lMiP56nRf43Iz+e
JyP/BZEfz6sj/0WRH89x36l+4V9bLz/eWpbe74rn4Jeq+37rwINP6t6TnueO
iby73jN58Fu9dnu4/3qquu6iVWM71H+S7n9x36w+tXC3B95Xb6brctxnq2MP
fm+3P6tfkzzfWNzXqj/b4drfnNJtJc8HRV1rZ9Xfro/8+0d+/M6I/JXIn/qh
YrtZ5Mfz7ZH/iciP5/dF/iWRH88vRv73RH48Xx/574j8eF5aPIdUL3j67vsW
V36TPC8onluqtRUfOLLVeCZ5Pqd4zqlu+OWlr65oPZ08PxZ5j/7ec1v3er9O
nvcsnqOqyy/46cLx5hPJ8+Liuau68KxzT11ceTxdl+M5s/qLEz9x9YrWw+k9
OvqFq/eq/nZH5D8v8uN5u8i/X+TH71mRf13kx3Pqj4r8eN4j8v9P5Mcz+T8W
+fG8JvK3Ij+e472g9qtNPnVRqzGVPG9bPIfX9r3w24+MN9cmz98tnturO29y
/MdajReT55eK5/zqqpnLHl/RWjOoC0Xeq97e7Su93u+T55uK94jqZ9d/d1al
vjp5nl28d1Q3XfvGVePN3yXPMc6h9g3V39ZE/m7kx/P8yL935Mfz5ZH//ZEf
v2sj/9ORH89s/yXy4/nGyL8o8uN5VuTfJPLjOd5zaxs+cOtulfqG5PnG4r2y
tuiHa85pNdYnz48V76G1W3ZccO9489XkuXjem1Z799WHbdFtvZI871G859aO
n/+PRzS665Jn8t695Oc39HovJ89RB6htv+XqdYsrLyfPMW6ntkT1t7Mi/yuR
H883RP7DIj+eH438N0d+PM+M/HMjfzqfI//fRn5ys10a+fH8nci/IPLjeXZR
n6nNG9/pscWVQf2N8XQnxvi6NO6lqJ/U7q1dfHKr8VbyHOMWa5UYl4jnTlGf
qX17n6kZ3dYbyfOLRT2n9qv/2vHQRvf15Jm8H9r9c9/v9QZ1zkej3nWz6m+z
Iv/GkR/Pe0T+4yM/no+J/HdHfjwvjvw7RH48k/9bkR+/L0T+JyO/fMZ2ML5r
bvC54tvEv9sm6l3sJ+pgtVp4oD3bfcVj/7X3hAeNN8vqhB6Hxvgz1w9pZ844
KnPG/ZgzTsWccRXmjAMwp9/anH5Wc/oFzenHMqffxZx+AnPq2ub4dJ0Qn+b4
NMenOT7N8WmOT3N8muPTHJ/m+DTHpzk+zfFZ4i3jeHY9EM/meDbHszmezfFs
jmdzPJvj2RzP5ng2x7M5ns3xXOIt43h23Q/P5njO6oTh2RzP5ng2x7M5ns3x
bI5nczyb49kcz+Z4LvGW8bRug+pjaZ0H8bSeg3haz0E8recgntZzEE/rOYjj
2Tyt5yCe1nMQT+s5iKf1HMTTeg7iaT2H0d4yjmfX8fBsjmdzPJvj2RzP5ng2
x7M5ns3xbI5nczyb49kczyXeMo5n1+uG578P6nX4d/vhefSD9vwubj88j37Q
nt/L7Yfn1w/a8zu6/fC8+0F7fl+3H56PP2jP7+72w/P0B+05H0bXP5m/P2jP
eeL2w/P6B+05f9x+eL7/oD3nldsPrwMwaM/55vbD6wMM2nMeuv3wugGD9pyf
bj+8nkB2vmXth9cZGLTnvHWdk/PTnPPQnPPNnPPKnPPHnPPEnPPBnN/dnN/X
nN/RnN/LnN/FHP8l3jKOZ9cz8WyOZ3M8m+M5q5eGZ3M8m+PZHM/meDbHszme
zfFsjucSbxlP6+qobpnW4RFP6+2Ip/V2xNN6O+JpvR3xtN6OOJ7N03o74mm9
HfG03o54Wm9HPK23I57W2xntLeN4dn0Sz+Z4NsezOZ7N8WyOZ3M8m+PZHM/m
eDbHszmezfFc4i3jeHYdEs/meDbHszmezfFsjmdzPJvj2RzP5ng2x7M5ns3x
XOIt43h2vRHP5ng2x7M5ns3xbI5nczyb49kcz+Z4NsezOZ7N8VziLeN4dt0P
n+b4NMenOT7N8WmOT3N8muPTHJ/m+DTHpzk+zfFpzng+1+sYf2bOeClzxveY
/z7Gc5g/E8835vRDm9Nvak4/nzn9Uub0o5hT9zdnvJ3rbIwPM5+K8UDmjL8x
XxHPH+b0B5vTf2lOf5s5/UPm9GeM5uuzeh3jscxnxvgbc/qtzc+Nfkpz+gXN
6cfK6pPRb2HO+LDRdadVGX887pfm9Eea039mTn+P+eUx3iirzzCPWJx+LHP6
Xcy5PrrOQH9SSb2iU/JemXHGd45+r8zf9xk/Z854L3PGzZgzzsOccQnm9KOb
t0vei+mnNOf66Pdf+tvcnvHEvK+9N97XGP/q9zjGa7o94wvdnvFw5ox3MWd8
RvYeGtdJc/q/zemvNad/0ZxxvX6fuiKuk+aMmzRnnJ8540vMGQ9hTv+9Of3N
5vSPmjNelveXLeL95Y/jegjfODjjEf2+w/gM+CbBGU/g/dP/DZ8XnP5a+KbB
GVfq53/GQcKPCM54BfhfBad/3fuhP9j7WRLXtzQuO56HPxjXMT8ncx2Dfz84
1ys/79F/7Psy/cEl/bMZp7+55Lko4/QfmzPu0/tnPonvp1+I8ZTmn4nxf+bM
P/F9jXkU5gfHuMzR98EHs/tpM8a9mTO/xfcv5mmYM69gdH/Q/SX9Vvdn99MD
Y7zd6P6yqYwzXyXr14h5F+bMczBnXL45427ND4hxluaMazTfJsaxmTNuzJz5
Nr5fM2/EnHkO5swrgK8Jzjhyt4/zMOOMfzVnvKY54wvNF8d4MnPGP5kzP8r3
X+b5mDMvxZx5FOaM+zdnnLr5PjFe1pzxqeaMpzRn/J8549XMGV9lznww338Z
zz36eWNmXgeO6w78s8EZ/+32n4jrFfwz3K/jeuX7HfOm4O8Jzjwftz88rmO+
3zEe2u2/E9cx+FbBmefm+xfztcxfieuYeTeuO77ffT2ub27/2bi+mTOe2Jzx
r+Zc33zfZF6ZOfOgzJm3Y848E3PG6/u+/OG47plvFNc974fxu+aMN/V+uO75
vs91z5zrnjnzkcy57pl/Pq578Luos8V1z+1vjeueOeOSzbnumd8Q1z1/L/MA
/bzBvDVz5lmZc30zZx6L+TZxfTNn/Lo5463Nub6ZM57VnPGXWZ64vpnznOTn
Lp5jzHluyMbjxflvnuY/inP9Nec6a57GaXtcX1ynzPn7N+fvxDzNcyzxMLq+
tD7jeDDHgzkezDnebNxdHK85x2vO8ZpzvFm9K86PsuPN6kVxvOZpvo84x5uN
cyupa6V5Z34+j+My57jMOa6y/H4eJr85+c3JaZ7mL4uT05ycZXn8fJvW8RNP
6+mV1LXM03p6Jfv382RZfYz9ZM/V8XeV1aPiPDMfXl9rwIfX13pHnSpymw+v
rzXgw+tr5fP4zIfX0XrHOJw4b82H19Ea8OF1tAZ8eB2t/79uNry+Vu7TdTB8
+jkWn26PT7fHpzn5yublZeNMwps53szxZo43c/yY48HP4XgY/Tw/lXE8mOOh
bH6cOcdrzvGac7zmHG/ZcbkOltZXVJ0tra+o94K0vqLeI9L6h6q/pfUP9b1p
/UPtJ61/qPobOf08T06/R5CzbH6W63LkcXvyeP98r+tyfK+fw9m/n9vZv9uz
Hz/H0n50v/PEpJ9b+Dx6HP7EpDl/J+bsZ3Q/VD6+nf2bs39zzldzvtf3Qb7X
nH8/epz2xKQ5eczJk9XZ4rw0T+v66r6Z1vUVT/ObxNO6vuLkN0/r8YoPr7vy
jnHXkd88rccrznH5Pq75y4O6VhyXOcfluhnfN3oc8sSkOcdrzvFm45/jeM2H
1+UYcP4Oy55bfP/FgzkezPGQjQcOD+bkKFt/wBw/5vjJxgmHn9H9ceszjh9z
rkfmeBs9XnRi0pz2vn/h2fU09uP27Nf1tLRese5rab1i1dPSesVqz/eap/WE
xdN6wqqnkcf3HfJk/U2Rx5zzyvcpcro9Oc3JmY3ri9zm5Pd9jfzm5M/qb5E/
GxdXUk/juMw5Lt9POa5sHF0clznH6f1wvL7/crzmHK95WjdDnOMtu7+bc7zm
HG82ni2O15zjNef4/RyCh7I6kjkezPGQjSsLD+ZcD0ePE5uYNMePOX6y8Wnh
xxw/5vgxx1fZ/Fk/p/0vdhzXkA==
    "], {{
      {EdgeForm[None], GraphicsGroup3DBox[{Polygon3DBox[CompressedData["
1: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
614QrRP13aXc27rE/UNp+28T9wyl+T9P3E9QPfhF4j6DasBvEvcqVeN8ncZ2
5ak1cM2Ma8YiwT2Nt5X3EvcWpA8LBfdAVuCLBfc6VuJLBPdD3tE8Je4zSIuu
TtyvkL79IHEfQ9r11zQ+K6f8lrj3uIjxHxP3S1WP/5C4F6p6fEPinqp0ab7g
Xs1b+F2J+7SvwTsS92MXw+8n7g9IY++G28JLtNcS91Wkw3cm7sG+qjVJ3DOR
Tj45uP/zJj4vdh28HF8quAf1brA2X6C5Yt5ej+5xSKv3Du6z1YP7BPcc6sNX
BfdG1CN5J7HOkfbuFfzO1pW2D65fGui9i+4ZqRboz/iLjJ8HDwiug86HBwff
Q2N4SHBPowk8KLj2aQi/l+oQ6asjcA/4Df5eLbiH9iG+SnCPazW+bHDfbxW+
TBrnlZvOgEfBH+OzwbWecmil4B7dB/jywX3C9/D/Ju6TL4NPC+77vY8/nLiX
/jq8P3EuVo4+kLinvZTxcjnrS71TZwX39z7Fn5qz5laseDO6H/Q74yuie4g7
9T5F9x936V2P7vHt1n6IrtmknVZF137SeM9E9w2/VayK1pTSjXdGnwForp6O
7gN+rfcouiaR/rk+uL+3Q3s7ul6VXv0suoaRjro6jfla977BfdHtmr/gnuc2
xYzonpfGl0f31HTNftjSjJ/xo+haSxpmdXS9Kr16V/T5hPbqp9G1mbTcx9G1
lvL+J9H1m7Rcz+A+5Fb83dHnGdrb90X3IvS+Pxnd8/0SnhXdC14Dz4jue34B
Px7d91RN90R03/Nz7eXovu1a+LHonqnW7oHo/pj2xnvRGle699Ho3qvqvtnR
PeKv4EnRPTHFkznRPd9vtBeiz1T0vt8efa6gPTM++jxG++re6J6JYtTn0XpU
mnBU9JmK4syt0Wc20gwjo/uw0hLjos9pFCsmRJ/TaA+PiT6bUWy5P7rno7g3
Nvq8RzFkeHA/Wfvw2eje9Dr4lVS7/Ag3D+6ff49vEdwz34C/PI0PytF1g3Oc
5qFjcF90E75esP7R3NYJzpVao3OC61yty4XBuV7589zgHCqdVjs4P2odOwX3
VzfjOwf3VH/Fd8FegLcE15iqw07PWTeqXpyfuL5QjaK6SXXdloxrUvVwNK6/
tw3u/W7EXxbc+/0Ff7H2BPwTvn5wjtY71TK4H675aRPcH/4Zf1Hw+cIP+PO0
rhnvgZrBekD7rUlwj3e9nilaE3ynZ4rWDRqfF9331zWXRfea9d69GK0btBYv
R2sLrcVLqRbR744PrqekW+ZHnyvoueZG6ww9i86wNDdlmKsJwb0sxZyp0f1h
xdIF0ecQmoebFC8yjlGLos9UtL6Ngs8stGcaB59Z6FkaBp9ZKEYtjj530dq9
Gn3uorV7LfpcQWs3LFhrSWcuje7F630fHazTpFuWRPfif2OsR3APX/xhdL9A
dcQ90X1I5dkqOdf50tL5cj6TU64pn3MNLD0zLbrvrTxSKue+ibRfhZxrYGmn
U3I+t1POmhzdD1c+/TK6v6M68avo/pHq1oei++3KL/lzPtuTZi6Q81md9PCD
0f155ZfCOZ8dSoMVyvlMUZoqT85nbNJOJ+V8bqccWjznHo00WMGczwWl2Y5H
9xalyU9E9xOlIUvm3N+RhiyRc09Huu7knM/nlHNjzueUytdJzj1Z6YFczmeH
yu9Vc+6VqI44Ft3flN4unXMfSto45HwGKf1QMed+hGqWajn3oVTLrInuhanu
Lpqz/pZ2LZLzWaM07cPRZw3K9ZVy7l+o3snmfBYi7VE55/6Fap//AesZ3io=

          "]], Polygon3DBox[CompressedData["
1:eJwtmnfgT1Ufx++55xgJRUSokOyM9i6UCBkNDQ3ak/IUZW8NLaOMyiykQRSp
JKs0nmiiUqmM1tOQpzzxvF+97x/HOe9z7vf7u997P+f9eX/eR60ePbvckmdZ
do3+Sern6Z+xIcsma3x2zLLZwvcJjxVuKXyE8IMa36253Rq3U1sl/KpwtRJZ
dlr0+oX6vp1ae0ZtnNamaK6d1garvaHxJK2/prWn1O7V+sOaa6G149Tu1riT
1n/VWn210cKDdc0fGv9X822Fa6kfIlxPbbDwncF/r2k0bqP1X4TvFF4q/LDw
q8KnCj8g3FX4d+EThO8R7iz8m3Bf4beEHxSuqN8zQvgT4ceFawjvUH+S8AHq
B+j6jeobCUf1twsP0vXvCz8qXFXXb1LfWDipv0PrF+V+djwjntVAtX9r/Ijm
q+j6T9TXF87U36bre2r9dcHRwuW0/qn6BsJBfW+tf6X+SOF91PcRvlzXPy/c
Vzjq+pmaG6G/N0ZzJ2vtes1PFJ4q3FF4jvDXGu9Qe17jDWoN+fPq/6XPPqt+
m/B2tec0nqG54fr8fcIn6fN/au5sjWurH6q1AZp7T3iC8IH6+9M1N0zX36u5
E7V2h9oaje/X+v5a7yW8QPge4aW6to/wm8IPCFfQ+q3CLwjfK/yK1p9Uu0ff
95DmTtfaXWpvazxW6wfo+gv5TcK9hPfo2t7R8XmfcHmtr9dn16lNE56uNlzr
H2v9MY2ra32Y8EfCU3LH8zR9x9DgGCFW+qu9q/F4rVfW+mLem/CXumaZrr1d
66uFx2h+P633E35HeJxwJeGLhOcK3yq8V9dPVrtLnx2iuWZaa5Ac/0M0t0vj
49gjwk8Il9Dnj+UZEI/CSfh44dnCU4VLCh8sfKVwN+HvNa6h1kP4EuEdGvdT
a6FxG81t0z3MFb5feLzwGdEx10z4uMyxeGLy/U7XXGl9/zHJsUMMEV9HCT9O
/AoH4ebCk9hvwb/vhOT3MU24lNabCD/C+xX+H39LbaLwQ8Hv62i1J9g/wrmu
byr8KPtR+O/kmDxS4xMyx+ofuudDNa6iuRVa2yVcU7iq8ErhndHvp4zwG8J/
CzcTri+8Vvgv4XrCNYXXCB+kvzlP3/ud5n7WWlWN22itk/B/NB6oa9oKdxb+
peCAVsF7AG6or3ah8BXs4WiO6ix8YWbu+lNzdTU+VHOrk/dwc42Pz7y34Yij
gzlmU8EpRwmfmJlregk3Ej5K+APh/sItgzlxu/BdwqcLnyW8VXi3/l4Tjetq
7s3kPdpF44sy793SascLn04Ma3wKe17jpzS3r55Fa+FXhBcFx+/50fFI0uD9
nRP9vq4V/ku4a3Q89sz9vjpExwf55c/kZ9ZS+KDiWc5RG6PvHqe5Vrq2dfT7
vjw339dUuwasa37S+FC1q4UvE/5R40PUrhK+VPgHjRsm71X27H81vkzf95xw
n9zxdDj7Tfi2YL6HA4nn63Lns9pqNwj30Pp/NH46OZaJ6ba6tg45hf0bnJ9q
qV0rfIXwzxo3Ts4vo4OfR5vo+L4i937elXvv1VQ/OJmzT9C1LTJzeV/hE4Of
0dfCZwgv0Xh+cD46OzkfLAnOL22EXxN+KZhvzxJ+VfjFYH5qK7xMeHFwfmkl
vBiuD+bX0bq/jZm58FDyd3L+mBOcb1oIvyj8bDCftRR+iVwQzN8j9flP4Sd9
/mDh07W+SPiZYL4dpfUN8JPWDynhZ8iz7J77/Zya/H5m6/qyWj8ZzSD8pHAZ
4U7R2uAGXf9c8jMh9ssUz6pLdOzcJDyfZ6n+en32OnKUcB2tX0eu0PxYnqX6
fXi2Wr8M7cH707in5iqjBYg34VuEDxB+WdeX0XiL5i5P5vvSvCvhS4VLR++l
5pofIfyOWhOtHau5bzX3olpJjb/Q3CVwO/Gr8c2aq6DPLtK6fmb2ueYu1tpS
4X2Fv4FD4Ga1GzW+TXPVozlppcavBHPV8OTYIwZLaW0M8St8K3tM+BV9X1nu
RXPdtTaa/aLxTZrbT+sLC933GZyQ/B1wVbPc311f+EbhlsLjkzkELmnKPRf8
0SBYgxC/cCrc2rzgEzgILtpP/Xta+4aYFi6r/m3ht9TqBXPyZnhXrbXG5dW/
m/wMzxQul/vZPq42QNcP19xR0ZqUcbfcWpV7OlW4RO57nao2SNeP1NwxaC3h
Y4Kv+SG3hhiq8cW5tQUadBj5Mrc25Z5OEy6Z+17JEeSK+kV+bBj9LFtpPCH5
N8OlpYpnwTXk0r1Ffnkh/yctZJvICcnPpFnB/zyrccK9hPsIHx6d08ht5LT3
cuc0clst4ffZQ8SBWm3hdcJr1KqSq9gDyd/BHiD2+e6V6BZ+u9avEd5GHhau
qLYcbai5OzQ3UPgI9p5wT+E7hA9D2wvfLPwvcpjwI+Rk4f7CjYQfE+4f/AyP
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
          "]], Polygon3DBox[CompressedData["
1:eJwt13XYFWUaB+DvO+cYKJ1rgCC1pEoqKVJKKulSrqRBiOQqodIIGJQJuIDg
qugupaRKiALiSoiIsEuJAay5IuX9XMMfv+t9n3ueOef75sy8M1Oi+4A2/VNZ
WVnb5BK5NJOVdQ1onp2V1UxGq69KZ2X9Sa41r2XbVGMhdUG5xrwme9KYT51X
rjKvziYZ80hZ844+6x6ff8G8gJ78crVtNdSTjRkpbN5EXyt9J8336elqHMXG
s0bqL6QLG8nGsYbqdPw9rDFryb43P8gfiL+LTWd3qS/RV4Q1Za3ZKfMqbLBx
JpuVnRyEHKwYa6Vuj34xz2P/3HEcbKumnmh8Qr3L9hfVb0gHdplca97Cvm1t
+8n8z+we41NsNmtqv9/lgvoGqcH22F40jrEU018n+uO3iOMkRc1rs2nGknK7
+XD7DpMX1Mv1FGcN1Hf4vN/MV7ASxtvit2Snzd9lNxnbsE4sh3qD1GUnfE7x
2EcuNy/KWuprp+9n83Lsr8an2XOsib4r5QopYltV2yYYC0pl8276esUhtb0Q
u4Hdw3rHeRb7setYa9aB/Wpent1rfIY9z27X95ucU1eSijJQz2l23ryyVNe3
2z4r2fXGhqw5+918WZyPxlqsIfvRPBfLKYV9ThX1+DiHZZT5En0r9PW0vTKL
i2MOe5V1iGPHBrJX2GvsbpaLlWbtWVd2zrwsuzvOE/YUq6dvi9zGerC+rHyc
U/rKxLnDurHz5lXZUOOr7E3WRV8NNpK9yZazXmyHtGD92BBWVf2RNGQ9WT9W
Qf2xNGK9WH9WUb1R6rGTPvd685JS3Xw4W6zvLX3dWDU2jC1iS1hXtk2asD7s
IVZZ/W9pxQbEOcmqqz+T1uwhNpzVUJfyeXeyx9hEdjPbKo1ZbzaAVVJvkvrs
lP5S5qVls9zK7tV3v74y6k+lJevPhrJq6or26cNmszmsJbuRPcTmscWsI9sp
bdggNoLVSifrwRC2kC2IY63ew9uzobEe6qur/lK6sdFsAmusrqT3PvYcm8ta
sVRcD6wRa8FOmO/ibY2D2UhWW/25dGKPsjGsgXqvdGYj2Fh2m/pHOai+RC6V
9XFdyQB9c9WL9LXXs1vasSFsFKsTx1jfs2wpWyYFrHU54/iyduou+s6Yf6K3
ubEvG8yqqL+SHmwsm8qaq/dLdzaGTWHNYj2I9Ym1ZZ3ZWfMDvKdxHJvGWqi3
SzP2IBvEblKXsW/HWENivZeFcV3JXexx9SR9NfVVYL1TyXod6/YS9ZlY31l1
dV19B8ynx9+tzo5jxVaw99LJPezbTLKuxvo6Sw7puVKu0LfK9vPxv6SS9SbW
na3680q5VHJfjPvjV+rj+p5g89Vv2PcBdT5egXVm3VmKzZbD6lzxPWy17UfY
IOMM9jLrrP5ZTqgvk8vlfZ91mD0c/4/6JX2d1C/IsfgNJTdbl0rWybPqolJM
Ntm3gFSyrau6p77Mxe84ebEnevvoOcoe0feier6+e9Vfywj2cvwWrEd8pzzK
Xorrg3WPc9n+r7I9cUzYk3G9sMVsLzvIprJf5JT6OinDNtv+VtwHjBVYNXY4
1mCWI+4FrCo7FOseyxhLx+/B9ps/z46q88VxZWvZP1i28XpWnn0R92aWNpaK
+wf70vz1uDaNJVkFti+uC1bAWI3VYd+lknOtVyo5H+O8PK1uKE+x9eoP9Q21
37fyZHxXXFvs4bin6hsf92G2lvVld7DZ7EP2CRsZ6xybyN6J65n1Z/+PqMvG
MwL7xPZ6+ibEfY6tY/30fCOT4/9hS9lA9TOxPqnPxe8ty+KezfaxM2rTrKVx
Htv4nHEL38FG2fBdnFtsNdvAHlfX1jc2lawZsXasiucTGceWq9foe1Dfr5H4
beO+zHbY3kTfDOPGuIbYIxfXoelsA/sgjo26kTwd16d6i75hca9k09g6tpkN
YbezWWwz285GsKZsJtuUnTzHPsoasKlsbVwHbFA6eba9mtWO31d2xv/Pj5jn
kZz61sT1yA6o03EdspXsVr1TjGvYRjZYz0z5rzpHhL0b1w8rZl6Yva4+Efcn
+86JdZXtsW1s3LfZy2w7283GsEXyu/oaKcV2xr2YnVFfK6XZLrYgrmF1wbh+
49k91h/2kzp/9LKt8fzATquvlpLsM/b3uIeo88b3sI/j+o7zV50Vn2nYwM7G
8TLWYPXYV3HNx/mmPq8uIB+wVenkGepwJnkOjOfBV+SHWJfiu/V9lErW9g6p
5Hk1nlt/Vq9LJ8//X2eSd4l4p1gY60R2cvziOG63/f108uz7XSZ5Po7n5Ovi
OMeYSZ5dn84k5+mYVHLfjvt3Dve39enk/eR4vF+YF0knz7fxnFs8kzwDPZNJ
nn/iOahEJnnueNb4QTp5Dv8+c/G74t5h/jj7p89/1993H3tHbmR3sb+wy9W3
6HuMvc3eYX3i94k1VV0k1kD2nu036xsd6yBbyXrrWZ1OnqWPZJJ3jnj3WJNO
3juOZpJ3rHjXWptO3rOOZZL3qXivuiC5WF2f18jnHUkl7wtNjfex++UHdWuZ
xz5V79U33n5vS152E7uFHY//M77LWIXVYt+Y/4vlN1Zltdm3F++XOVPJdRXX
1998fnN5iW3LTt6T4n3ptVh8WAlWznRvPHvoW2T8nB1gU/TcyeaznWwfm8ha
sblsB/ucjYvfjDVgA+M7Wbl08oz0n4v3z7iPdolnCFmgb5f6S32T4tqVvmwq
m8naxn7yIJvCZrA26nNyGavJ6rOD5odYP+M0Nou1i/uO78jD6rMm7FgqeWYo
b+wU54aMibUg1lnzlBTSt9H2eex/sQbJVWwLa6N3oXE3288mp5MFPXfcC1hj
5VHz/KyisQvrEeu7vrnyvToT1xLbFOc026++kJW86y9nfwDuY9p2
          "]]}]}, {}, {}, {}, {}}, {
      {GrayLevel[0], Line3DBox[CompressedData["
1:eJwt0rsvpFEYwOGPcRsMK6Jd0RAFpSgoN4pViSjoiGK3WIlsQakQOh1/AS0R
+k3o3MfMuM2ystkIu2Tjfg3PSRS/eU7mO5nznsxX0zvQ8S0niqJR3SqsL/Vb
87lR9IE/WM0NNvKQrTxnO5/Zw9JYFCX01bqew2zmONs4xS7OsJ+L/M5l/ucJ
77Wta/3TioFSXGWaa8xwnTthJu5yk3vcYlL74Xd4wBSzTPMnMzzkDo+4y1+c
dY9TPuhYN+GOmjBbkiNc4iAX2MdpdnKSnzjGJg6xjrX6Yh1nNx+d8Zl/2cIs
G8K9+JEX9v3hncp1FfaqyoxlrGSCFSwNe1jCBItZwng4j0UsYL4KrWMsCP9x
+I6vytNLeKYnGSOa83H2/j68Acy/Svc=
        "]]}, {
       Line3DBox[{690, 1004, 473, 689, 1111, 912, 691, 1112, 913, 692, 1113, 
        914, 693, 1114, 915, 694, 1115, 916, 695, 1116, 1010, 1215, 696, 1117,
         917, 697, 1118, 918, 698, 1119, 919, 699, 1120, 920, 700, 1121, 921, 
        701, 1122, 922, 702, 1318, 1005, 923, 1006}], 
       Line3DBox[{704, 1011, 1216, 703, 488, 705, 1123, 924, 706, 1124, 925, 
        707, 1125, 926, 708, 1126, 927, 709, 1127, 1012, 1217, 710, 1013, 
        1218, 711, 1128, 928, 712, 1129, 929, 713, 1130, 930, 714, 1131, 931, 
        715, 1132, 932, 716, 1133, 933, 717}], 
       Line3DBox[{719, 1014, 1219, 718, 1015, 1220, 720, 504, 721, 1134, 934, 
        722, 1135, 935, 723, 1136, 936, 724, 1137, 1016, 1221, 725, 1017, 
        1222, 726, 1018, 1223, 727, 1138, 937, 728, 1139, 938, 729, 1140, 939,
         730, 1141, 940, 731, 1142, 941, 732}], 
       Line3DBox[{734, 1019, 1224, 733, 1020, 1225, 735, 1021, 1226, 736, 520,
         737, 1143, 942, 738, 1144, 943, 739, 1145, 1022, 1227, 740, 1023, 
        1228, 741, 1024, 1229, 742, 1025, 1230, 743, 1146, 944, 744, 1147, 
        945, 745, 1148, 946, 746, 1149, 947, 747}], 
       Line3DBox[{749, 1026, 1231, 748, 1027, 1232, 750, 1028, 1233, 751, 
        1029, 1234, 752, 536, 753, 1150, 948, 754, 1151, 1030, 1235, 755, 
        1031, 1236, 756, 1032, 1237, 757, 1033, 1238, 758, 1034, 1239, 759, 
        1152, 949, 760, 1153, 950, 761, 1154, 951, 762}], 
       Line3DBox[{764, 1035, 1240, 763, 1036, 1241, 765, 1037, 1242, 766, 
        1038, 1243, 767, 1039, 1244, 768, 552, 769, 1155, 1040, 1245, 770, 
        1041, 1246, 771, 1042, 1247, 772, 1043, 1248, 773, 1044, 1249, 774, 
        1045, 1250, 775, 1156, 952, 776, 1157, 953, 777}], 
       Line3DBox[{781, 1158, 954, 779, 1159, 955, 783, 1160, 956, 785, 1161, 
        957, 787, 1162, 958, 789, 1163, 959, 791, 1164, 569, 793, 1165, 960, 
        795, 1166, 961, 797, 1167, 962, 799, 1168, 963, 801, 1169, 964, 803, 
        1170, 965, 805, 1172, 967, 807}], 
       Line3DBox[{806, 966, 1171, 804, 1263, 1057, 802, 1262, 1056, 800, 1261,
         1055, 798, 1260, 1054, 796, 1259, 1053, 794, 1258, 1052, 792, 1257, 
        568, 790, 1256, 1051, 788, 1255, 1050, 786, 1254, 1049, 784, 1253, 
        1048, 782, 1252, 1047, 778, 1251, 1046, 780}], 
       Line3DBox[{809, 1058, 1264, 808, 1173, 968, 810, 1174, 969, 811, 1175, 
        970, 812, 1176, 971, 813, 1177, 972, 814, 1178, 1059, 1265, 815, 585, 
        816, 1179, 973, 817, 1180, 974, 818, 1181, 975, 819, 1182, 976, 820, 
        1183, 977, 821, 1184, 978, 822}], 
       Line3DBox[{824, 1060, 1266, 823, 1061, 1267, 825, 1185, 979, 826, 1186,
         980, 827, 1187, 981, 828, 1188, 982, 829, 1189, 1062, 1268, 830, 
        1063, 1269, 831, 601, 832, 1190, 983, 833, 1191, 984, 834, 1192, 985, 
        835, 1193, 986, 836, 1194, 987, 837}], 
       Line3DBox[{839, 1064, 1270, 838, 1065, 1271, 840, 1066, 1272, 841, 
        1195, 988, 842, 1196, 989, 843, 1197, 990, 844, 1198, 1067, 1273, 845,
         1068, 1274, 846, 1069, 1275, 847, 617, 848, 1199, 991, 849, 1200, 
        992, 850, 1201, 993, 851, 1202, 994, 852}], 
       Line3DBox[{854, 1070, 1276, 853, 1071, 1277, 855, 1072, 1278, 856, 
        1073, 1279, 857, 1203, 995, 858, 1204, 996, 859, 1205, 1074, 1280, 
        860, 1075, 1281, 861, 1076, 1282, 862, 1077, 1283, 863, 633, 864, 
        1206, 997, 865, 1207, 998, 866, 1208, 999, 867}], 
       Line3DBox[{869, 1078, 1284, 868, 1079, 1285, 870, 1080, 1286, 871, 
        1081, 1287, 872, 1082, 1288, 873, 1209, 1000, 874, 1210, 1083, 1289, 
        875, 1084, 1290, 876, 1085, 1291, 877, 1086, 1292, 878, 1087, 1293, 
        879, 649, 880, 1211, 1001, 881, 1212, 1002, 882}], 
       Line3DBox[{884, 1088, 1294, 883, 1089, 1295, 885, 1090, 1296, 886, 
        1091, 1297, 887, 1092, 1298, 888, 657, 889, 1213, 1093, 1299, 890, 
        1094, 1300, 891, 1095, 1301, 892, 1096, 1302, 893, 1097, 1303, 894, 
        1098, 1304, 895, 665, 896, 1214, 1003, 897}], 
       Line3DBox[{911, 1009, 685, 910, 1317, 1109, 909, 1316, 1108, 908, 1315,
         1107, 907, 1314, 1106, 906, 1313, 1105, 905, 1312, 1104, 904, 1311, 
        673, 903, 1310, 1103, 902, 1309, 1102, 901, 1308, 1101, 900, 1307, 
        1100, 899, 1306, 1099, 898, 1110, 1305, 1007, 1008}]}, {
       Line3DBox[{251, 474, 1111, 252, 488, 280, 1220, 503, 295, 1225, 518, 
        310, 1232, 533, 325, 1241, 548, 340, 1252, 563, 1159, 355, 578, 1173, 
        370, 1267, 593, 385, 1271, 608, 400, 1277, 623, 415, 1285, 638, 430, 
        1295, 653, 445, 1306, 668, 460}], 
       Line3DBox[{253, 475, 1112, 254, 489, 1123, 281, 504, 296, 1226, 519, 
        311, 1233, 534, 326, 1242, 549, 341, 1253, 564, 1160, 356, 579, 1174, 
        371, 594, 1185, 386, 1272, 609, 401, 1278, 624, 416, 1286, 639, 431, 
        1296, 654, 446, 1307, 669, 461}], 
       Line3DBox[{255, 476, 1113, 256, 490, 1124, 282, 505, 1134, 297, 520, 
        312, 1234, 535, 327, 1243, 550, 342, 1254, 565, 1161, 357, 580, 1175, 
        372, 595, 1186, 387, 610, 1195, 402, 1279, 625, 417, 1287, 640, 432, 
        1297, 655, 447, 1308, 670, 462}], 
       Line3DBox[{257, 477, 1114, 258, 491, 1125, 283, 506, 1135, 298, 521, 
        1143, 313, 536, 328, 1244, 551, 343, 1255, 566, 1162, 358, 581, 1176, 
        373, 596, 1187, 388, 611, 1196, 403, 626, 1203, 418, 1288, 641, 433, 
        1298, 656, 448, 1309, 671, 463}], 
       Line3DBox[{259, 478, 1115, 260, 492, 1126, 284, 507, 1136, 299, 522, 
        1144, 314, 537, 1150, 329, 552, 344, 1256, 567, 1163, 359, 582, 1177, 
        374, 597, 1188, 389, 612, 1197, 404, 627, 1204, 419, 642, 1209, 434, 
        657, 449, 1310, 672, 464}], 
       Line3DBox[{261, 479, 1116, 263, 493, 1127, 285, 508, 1137, 300, 523, 
        1145, 315, 538, 1151, 330, 553, 1155, 345, 568, 1164, 360, 583, 1178, 
        375, 598, 1189, 390, 613, 1198, 405, 628, 1205, 420, 643, 1210, 435, 
        658, 1213, 450, 673, 465}], 
       Line3DBox[{265, 481, 1117, 266, 1218, 495, 287, 1222, 510, 302, 1228, 
        525, 317, 1236, 540, 332, 1246, 555, 347, 1258, 570, 1165, 362, 585, 
        377, 1269, 600, 392, 1274, 615, 407, 1281, 630, 422, 1290, 645, 437, 
        1300, 660, 452, 1312, 675, 467}], 
       Line3DBox[{267, 482, 1118, 268, 496, 1128, 288, 1223, 511, 303, 1229, 
        526, 318, 1237, 541, 333, 1247, 556, 348, 1259, 571, 1166, 363, 586, 
        1179, 378, 601, 393, 1275, 616, 408, 1282, 631, 423, 1291, 646, 438, 
        1301, 661, 453, 1313, 676, 468}], 
       Line3DBox[{269, 483, 1119, 270, 497, 1129, 289, 512, 1138, 304, 1230, 
        527, 319, 1238, 542, 334, 1248, 557, 349, 1260, 572, 1167, 364, 587, 
        1180, 379, 602, 1190, 394, 617, 409, 1283, 632, 424, 1292, 647, 439, 
        1302, 662, 454, 1314, 677, 469}], 
       Line3DBox[{271, 484, 1120, 272, 498, 1130, 290, 513, 1139, 305, 528, 
        1146, 320, 1239, 543, 335, 1249, 558, 350, 1261, 573, 1168, 365, 588, 
        1181, 380, 603, 1191, 395, 618, 1199, 410, 633, 425, 1293, 648, 440, 
        1303, 663, 455, 1315, 678, 470}], 
       Line3DBox[{273, 485, 1121, 274, 499, 1131, 291, 514, 1140, 306, 529, 
        1147, 321, 544, 1152, 336, 1250, 559, 351, 1262, 574, 1169, 366, 589, 
        1182, 381, 604, 1192, 396, 619, 1200, 411, 634, 1206, 426, 649, 441, 
        1304, 664, 456, 1316, 679, 471}], 
       Line3DBox[{275, 486, 1122, 276, 500, 1132, 292, 515, 1141, 307, 530, 
        1148, 322, 545, 1153, 337, 560, 1156, 352, 1263, 575, 1170, 367, 590, 
        1183, 382, 605, 1193, 397, 620, 1201, 412, 635, 1207, 427, 650, 1211, 
        442, 665, 457, 1317, 680, 472}], 
       Line3DBox[{277, 682, 1318, 683, 278, 501, 1133, 293, 516, 1142, 308, 
        531, 1149, 323, 546, 1154, 338, 561, 1157, 353, 576, 1171, 1172, 368, 
        591, 1184, 383, 606, 1194, 398, 621, 1202, 413, 636, 1208, 428, 651, 
        1212, 443, 666, 1214, 458, 685, 686, 687}], 
       Line3DBox[{459, 667, 684, 1305, 444, 652, 1294, 429, 637, 1284, 414, 
        622, 1276, 399, 607, 1270, 384, 592, 1266, 369, 577, 1264, 354, 1158, 
        562, 1251, 339, 547, 1240, 324, 532, 1231, 309, 517, 1224, 294, 502, 
        1219, 279, 487, 1216, 250, 473, 681, 688}], 
       Line3DBox[{466, 674, 1311, 451, 659, 1299, 436, 644, 1289, 421, 629, 
        1280, 406, 614, 1273, 391, 599, 1268, 376, 584, 1265, 361, 569, 1257, 
        346, 554, 1245, 331, 539, 1235, 316, 524, 1227, 301, 509, 1221, 286, 
        494, 1217, 264, 480, 1215, 262}]}, {}, {}}},
    VertexNormals->CompressedData["
1:eJztyLENRQAARdEXYhCNJRR2MILEb43AJGIg1jCHxtcpdec1N+/Uw9SPRZKm
Sso8W/Z2/q3b2f3LOeecc84555xzzjnnnPNXz3H/g3POOeecc84555xzzjnn
nHPOOeecc84555xzzjnnnHPOOeecc84555xzzjnnnHPOOeecc84555xzzjnn
nHP+uV8Kxea8
     "]]},
  AutomaticImageSize->True,
  Axes->True,
  ImageSize->{418.9521246287099, 369.58783310611346`},
  PlotRange->{{-3, 3}, {-3, 3}, {-3, 3}},
  PlotRangePadding->{Automatic, Automatic, Automatic},
  ViewPoint->{3.1210656899780047`, 1.307156383106391, -0.01706308724552308},
  ViewVertical->{0.5624580482915031, 0.1975517821670427, 
   0.8028787189076184}]], "Output",
 CellChangeTimes->{3.5380125233509884`*^9, 3.5380137668591127`*^9, 
  3.538013839505268*^9, 3.538013895451468*^9, 3.5380176656041083`*^9, 
  3.5380179331114087`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ParametricPlot", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{"Y", "[", 
        RowBox[{"[", "2", "]"}], "]"}], "-", 
       RowBox[{"Y", "[", 
        RowBox[{"[", "3", "]"}], "]"}]}], ",", 
      RowBox[{"Y", "[", 
       RowBox[{"[", "1", "]"}], "]"}]}], "}"}], "/.", 
    RowBox[{"{", 
     RowBox[{"L", "\[Rule]", "1"}], "}"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", "0", ",", "10"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"z", ",", ".1", ",", "8"}], "}"}], ",", 
   RowBox[{"AspectRatio", "\[Rule]", "1"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.53801282829443*^9, 3.5380129108131495`*^9}, {
  3.5380129553286963`*^9, 3.5380130207784395`*^9}, {3.5380130624618235`*^9, 
  3.538013105511286*^9}, {3.5380131359620275`*^9, 3.538013310068986*^9}, {
  3.538013364985127*^9, 3.5380133887044835`*^9}}],

Cell[BoxData[
 GraphicsBox[GraphicsComplexBox[CompressedData["
1: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
   "], {{
     {Hue[0.67, 0.6, 0.6], Opacity[0.2], EdgeForm[None], 
      GraphicsGroupBox[{PolygonBox[CompressedData["
1:eJwljjFLglEUhl+K+/kpCAlCBC4FLk6Je5CLBILU+IEI0eKif8DFUWhwcZAa
voaIXFxSaBHCpaWhHEIQpB8QuIqLz+UMl/O873nPuef0tn3TOpCU4x3yzo+k
QUYaOmkZSl9pqZSSengBveuEdA9n4V7C+unAMt2ktELX4U/qhh15+AGOWP5C
/5HZKrNX8GtgPe//UAvoS/JDMhdkMvhPoe3yez747w3+x9/C7/AOHlMb/LWG
T/Cf0XO4yOwMTjI7py7IHMPN0LRnn807y/vs1Fl+BJfhb/xfuMJtNfw/aoye
4EfcGHPrHd4Z3Ic7zvpyltkDDWowRQ==
         "]], PolygonBox[CompressedData["
1:eJw0nQf8VtMfx+99xu9Z93l+z5MVMiqlochISGYlLclqEFKoVBpUkkoSQiWV
UHZkh5BV9t6yt7+RvTf/z7vP8Xr9fq9zvuN8z7jnuefcez/n+2187KiDR6ai
KOpai6KM0jvqomhKMYpWKL1AgluVnib6FqXni75R6QTRy5XOFr1Q6YmiFyg9
W/RFSoeKnqd0puhnlM4R/bTS+aKXKh0leonSc0QPK0fRH/pfLV4xF0U5/T+g
fJ3SqyWvV/qI6IrSa0UX6tXGahQtFv2k6D9l507J/1B6hehjZesj/Y8Qb7F4
aemtUj6l9CrJXxfvEtFrlS4UfbXSMaKvUnqu6H+V3i36H6VXil6mdLzo65Se
J3qobH+j/wXivSzeC/q/SPnnlV4s+SPYEf2w0nmiN1G9T4neWOky0Q8xTqIf
VDpX9O8VtUH96S/5PaK3UvqC5FsqvYH+SX6t5MfSD9EZ9f8W0TMZF9FZ0beK
Plf0o6LrRN8m+gLRj4n+TeWvEn2Y6LtFb6/0bdlvq/Rm0bsq/VB0e6W3it5J
6Xuid1R6i+imSl8W3UTpctGtlb4hupXSm0SP0FhEquM18ZqLt0J13aG51FC8
liVdT7XndvHmSfa49NOibxY9XfTDon/VONyusr8oXSp6c/GfFb2Z0utFb0A5
0Q2UXif6ONX3uf6nibdSZe7T/wzlVzHPJL9Gtm9X/Ynq/1f8SPUtF+8UlX+I
6yv+DaLHiH5QdErym0RPEb2G+a38CpVvIL0N1f6/lF4n3lDJ75P8b9HLRA8T
fb/of0RfL3ok81b0E/xOVO/jzAvRJ6itP+n/RvG+Ea+k+u6S/lXSf1ry9+m3
ZO8xL/m9iH+Q6n1a6auiJ6jsNqqjr3jPi/eK/g9T/mWla5nPSvuJXqv0ddFv
Kx0o+i2uE+1R2lP045QVvW1e81R0c6Vfir5baZxoLJXWp6PoTKVvST5daUr0
9kovFd1W6dfSP1vpu6JnKk1LPlPt66X2fSrePPHO0/8Hyp+rNCP5I6r3QNEP
M4+Y/0q7in5Q6UuMt9IOopdz3fm9qNw5ojdW+hnXX+lM0Q2Ufsr8UDpb9GZK
Pxc9RfW3V/3zxGsi3lb6v1D5LZV+IfkkyVtJfoJ461THZ/ofovyn/A4k/1jp
saI/UvoW9zule4i+Relzok9R+S1VvpN4K/gN6X8f5VfyO5X8PqX7i16l9EWu
p9JBot9T+qboM9SO10VPYZw1HqcpfVX0JKWR6AuVfiz6AqVZ0Qtpt+gFSnOi
j1f6mOihSv+UvUFKHxJ9lNLfRQ9W+rDoY5X+Ibq30jtE91L6s+i+SleKPljp
L6IPV3qv6MOU/ip6uvq3r/p3v3j9xUs0P1dqfl6n9j/D+GheXqX5+ZHSxaI/
U3qt6E+VXir6S6XXi16n9DLRPyq9RfQPSpeILsrenbK3hPug6O6q4zbVdaDS
n5ivlJP+W0oXcT8S/0rJ2yv9VvRUta8jvznxOol3o/5/Y77QVo3PMvop+jql
JdGzpH+I9P/kGoq3k/6XKL+j0m9k71KlX4lerDQv/auV/iD6KqVF0UupV/QS
pQXRM2TvANl7SbxTxNtP/8uV35dystdV6c2iuyj9UfRwpU+KHqb0L9GjlD4j
eqTSv0WPVfq86DFK/xG9h9JrRO+u9DvR36uuSzVeu2u8bhN9ufK36X5UJ/46
7pNKrxCvl+R3Sb6Lxre35K0KUbSd2ttZ+Vf1P1R6u+t33V7yg0S3lbyN5B1E
Hyy6vejtRe8quo/oHUW3Fd1K9P6i/1F7GotuKXo/0X+I3lr0r0rbye4v/Nb4
fTNuoh9W2kD0E0rLoh9XuoHoczV+/dWWqnhPi/cCfOWfV7qR5K8o3Vj0y6Si
+6qutfofozLHif+6+JsqXat0E8l3Vnt6Sd5c7W0teifRPUU3Ed0q7XV8rMbp
mrCeHyzetZJdKXpd5PvsFZJ/EO63pFeK/jDQk6V/p/TfFb1hLF2lJxddnv1K
D9X1mv5HqH291a4dVP+BojdWmW1Vtp3o7qI3E91C9Haiu3D9RDcV3abee62i
6G1EtxV9gOiK6Gbcb0V3Y/0R3TztfdLoottB/W9rHBqp3reUNpT8fa6D6PcY
J9HfKm0t+hulW4hepPGfwR5DvAtk82z9X678TKX7Sd6d34Dyl8j+x5H3Tx/r
/zLRs1TfIqXDi5azv9tT7Ttc7TtQZXZmvVC6WPamK91X9L6SD5T8KNG7id5P
9JGijxW9u+hOoo8Q3Uv0LqL3Et1P9MGi24vur/zr+p+gNk+U3X0kHyC6v+Qd
JO+t/2vog9rzWeR2jiyapr3sQ4cV3W7a+702tVdJ/2LR/5P+7rJ3iOx1Eq+d
bM1WX49WXc1U16fci/XfRPmPlG4m+ZdKW4hex7iL/lFpW9E/KN1S9B6yd6js
7St7O6Z9n7xa9X8S7pcdJT9M8i6S75T2vvh4yeeH/THpCUW3D/oi6V0n+/OU
dmE9UHqD6AVKu4q+VOlNohcrPYD7ldJbRS9R2k30eUqvEH2u0v1F/6C+Xab7
RSfdL26X/ePV3+/0v6ToOT5JOndI903lG2i+P6n0QsmeCvsX9jEXFM2H/p66
VP7WgnWeZZ8r+XNhf88+f27RfOjjZP9G6d4r+i+N/z1KzyyavjDs574omw89
WPlP9D9OOteKd6jKX1dw/uvI+/BTJLs+7MdJTxV9Q6CPkf5y6d8l+nfpnyT6
FtGPic7Gfm6ZKP2bwvML+/b5ol8M+/dh0r9Z+mtEp6T/k8Zvicavi8bvDsnv
4L7NXkBpRbr1Ss8UXVH6P/az0r9S+gdLf6Xon0UvFX2g6DvZL7Av0hiuUlpV
+b9Uz0rV/3d4fuG54TzRj4bnB/a1Z4m+P+xvSWeKfiDQx8vGTQXT/0Z+rpgl
+erwfDFEY7lO/+cU3Sfszi56PLDPOEwSfXMYj2/Vtsukf33BPJ4Dz5D8zvA8
OEv1rZLsZ9Fba3w+V7pM8i/CfoB9/ArRv4X9/LnSv0/6v4tuIv0TZfsX/d9R
NI99xHVF26H8j6r/SslXqsz/6vw7uqbo/OLw/PWt/l8VvSDldJHkrwV6gupb
UTBdjf2ct1jyN8LzHumlRc93aJ4b7yr6OjD+Pym9rej+sX8ZL3u3y95Losux
9zW3Fq2HfPOs9Aue//WS36b0dMlvr/PzMs/Nk4vmQx8lezcULP8l8rhOLXq+
Mr7r52HR9TEf2RddLvqdsD96iH2hxuhBpbW0ny9+5jeNXsrpzdL/PtDTpXN3
wddns9j7tBsk/yrs10iXi/460DOkf0/BdCPpzxR9b8H2thTdWvUu0nxvxT6K
+a55fbLoX5S+z/Od+JNEp5R+xH5a978bdf/7U21M2NOInqnfQy08z8+T/Ydk
vyC6lez/rL5dLd0HxIt5BpX+9KrlvA9YKP01BZffPra9syR/VH2o5lzfDNFl
5a9JeZ/0k2QHhf1SD8nzkvcTfYjKXyt7T7I3Er2n6Lslv0jyN1VmO/Eulnx1
wfbaSH6z5GdIfp/kGfFGqa15/cZ/EN0zZ/lUybPhfQPtnyb6QcnztEH0haJf
Eb0NfWLPJPstee4I9c+vuj08X98p+nzRL0p/a/GWSv8x6TdWflfpr5R8XtXl
b0yZvkXjHatNLcS7UvqPs7dQfjfp3y752dJ/QvY2FG+W8jdJ/y/140nWeek/
LP2NJGsn/RXSP0c6T0vWMLR/TtX2eB/QQfP/wYL7u13s+9z30u0R7ncHSD8j
/W6ie0h+gNJvi6a5n/6u63296n6G/ULO69Tnku8d1qtVKr+4ahnvJxYof6va
m1L/3i1afol4HynfIedyXyi/Tyj/iPRiyfcU3S32vvp/kncM+2ueM67SfO0Q
nje+Yc1nvZJ8pvTvUbpfyTTPezz37VsyHxo7nxZtH3vLVP4p9hai91L5e9W+
har/fensnDO9SPQu4f3KDdJ/umB6H+nXSXaO+rdcY/KS+PdI/2Lx3lH5HXKe
xz8r3yfM526SZ6uee71ir1PfFD3OjO8RSv8ser7z/ofrea70N835fRTvhf4o
Wg/5IUp/E31oWL+6SD9V9Xh2lf2RaldOY7o/73pSTr+SfudAd5V+umr6wNjr
4K9F28VejndV6t+NsvOy+neH9M8T7znpNMqZni16i5zf//yq+XGddB8tmHey
8hXVn9M1OFF0H+mXpX+S8kfFfk9TJ9kJOb+vGS39svSPZux5PpZ+SfpDRPeP
/d4mkf7onN/fjFBaLNke73cOkn5SdV0DpX+T0t0lvzm8rxio9B+1/cic39/x
Hq6x5LNzfh83S+lWos/J+X0d740KJdeDfdoViz4mtK+X6itWTR8R+71fWvLj
cn7/R5opuf3QU5VuKnpazu+vNlTZ2RrfW9Xv9wt+r9WwZD3kk5VuLPp0patF
P6qxqVeZ8aKHxn6vuGXJ7aa9jXiXKHsrZO8z2Ttc7dtAvLMkHx77Pd7m0p+R
8/s8xrEs+uQwnhXpnqfyN6v8mwW/d6uXfFzO799IqyXXD32Y7Deouj8nyv5Y
ldtQbWxUcp0763d6hfK7hOf567kPir4h5/cVg1R+c5W/VvRpKj9O5TdV+UWi
n5D8MqVtpX95zu+PB0h/E+lfLHqs9DdS/ny19zaV+0DtnS9+i5LlvL88Uvqb
Vl3+1NjvoduUbBd71NNa9CWhPu7fF1R9v+Z9bqXodwi8O+ic93vfv4ueR8yf
ntIvVD2fDpP9gaIbVm1vfOz3utvI/pyc3++SNhM9N9D9pb9x1fTJsd+7blty
P2g/77U6ir4t5/dbzNMmos8P8/VC3c8/L3h+nxn7vdxuJc975vs1XIOSx5f3
l1/p/rWO/bboGbHfG7Uv+bpwPe7knlyy/HnRX0j/C/Y/oqfFfi+0g+RX5Px+
aLzGfTNdr3biXclvWv3ZrOr8xNjvTXcquR3UTz/2LNnef+/rtqq4Xurjvc/S
kucN82UHpZeLbhfeZ/Je87KS+dC/8AzNs43KXxD7vWkvyZ/M+f3ps0oPFv1c
zu9n06rvLr4J8IyR83vbPiXrIadc75LtUf4mje8v7G1FXxH7PeRQyT/P+X1k
Ru2YLDob9k8b6fn1n4Lpm6U/WXW1U//yPKtK/o/KTZB+JPrDlO0cL/qLYO9R
pT1KbhvvX3kP271kPvSpsre17HUR7wHxvlP/vyo4Pyv2e9HBkn2S8/tR0uNK
bj80H41+4n2J6EWx39OeLfmG4X3tO1zDkuW8j86qvrvZs6rMhznvE08rud/0
9wPxjilZxvvTP9Se79l/i54X+73xAZKvzvn9MWk30WsC/Zv0vyv4+syJ/f68
mfr3oujXUk4PLdkeNO9pjy65Xur7h2d8nodFL1D5DdS/v9mL8u5R9Cai/2W/
KvrW2PveMSr/W87734j7eNF7V74flaX/B89Loq+V/h/8jqX/l9IPUi43VvTv
oTzfne4p2g7lZ6s99xf8fLhNuP47qD+nq0wdexbuw8p/o/Rdnp+UjhT9g9L3
WJ/1+zmK94GysYds/Sn+uJLbQf3/ch8reR4xf06T/e1kf3TJbcbOKOV/CvZK
6s/vPA+Ivjr2+/XW0v9K9DuSJ2rTdOmXlX6S8nPxDNHV8Hy8ucrH6l+N99Qq
f7rK76jyZ5XMK+p/Wsl2KL8pHyWLtnd77Hl/Rsnjz/xn3k8s+frQ/jrp/1rw
/F8Su13DJP86tK8g+W8F01fGHrcRkn8Xxo/0pJL7B811OkX032G8cmrvKv3/
VTCvpHqnltxu2st3mcNFv5rz95m/eAfD86jo+bG/uyyQvEXe319IF4puGeim
al9W/W0s+r7Y3zHmSL513t8zSOeWLIduLv066TcT/WDs7yG7ajy3Eb0u5XR+
yXJovhM8wn4i7+8FXVV+Y5UfIvr92N8xOkt+f87fM/YX/6aS1yrWrJ2lX2Z/
LfpZ6TdUep7km+b9vaag+u/Xf7poHt9pzpe8Ud7fa0gvEL1FoPdWekPJ9r7n
/iz7JZXdjffosd+z31hyO6ifffrVJcvZr5dU10P6Lxa9J+B7wZ4V28VeZ9nb
SLJjRL8rezuKTtivi3469nv3a2WvY3j//pTuz5mi2/eA5C2knyv6+qyO/dx7
ifS3C8+/Z6i+DqpvsXhtxGsl/XzR+Ydj272u5Pqwz7w4ouT5wPw4Wvw1JbeP
7zn7qfyG7CdFvx37O80qyY/I+3vNIUrvEX1o3t9zPlV7GxRNvxX7u8+dkh+U
9/cf0rtE9wl0We1do/9a0Ty+C91dsl3s8d3t3JKvK9eT74r9Rb+R8/fFiSrb
XP0dUPI9ku+MR5Z8n+f+zn1/luiNwv1/C/UnVTR9F+MtusqzsuiXY383uUX6
B+T9/WSa7HeS/VvF6yZeB+nXF51/MfZ3lGfZr+f9PeUEpU/wLJD397H2Ge+x
mK/Px/5u9njJesjPlP39Zf/Rkud8Pc8W+m+oMifl/V1tdcnXhesxgnlSsozv
OQP5nZV8fX5L+TvW7aJ75P09i3RFyf2D5rrdJ7pfuH57q30bFE2/Efv7234V
28Ue342eKrle6huue8csPQMNU9pR95IDy352WsW3EN3+zhB/oeRTlO6T9nfZ
99i/5/19lu+Mr4menPf3Rvjv8zwS5K/zPKT14UOeWcSryfbj7KGK1umj9m6u
/ETuN6ynSl8pmf435e9j3Srmr6eVvsNePe/vx3z3fIPnj7y/f/aVvUaydzr3
u9jtWlsyTft6S76Z5OOZf5K/xfOA2ndJ3t9DD5d8y6Ltf8vzkeimRcv/EL2h
dJ/W/0Fq0zdcJ8kbSz6X+S/5G7JXqZnme+uboquiLxZdJ/pz0W1Eb6gxfVG8
01V+B95vK79RyuXLkn/CHpwx5D2o5OdzfWOPZ1Izzffv41R+G75PcD1Df2qS
r1P5RfRR9HY1299Q+kdLv0nR7fktdvuekry3+jOfewLPX6K/5pkj7/a2Ff1S
3t/T+G7/dsnXgfE/VPa2kL1por+WvWGit+V9OXL2P+yva6b5fjpa8la8jxSd
l/wjyRvzvkXjcQ/3UJ6XRP/IHjzv8puK/oU9v+gNNB+e4h7B+/ug37DmPN9X
PxS9dc32K4HeSvS/Kn+neCNUfwveRzN+qv99yRvVTPO9F3pz0b/zTCLeGOm3
5nsC9qV/luo+UGP1Zsl9/lT6Lfm+pvY/GehWop/K+/vkJ6Kbi16T9/tU6Gai
89JfLV4Tro3+D5PNtHjvSL6R6O94Zsmb3lj0lXl/Lx6n9mzH+3naq/Z8LPk2
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
+70y9jd3TaDRQRf5X1XHdF0fY1X5RzWenSvmEQ+WPG2nf4/o992FdwAlr8nr
1+WSfSqyPlfLluNPkXil1/L+T/a6ivdj1nLyxKwldm0Tyf/me0vG/umg/6na
Zz6+868JNH7rLozMp930Df+NrLvPl+yDkfW3T6Dhs76Rh0esVnzn/5y1/3zy
8K6T/X+r5iFrGuiDM/avt43oqex3yvZvd224v+N/b07k+zz9oq/4f2RdPqBi
P4isz/h1fIn9UMbrHXl4xHo9RTq/cm8vOQ9vmezHNfOQUX+q5hizxJS9UXSh
5pi2/2bdfuT43cPf3raic6L7Z+xPDz+Nr5a8HrO+7RZo/EqyPpNHh1ioxMa9
XuXTNcfI/T3rf/LI0GkW5Idl7B8QOlNzzFpi1y4LNH7t8GfHuvt6yf4qWX/X
hn7RV/xbHh7k6LH+/Zl1fFzi5BLPFhk65OHdIPvZmnXQbR7oI6TzXWz68Zpj
nk4N/amr2Y8h/gvfDP2iL8RDZR1+q2Q/mKzH/QINf2bkPLzvY8eS/TvreLLk
4S0P4w0PGWsyazN7AdZvrke+5hjAM0L7ofF3iD/Ed0I/6B/+OFmX3y3Z5ybr
84BAwz87ch7ej7FjGzMHmAvk4b0S5jFzG3+jl0t3D9bkOvvHahHmz8CM/SkW
lX9C/90rjoPMuvtByT42WX+Jf4yMvtHfR2WrR8U66BIr+Un996w4ZnKDsuX4
0yS+8OOJZXGd/Smic1TGvhaJr4zfxY9KzsMjVvCx9Y4djH/PQRnL0cN/I+v0
xyX7/WS9Jo/vUGIDX5B3Hh56rI+PVxyfGBk6T1Ycb3hB3vGHj8k4dnGmzv4m
8dv4v5JjGeO/MQ50NrT/CbCAKj8v7/jKxE5+rOK+4s8UP6Ofsh/NeP1j3e5V
sQ9T1m/iFu9eti9J4hcPyTj2cb7O/h3xM/l5yTJ0MoHOhfYRm5k+0Rf8obLu
flGy31HW3+MCDZ/1jDw8+kqf6St9pm/0kbppA74mib+8odp2cMX+R4k3/EzF
8Y2vyjs+MrGnGQP6jv/UOs79l+yvEv+XrMtflewflfWZ/FDx/uFZIe88PPRY
756qOH4zMnSOzziWc1H2Louch/dv7PjOjBNxrEthvPCXSGxrZOgQ75prTH+J
MY0f2G9LXo8viJxC47eV9Zk8OgSLWyLe0xXHMyYP78SMYxsndfanSR4evjaJ
d4zfze9LzsMrBroc2k8sZPpI3/BPzDr8Q8k+JVmPhwUaPusbeXiMNWPOXGJO
Md7MueEZx5qu1Nl/Jnl4+Ook/jR+O38qOZ8O/kD7VMxDRv+m1cyjT6y7P5fs
J5b197HE1x8eskK4vswN5shg1vWSrzvXG7+P+IRslLL/R2JfP6P/vhXHwMbf
568lx8LGX+hvJfuGJXbr8rz78WvQoz+su+jgk5b1l1jczEHGA/+3z1Uc75qy
2BiVcezrBnX2Z0ps7Gcrnrv4s8XvbJx4feB+ix/SP0qOlY0/Uspigzy8apCj
hz9T1v1DKvZZy/o/MrSPdrLe4rf1T9GHZLzekYdHrPBbVOZ5ld2i5jw8/Oj+
U/L6yXpE3Ng9yvbNSvxY/LP+XXIeXoNAbxT6R2xZxoC+4z/3hYrjha/IO973
ixXHJ1+Zd7xt+s4YkId3RBgP/AWzXp7MvUH2N6yzv1Xijo/N2Lcp8cfxc4rj
HPLwNgz0JkGf2OX0kb7hD5iy2Ni4zv5YudeUE/u85Z7zROK5UQ3j+5Ly02Xj
cKWb1Tmu+njKpBxfHT+/mcT7Gfz94t+V2OPI0CEeOWNA34l5Tr3EJd801E9Z
bFQkX5V3fcQbJw+vIX4eEvtZvTrynD0p47m6fs5KdmrGvmKJT04eHm29JnI5
yiNDh9jmXAPGG//C/UP78TnMfox1N5fYZzHr74RAw18QOQ+vqvIP5r1WFhP7
KWZ9nJhxLPZGqvfayHl4+MYlPjt+cguJ8/DwL8vYwkO2segjKvZvTDx11mdo
6qAuxp5r0DCMB7HWB9c7djr+lF+uOB48baONT0q3n3hb1tm/OHHYT8vY1y3x
2PF7myTOw5ucMQ3/usix25+v2QZl2Z+wJ2EvMitvP9DMH+YR6x/+UYktTuzu
Vin77a1PHMse/73EtZ+ScR7elkHeJLRvO3ypco9P2X9zK/bWFY8F/pgpi43G
dfa3yFrdv2Kfz6zH+HmuJr4Pcv97TbLWsvF03vHViVvfsWxfu8Svx06DxH4c
sbdNoJGhgy1sUvbpsB/YILEfaO63U7m2YIDq7H93WpCjx/r3esXx4l+W/uay
MV38DSVvVmf/vmslb8MY5x1vHhk6+PZ9MW+7GyX284v95oFGhk7bmvtI+/Bf
fSZjm3hNZn1b7wdX9Cd5+8OdkXHs+m3xDRI5D4/1gXj2rBXEuicPj3YS975F
aC+2qYO+0Cf6Sp9pO33YoeY+Qb+W91q8aWI/2Ky/ZwUaPuv1TPoKBqTO/ojf
UNl22OC3krIMHXwPv5F3uzdP7I+Y9rcKNDJ0dqx5zGnfm2E9bpTYRzbr7dmB
hs969qZ0d+L7Jr+FlGXokIc3S/ktxGtdZ/+9+DneUvQ7efs7RoYOeXj4Vz6y
Yh106St9pi/0if6dWbMOfeZ+exRrROL72i74atb/IPG2Fu+pxPk2dfZ3DO/c
jH0lf5C3f+HGifPwsIGt98N63rBs+/j/bpzyvOAavhL2Y61D+bahf6y1TRL7
BWfNJY8v8qbKf5R3Hh56rHdvy/auNcvQaSrZ7IznGnOOPLzt6+xPt33NY874
4k+/TZifO4T+deBaVNxW/JOz9h5dsQ9y1ttmiX2PN1P+03zIJ14nWe/eke5u
NcvQOUb0nmX7zv1cvAuk11z67ersPxe/utsmlqGzfaB3DO3dveY+0jf8n+PH
vEXidZT1a2ygvwzrL3l0tlV+nXhzlG8p3k519h/9LvuJmmXoIEMH39Zf5e3f
t1XiPLx2gd45tLdjzX2kb/g/Zz1ondh/Ouvt3EDDZ30gD6+lZN9I5z3Go+Y8
vHmSbSedXersr5o8PO7d3MO3Fz0/Y9/YP+XdjzaJfV/Tn04194m+fB/W37aJ
fa6z3l4UaPisx+ThtZbsB+m8z7eXmvPwqIs6d62zP3L8ae+QuG7awFrDmsP6
8Hje7UbeIbS/g/KXZuwrmoDFFyvfLqzBrMcTA/1rWH/Jo9NG+V/EW6D8juLt
Jnt3Sv8DtW+fmmXoIEMHX+a/5e3XfKfEeXj4Ux9cMQ8Za+3Oif3Ms77S3xk1
69BH1ufjKtZBdzOVHyJ6F9F/qMxxWm/PqlmHGCFPJ5bvUWf/2OgtytiX9l95
+9VunzgP75KMafj4AycPr13K/u1ZT3dN7GefNXlxoOGzHu6vuoeoDTtK9o90
OtV5jMnDY6yh4eN/nLW7Zc3XhmuE3+7dEl8Lrskegd4rtJ88vO1Tjr/B2jy0
Yr/4rL/4td898TrL+tdZtoeqPTtLlir4vQnvT8jD27vmOc7cxt//YWE/T0wM
3ocdL1mnsn2pZwqOFULMEJ5FiSOC3/09wxrMejc90PjdZ73tIvvHq/72ytfh
11f17yN5Ed/v4u0rulNiGTodw9gwVvjvX5qxHD38r5OHh+/1fOjPXon9pvM+
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
fdljST6O35/4cxLn4c0JY0dfxof+wTstjCfxnI5V/XMTx3EiJe7eaOmfUnA8
PuSs2ax/k1VuXmIZOm9mTMN/PXIe3smSTZDO6eJflDgPb1KgTw/tvyj0hf4R
P+pXfsuqb37iGFQ3VkyzbrMew39L+THYKnicGW/y8A5lrav3+sgajYxrMlb0
ZNFfiZ5acX49T+UXiHdGaP+C0Bf6dnrB8bGOk82FieNWEX8KmjWa9Rs+caiY
C8yJ8WE+TAzzl/hzvOPIhP1cp0DDZ385TekltImyKcezGgKeIHEcq0vCXKJv
/8XLQs4azPq2ja799IpjbU1IuRxxtE5RfnoYH2xMC/NxutJLE8vQeT8TaPHf
kvxMpZeJniH5qZI3lf1pFc97+jiU988113l54vha8MgTxwxb2KQsNmjfmdJd
Iv5M1qRgjzqo64XE8hnKv636z1Z6lXizmcspt2up6LNC+84K9CzJJ6acR+f/
Nd15tGRVfcXx+6q6u14V7753C5VBEU3EOAshoBLEKISgJhhMglHjvEAJOAC6
jLpUWgShmRoUJwIRoyLIKKKiuExiSAxGCAoKRESgRRkVBEWJSn6ft49/sKhT
t+rWrep6dc75/fbeX+8FPw2P63XzzMnmN7w149OXwpnyf5yud9Tjj6nxprr9
cddW57i+Hg9i9fp6/PlL4V4d0a7nqHZ9brvPZ41Xhe/1vXr8EcvhfuFrHTDP
vGx+cW6v4b14Tz6Hm9bk2r2HTyyFw/VOf+s1PrrO/cml3HbfLWsydv/3u1zn
p2q8oV3vhjY+0d/aKLc9xvvDH8Mr+/t55mjzGd6X8RlL4Zr5P47Zu+vx76/x
MdZwS7ntvh+vydj9N/i9rP+fWeOT6/hhoxzzGLdPbtfv+LHten9br3dgvd5Z
S2GSndnei/eGp4Zf5rh52/x2ZI336PNevCfPwzVbX+MP1fi2uv0Z3486xw/q
8Xd5v/Wcj9Sx94xynWfXfce36z27Xbv38tFpeGgH1eudsxTumvM4n3N7Dbe9
hnM5p8/Sv6Hvis8Un83zzdnm8xPq+Ll1/JQ6fvgot+8w59ftU6e57T6Pu7Ee
v7H+f95SjnnMee29eO3T2vW4b2N7f64TB865vcZFy/l+mqPN176nd9btI+r4
P9XxE+t5FyzltvvcvsuaoG6fPs1t93ncTfX8k+r/n13KMY95rHrvcq7Xa766
jT3GY09Rv+/D2jqjnnOaenwfFs+5Nf5Y3X5dH5bHRTX+pPpdH/bl12r8z+qB
fbL9L6nxp+v2G/pkA19W4yXeazWJPvmFa2v8BjWcPvmfD6nxm+zJ++SVPbzG
B9uD9sm3+Zz9RZ/skTvrfF+o22/v4+2+t8YXW6/08QY/UONLfNf6eCEX+Dfr
9mF9vFKLs2QdyjzkpVhlNvVhvNM+Y8BjmWOa02LiimMnYiiaOzBssawxrmk7
cKixcTGL9X4xcrF9MX71hjB/dxvCo93Yp578p0P4qSf1qTf9+RBe5gf67Df/
agiP8oN91qfYfxiAvuv4grI5ZHLI4pDXgY2HyYfFh5Enu1SGqUw5mTVYQ5hf
WF+YQ1hfmF/nrgs/DOsKz+y2PswrrCDMIOwgTCEcGsyhy9aFRyNvHxMHM0dG
PrYJxskt68IlwR7BHMEawTTBLsAwWJiEgSAfGgMDQ0NGN9YABsFoEubAcUPy
xu+v+x45Sb6vjP5/a5nCsqllVG87SQ65PEUZ2d9tGaKnDMlP/lU9ZhcZFkPy
m+UOyxuW1yeDWQayjD7ZpzJQ950kl/Wfh+S3ynmV7yp/TGaoDFOZZLIlZZ4e
MknG5FlD8u3kMspjlD0ig4THn6dc9pwMuuMnyZ27YEhenFw3eW6yyWSUyVCT
aSW7SabUWZNkOMnpkuEly0umlOwlGUwylGQ+yL6RqfMfk+TUYBXiEW7qwyn8
/pqsb83313XJjpAhcdMkmRLyRt4/Ty6bDDZecR5x3nAeb9kAMgp+M0lGAP8Y
jzcPPY8YLT5N/hsWo8/nneUJ3noxHlr+UpkSMhx4SHlveW55bXlyeUX5OZ++
HM8oLxNPE+8djx4fEA/SCxfjAeJN4T/ZYzm+FF4XnhdeHR4f3j8ewJ0X4wek
/afxp+3nC+BN41fbbTkeNdp2evrnLUfjTjtAQ3DDYnQF9DY0sjSGNDa0xDTF
xyxGc7zVPPrFh/Thcevf09DRsOnR0y7SsJ6xGA3jH8yjL3tYHz68/h+NDk2N
nh++0Kf6cBa269JP0NPXw9dD2H2efurWfXjje8zTL9VH1T9Vb9Tz0yNUY9xp
Hv3Fln146bTTNNQbFqNp0svR48Gm1gd5/jz9G32aLVp9Q09BT0ANQ+1RDVJN
0h7nhfPUd9X11PPUAtQEsJ3VkNQ21DjUNKyhXjxP/UrdSL3IXtOeU16tPai9
pD2kvaP9pb2QPZE9kr2Sdao1qLWnNaq1pzUtNqw1qLWGNYc1lrWW+e1xfdiO
GI/mPnMi9qk58B/7cB3v7sKyVNtW48YyVvN+6TiPcawe1p1atz9X97+8xmda
/7XfRyw2XDrjz/stqNvnt/nzW0thb2Fwnd6HQ4VHtcrqar/H2Iu4lubfJ/Rh
82H00cLRyH1tMZo4HEzn8Fx8r4+bN+q/cd3/BevP9nuLFYN7Y36+ainsKAwp
x/eq/7bi65rmu4a7gb/hO2d+x9jC8sD0+Hj7fceuwvI6o89vM97GaW2MuYVL
dWmb/zGDsAYwB87sw8DBvvnvacZ+m7EEZP2f1YcxImtd5jpexGf65KjLT5f9
vWGerG6Z3bLGj5nnN1te9dl9mBVYFd+2n+vDRJA9LIP43D4Z/bL5r5sm2/rY
eX7D5fme1yezXLatjFt54ef3yRHdvUt26nHzZHXK7JRdevw8v+nyRC/ok/Et
1/tG36k+Gc2yGmU2yh48YZ7fdPmAF/bJKJZN/ONpeCkb58k1lWd6UZ8cMXli
cuLw306c537jz/f5vZedJtfuMbz+8+T4yjaVH/HheXJy5ON8sc/vvawgOVFP
5M2fJydQPqB8nJPnyX2T9/alPrkv8l/kzsiz+eA89xt/uc98IEtFbtcf8rrP
k8MmK+0rfX7/ZUE8qs095iB7YXviZ9TjPzJPrpE8I+snmnnaLBoteTNf7eOz
f1OX23zk/OTu+5c+v++rfvY1Wc/JxODN5dF1XKaNLJuZrPE+8wfvC1+ssYwH
2Q7ztv67cSnePB49vvZ/7+PR4/9zm++N/819l/aZ73jPVr13/p6X4iXiKXL8
b3x/eH3r/P/Z5/f2nublMd7X83kHZ9Fj3LwUbwKPwn/10eXT5/Mm8OG5z+3j
63ou6zPX8ALwCRi/yHeD96itTzctRUtNU/3ffeYa2mK6Y+O/9fz6LXjKrGVp
9cm2kol1eR8dIT0h3SPfgPvcpq+8os9cQt9H52dM00/Lv1Nb/9JE02bRaF3Z
Z66idaKDMqYBpv3dta3PZQDJTpChIPuF15v3W2Y5LQuNOj01TTktyEfn0UbQ
SFzfp46inqKOhDtP86C3tUerN50+z+McxxbHG9fn0N/AHTd/qIWo+3ynj6aJ
lul5s/R2/3GeOUG/8+o+ml+9aj1rOTF6pHqj8mL0hk6bZw5UD6fHuKZPX0s/
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
+eUHts/zvC569v3avzfvJn+K+qn9By0fzfaO9X6/U88/0W/cOFpHtVF6ULpQ
YxpXmlcaSO9PL+hJ42iSaUXVcNVu6UTVXp2LHnuf9vnY3/Ij8CVYr+jPfcT+
dV28qPan/Ep8S7vU9Xy3ruf99ZgdxtHm0ejR5NHmGavF0rPRtdHq0OzQXNLw
0LLQu6j7qvfSvXzI5zuO/uWt7fOlhadHVP+1t6aloAmjxbR3pbekrXR+9V16
GdqKTy9HT+QzoadVKz65jz5OzZi2Tg1a7ZmO7tn1fq6Z5zFPH6c27HpoadSI
9Y71y/Yat37vcnrKx7c+svqvHuiNrdd73nL0Dz6Tb3bRLqgv0wPQBdABfKTG
e46jBzD/6Y/Ik5Urqxbus6XXVRNXj6aJ0GvRc+F7Uk+gFed/olWhWTms6VS8
Hs0EDQEtwT01Xqjv4zenYYz+zPpN/tA0jJ8j2/XQE6hx+3z1DnccR/NKq0C/
oO6u3u719C+fPY5GZu/2+8tbLfuENpJGkqaQtpB2kYbRZ027+H/1+M3q9b87
DZPPenlW4+9MwzBbw4str24aJtW6Gm8hP24aJtPaGj9sSG0U4+hX9fxpja+e
hnH4S5+nPMlpGIP313gypJaLCak3rEd8wzS12lGdb3N5fdMwwH5r/TGktosh
95sa9zW+dhrGm96zHvQ1rTY8qedvWeObp8lktx+a1/j6aRheerV6ts+eJUti
+zr+J0NqMzw4m9X4ETX+0TQMHL1qPetbWu13qY5vM6S2i0nDr/vtPr6lVf8u
r5C8vVk8aNMab13jH07DGLK+36rGm6ZhHj2hxrvU+JmzeOp24F2p8R6zeG7+
sMbPkRc3i8flybxA8vRm8XD9UY33qPGfzeL5MB/sWuNnzeI5e2qNnyXfbhZP
04P1+a3U+H+nYXp1K+FNfW8aBp3ft91rvOcsHpc/5jWo8d6zaPr93jxP3tgs
mvc9aMlr/KJZNJXqO5v8jdfn8jpc0ZVkLqud0UA+g5eixn8+i4b/6TXeS77a
LB6Hp/F+DKnN8UDoleuZ79tqP8+hpa/x38yigd2txnsPqQ3RUD+zxn9R47+c
RdOt964H/4JZaof7+7fwN1bXd2Dd93ZZbMup5Rw9S/azDOhLa3xsjd8lK82c
UOMTavyGGt9a4zNpmGr8phrfVuNzavz2Gr+5xnfU+KIaHzYLWx5jHpN+l7XR
BtAI7DVLrfEg36Xl1ALfPAsLHhMe4x3r/e99F+u+082Fs9Rnbq/xBTQ5Nd6z
3u96a8y6ffI49ZLDrYlr/LR6/j/U7bvqvq/U44+s+3aux+9Z9z13Fs8LbQCN
gHqTupPesh6zepW6FXY7hjvGN1a7bEoZpLJIZVRaf8tIlY0qUxXLG9Mbkxu7
W70Rgx1jHdMZGxojGjMaAxtLG1MbIxZLVv8HcxbTF3sYCx0THUMXS5d2gIbg
ilZbwqrGrFa7wc7GLsYwtnfEKtZfwpjF7NVzwsLFxMXIxcqlJaApwHdWG8KK
xozG4MXipRWgGcALVfvBIsUkxUjFStU/wuDDpNNT0j/CwMPUw9bDAsUExczE
/tSfwmDFoMSixM7E0MTIxM7EbsRwxITEjjR30euZz81hWLCYsBiqWLC0DzQQ
mNVqQ9h9GH5qK9irWImYiWo/2IVYg5iDmHTYeLQKNAuPabUUbDiMOEwLbDhs
Q4xDTEbsRiwpTCmMK6wr2ggaieVWKzJ/7+P7M4tmHqsOsw4jBisGKw0zDeMM
64w2gEbAftG+Uda1jGvZ1jKwZS3LbJbVLHNZ9qfMUFmhMkBlk8o4lXUqB81+
S0a3bG6Z31hnmGcYYlhlsphlLtuby2imFaAZsP+yD5PdKrPVXk+mq2xZmbKy
ZGXOyiqWUSybWIax7GQZyrKUT237YZmhskJljMr6lPEp21MGqOw4mXH2TjLl
ZLnJbJPVJtNN1qSMSXsZGZSyHGU8yhKV6ShLUYai7ESZirIDZQjKfpUpeLH9
z5Da6m5rk5UpM1N2pkxN7D4MP7UmLD5aC5oL+0H7QloJmgn7Mfsy2W0yUmSj
yH2TlSYzTUaarDRZZDLJZJbJLpPVJ6NPNp8cP/1RjDbMNuw2+1OZi7IWZTLS
CtAM8IdYaz6rjr2gHvPCWTwpssdkkMkkk00mC0MmhowM2RmygGQCyQiSFUQL
QRMhr8Jexn5HBoNMBtkMshpkNsiIkBUh20jGkcwj2Uf2azKdZDLJDJIFJRNK
ZpTsKNkkMkpklsgyofWg+ZB3Y68ri0cmj4wemTaygmQG2SvKCqIloSmRj2Xv
rN/FA83zbA0ha0TmiL2qrBLeYx5knmPeY9oNGg5+W3sXWhGaEf58a1FecZ5x
GQKyBHjded554Hnhra38JvgtsMayNvKb47fGGkn2gQwEewvZCLIZZDTIbJDd
IDtChoRMCdkSvLY8tzy4vLm85DzlPOa859YWmJZqx9YYvO487/aivPC0LTQu
8gLsvXideZ55oHmh+e9l6MiwkW0jG0hGkEwf2T7qCTJ1ZO7I3uFt43HjeeN9
473jwbPX4s3TX+L54AHhDeGt4LHgweDF0A/k+eQB5QXlJeQp5DHkNaSFoYnh
h7Q35cXkyeRx43XjbeFx4XnhheHNWfXoLMVbw7vFw8UDxQuln8hzxjPGO7aq
hZ/HI6enaG/wZyup9V/e9JbmAL/91rzW7n7z/dZbw1sbm3PMNdbItBTmVHMp
LYW9x7/Xde+7NnsQXlueWx5cXlxeYJ5gHmLedd5kHmV7aV5nWg1zqrmUjsPa
3RxhbrCG1wswx5pb9QTsvc0Bfvvtwa09L63XP3Rt1qC0GuZEcyEth72HOdbc
ag9iL4G5rtdiT2EvYc1grWBPoRdhzjfX60k8dQhDBTvlV22MoYSdhMW3/RCm
CpaKmr21uDnPXGdNbu+A+aqXYA/xqCGMxxd0YRA/eggz8C+7sIcdxxTUe7p9
mr2ROdbcao9ES2JNYC1AS0JrYs1grUCHsu0QZiNW423TjNXw9+7CJLYXMWea
K+1J7EXMweZeexJ7C7/pfsvtMVwfZiNW4x01fuwQxiC24N01/oMhzDmsOUxS
Y4w5tfV76vjvD2EQYg/eNY32hAblJ9NoU7YbwrzDvsLAkn0oA1GtTlairEaZ
jTL8ZPbRttC4vLALI/eRQxia2Jm3TqONoZG5pGmBvRbGHrae13zcECYoFijW
nzHGGLbYz9r703PRa8G6pXWkecRW+0K7XkxBLMGf1uN/bwiTcp8uPaU/8fde
9/3VLB5DWh5zlrmKlufxQ5h0WHR6QE8e0jPQK8ASfNIQ5hjW2C/q+TsMYRhh
F/3fNPoZTCYspl9Po6Vxn9u0Np6/cSUsUExQ+h0MOuy5n0+j5XGf27Q+tDo0
O6/qwiik7aHxwb6ilX7KEEaY3s0vpxlj0mHRfaBdP0YXNtf9dXzHIYyl13Rh
Cj59COMG2+bTbYwRgw0zmkXbQ+MznkULtNMQJtF+XRh4xphAehEP1vl3HsLk
weLpZsmmlFEps1J25ROGMOiw57Bo/2gIMwkr6bfTfF9OWAk7/JB2XA1P7Q6D
0PkxnvbvwvpzbRg12DSu0d76pjq+27rssWmnaKiwd2jJvT6GHnbeffafQ5hE
r+3SY/L5YCJhIf1mGlYQZhCeUb8Yvajex4YuGbT2/jJu1A7VAE6ZZw43d9OC
0LaY88316gb2+uY8c509v723OdVcag9u7y9zQ21SDcBe32+y32J7fntJv9l+
q+0p7e38pvstt8ezt765rvGl67LHpnUxx13QtDD24jz8aqv25Pb65kxzpT2/
vb450Nxnz28vbY41t9pTv2SI54zXTA2Q9sUcZu6ii7GWM+eZ61bXdEM8zmqJ
/uZoPczJ5mJaG3sHNSu1KnsIe39zqLlTDcDeXw1L7UoNYN8hHkbexRfPop95
b41/Ze6v8YuG1CB/5+U35jHkLXyJPcoQj+F/dvHUG/MAqn2+tI6/eIjnj9eP
x92YB4/37u9m0QKZw83dtCq0PDQ9vHC8BbRJNEqXdfGO09vwLPEq7T+LVolm
6RWzaJVePsQDxfv0qlmO8ZjxlnnMy4Z4uHi3XtnGPGa8ZTzUrxjiqbq8i2fY
mOdJbfPVs2h5aHp4e3gP7B3VJNUi7SFfOcRzxGv0mjbmkbqiiwf3VUM8Sv/T
pYfx6iGeoCu7eF5dv5qrWuuB7TgPD+/OfnW+lw7x6PHmvXwW7ZHPxGdBe7Tf
kPrRD+v5d6/J+GjzYf0eHzBL/eY99fzN6/g+dd9rh9Rzbq3xfWsyXr8SbdRB
s9QyDvf71aWmoVZljWZtpmZ1QI1vqeffUcfvX5N6zBEr0d6+ZBytkpqWWhbt
1YFD6jE/qeMPrEl9xvftoTV+0TjHvd4v6tghs2i5fCd9F2m/DmjXf6+1Vvv+
nrOSbAsZF+pLNFG0UC+r871xSL3pvi7aYPWm9/l9q+Er6/ihbTyqY++q8x08
pB51fxfNMC2PmpFaEe0WrZXzP7gmXhH1qqNrvHU9fv8631uG1K9+U+NpPf+t
7fhi3X7vLHokNSq1KZ4NtaMNdfzhXWpInn/USrRh62d5/p31+I7er9Wjjqnj
j6i7DmrXr571gF5jHX/bkHrVmD61jZ1/s7r9vlavO7bG2/g+1vPfPaQ+t7QQ
zfM72vmXaSFaPY+mi5YL0+2dQ+p72G4PW5ux883r9nH1+MP8Pfm9HsWzcqTv
f40/VePlSWp559d4aZKaHm2Wz8RnwcdCK+YavDat2Pp2vjWT1Oje4++jxp+o
862bZKxGqDb41Vlqd44vTlLDo31S01PLo42iVdHT0suilVBb0UPQO1BjUVv7
Yj3/yZPU2N7Xrn+YpKa4ocZfXo4W6xs1PmqIhox2bPNJtGTGD51Eq+W4GqDa
39dnqQVeWMe3mqQmeGyNP2e+quc/fBJtoZqfWh/t4Rvb39Ov7XVmqd15/DaT
1PA8X41Pbe/yGh9f44vq+FmjeIBOaONHT1ID3NBe/9N1fIu6b2ONP28+rPHv
t7EapNrjVbPUHh3fbpIa5AeHaLZotZ46iV5LTVItksdI7fILdfzxk9QwP9A+
z3Pq8U+cZKzmqNZ43SzaL+fbYRItmfOrIaodXj/L90dNRi3m0llqjV+uxz9j
kpojrZhr8Np8Th/2XVqONu0Hs9Qiv1SP32mSmuRH2/PPr+t52iTjr1lf1+Nv
nuX5Hn9eHd9xkvr18TXe1n5inN65HjouiN45Fpr6GlYLRpraK80LrYsarNrp
z5ej3VdDVavVw9G7UbNVC9Xz0etRE1Ur1fPR61Ezpb3SU9JLov1Su9Rz0mtS
w1Qb/fVytPxqpGqhej56PWqiaqV6Pno9aqZqjXoYehdqjrRuejx6O7Ruaqd6
GnoZaqhql3pKeklqmFj01v8Y6ljqarfjlXgD1HDVRvW09LLUSNVG9bz0utRI
1bL0iPSG1LTUSvWc9JrUTNVG9Xz0etRIabn0fPR6aL2+OGT/s/9CNGzYptbf
mKnYqbRb9n+3jeMNu3jI/vCAevyV44ztR++s27tuFm0jjSNuPS2k2/anGPbP
au/XfvD19fyrx6lN6+np5alRXzJk/8Wb8N1xxvZrvAhY9ljY9iPrF8LIxqbH
sOdNWGXUD9lfvnUhDHMsdPu3QxfCRMcft/96y0I0V47bP2K+P7893370gRrv
s1m0YDRhf71ZtF/Y1PZzvGsY1dbS1tQ8TfLqsKbtB7HfMcM9137x1+Ocw3H7
N8xxTGrns9/AuMa6ptWzf8RD573EZrUfePdCGK3er/3wwTW+dpzjGK68Fpjb
WNP2f4cvRHNKS2Z/iF9Ne4+FbL+FNY8Jbmw/homMjUxbR2N3QNPeua1egbns
PrXy2Uq8JmrmWLDqGxsWwoTFysXs5dU4pP17YZpjnGOYYxXbL/J2vLGN7Rd5
Qe5tz7dfxaf/efs+2q9uXAhz1+upl2AmY9KqpeuB6n2qqWPF2h/h1dPM0VbY
n+HR8hpi1dofYuJi4GKf2n/xrmCo0rLRtOHE0rJht9ov4q1jwjpmf4ch+672
fPtTTFYMVexS+1P8cUxUWis9ALV/WixaOpo6vMBVbuCQ/SH2Nkap52Oq8rJg
oDqOYYpRilWKfamfgD2Ggen67A8xZde34xiZmJ/Yn/oXmJVYYNhPWJz6GdhP
mJx+bzEpMSexJ69pY2wuPRCsSwxM7C7My2vb+TA1T279EAxJLC1MLVpCmsJT
mvYQm1A/DhsJo5A2To9Ob442Dk9R/wLbiYfF9WGG0qqd1PoZPi/aQ8wpLEj9
DWwq3hljjEgMyNNaPwQTcX0XJtT17fowLF3T99rjeW2wsvTeaIhph/Xg9Ecw
xo7pGmtlCAPv8C5MpR+1MRYetiDWof4j9hLmod4Nxt97u/RwHMdEpP07o/Vv
MPeO6MIiwgLUz8EiwgS8vR3H4MPi831Vf/jAQhjL+kGYeUd2YQbd2l4PQxBL
kHbROTyXVlA/ioaQdnC3dv0YidhMGIjYe/pV2D83tbHzY+5d2PpbGHdHdWHw
YMHpH2HPYMLRJjo/7g/vLO2lnpNeE60mVp3+E5YOhp0xph1mHXadXg9m2rFd
ej7OjzlH24kld3P798S0/ETrR2GGHd+FoYLVp/+GFcTjdF/798OAw4LTb8I4
O64LEwabTf8JKwaj7Rft9THZsNk8H1MOqwZjTj8J34cHF+OGF8P6/aFr41X/
ZTs/ppk1jH4T5hK2hWxc2kc9Jr0l2sc1rR8lKxcjSv8NEwmbA5vCcQwpjCis
KFpDmkP8Md5nfDL9NuwUHiz9N4ywjV0YKlhYmFlYHZhY+nEYWSd1YXb8tj0e
QwxLzFj/C/sEY+yB9vlisGGxee8+A700Wh7ndz6MJawlvbdrVsIv0oPDGtIj
0xvD2lls7w/j6fo21l/EgsCAwjrQz8OC4BHDQ7ilxpuP40HVy/rhSngOelr6
kzShtKDYEuva541phW1FG+o+t2lD9QKvXQnrR09ws3a9a8bxVGM5YDrgSWBJ
fL2dH++Jd1m/EXMMmwKjom/nWzsOU2mh/Xthn+hRMvrof2K3YKQZY6bRumKl
0c7S0OL10JZi/6hBqj1i/ejt3bAS9oYeH9bLD2q8NA7zBbvpf2s8GYdn9JB2
PlpcDKHN23G8GjVvj1cTVwvHOqL91FPUS6Q93bq93mbjeMbVQq9fCc9HTRQL
CDOHlvbuNnZ8Og4jaJt2fdgxepTYIptqPIzDGKFFpUnFK6FVdRyDhPYWRwS7
RU9SL/LB9n71QPU+sWn0Wq9bCQ9Kz5UeWU1fLZ9HnjbZfW7zzTvfTfX45XH8
e7S9enJ6caucjhrfuBK+jB4rbSyNLP88H/1j2/dtPg7jY7v2fvBN9FCxZfRU
9VJHbez90driyzy6vT5ejB6wc+sJ6wV7Db3Vp6wkb1qPVW+Shop2So9Sb5VG
ijZKj5XWnOacX59vX2/xRythe+gxYjncXuMtx+Ef7NjGeA2PaMcxEWhnVzkQ
8/Qw9S6X29j5HjJOpvjj298fXomeJu07DfzVTbuMtaHnrdeNbYGtcWsdf9g4
fAq90R+vhO+hR+ra9aj1pr0HLIg76vhW4/Af6HP1dPVyZQ7o5f5kJbwAPV1Z
/j+t8TbjZPrTCuuh653THuud37kSPoMeOlaCnrBeMC4CbZoer94ujRotmh60
3jNN2s7t+VuPk8GwfXu/tP74Gzu168We2Lad/64aP3wcJoPr06PWm8YaeGa7
XnwBPWraY+/Re1tlJczTE9cLxwJ4RjvfKj+kfT40AbQA2Bd6899fCc9Kj97n
rSevF49l4nw0z7TOmAN67z9bSV6+HrxsfRn78vZl6+uN0/DR7umR663S7NHq
6bHSEtPc0drRLj+nne9R42T06+XfsxJegJ4+toDMfVpTXAFaAJpBWkGaAL1z
mkZaRj102nCaQFpAWnBaABpF2kSaAL13GkTaQz14veCdVuJ91ROmzaDJoMWg
0aAl1TPTK6MppdWl+aH1oeXVK6fxo+3TM6dNphmkFaR91tvedSXeXT1uvXca
QdpAPfir2ueL1UDrrNdOI0gbqOf+1Pb9x4uhwdB7pxmkFdSD1/unWaRVpAHQ
e6cZpBXUg9eb330l3lE9er14GkLawYPb5+vz3nYchoPePE0hLaEePW0ADR3t
HI0ALSnNA60DTemW7fszG4enRmtAI0kbeXjTW+snyAiUFUh77T63aa9l9+kv
yNaV4ScLTT9AXqmMNHow9XX5cbIyZCPqX8hElI1orL8hq3g1+3ie/oyMQFmB
suj0E+TByqSjLdNPkNVKY+a4foJMOtl0svz0L3irT25j/Q1e5a+269NvkNEm
q03Wnvq+PFyZe7TKNMty02it6XXVe/gNVzOj5uknyDSTbWas/yBbVAaarDH9
Ct5jmWOyvGR68SbL2nJc/0HmmOwxr6VfIaPNa3q8/oNsThlgsrj0X2RjyuSi
P1b/4TfkO6T3td/m7+PzO6TNH/wKfAueL9NLhpcsL/1XmgJaAj5Afkj1Mn5O
vk6fhwxC3nPZg4e2vy9+AL6AN7e/B/puOm96TPXyi9fFm0xfRz/Dz8jXSP+o
fiufQ04H/R99CH8onyg9o/qh/A05HPR99Az8dnx39Hb2l9stxstFj2S9wUAu
d8B6lN4Mq1A2AX2Y9TnWMy8VvZz9DNb7qrdrnvUvVixvEz2U9YY8ArkE9JP0
G/yzfLTvbfOjfIEtm95U/+XUdfGSH9F+3+QJyBWgD9Mv5F/gY6BnoR+X5yQj
hH6EPlxek8yPVbbISvwpfCpvaX/v/DV8NvQ7+p38Gtu2frqevV69DAx6DXp2
eU4yQOgJaAD0/vlA6a/0Y/lP+FDoG2gmaCVkeNAz0BjQFvCt0k+ol/GT8pXq
56sf8WPyZdIb0JPLg5IhQh+gnsMvyjeqX60nrRfN92h/Yk9iL8ITpZ9LLy3P
RoaB2hg9u7wfNTL9J/rie7pkCugH6c/wq/N46wfpGekV8eDr76uH8G/ycepv
0lfL+5F5oF9Lzy3P5/daf1NPTy9PBoP+oh6h3iCfk/6Zfpw/O778T7S/3291
8Tnpl+oh6x3zkeif0GPLs+G5V9+lX+VX5ltWT6Vf5J/lkVUvVVNVS+V51b+g
f5RfxxOvH6GnoJcg80C9nl5Yfh3PNn2l/d4JXVid8m/1k2XR8/Do7+j38Kfz
qX+8/T1/o4sPRn9Gz0iviEddPV//gD+eB1x9lj7owIV40NUb1URXa6FLqY/T
6/JL8yirH6opqiXypOr30DPzT/Mo2w/reel1ySgw39Ao0ibe2+qn9DxvW4in
lvdG/1t+r+wl9SL6V3koPKjqZeo//JA8iuplakRqQzyo9qP2cPZu9uTqSeor
/Id8iOp39B4fXIgnVT2EflZeCk+neoWagVoBT6X+A32rPBQePvt1+7UTu/jw
7AftUe1NeRDtL+ll5Z3wIKp3qFfQW9Bd2I/Yr/Av8jHa79Ej4d/wTNp/2XPZ
a/HgWW/Rs/Fb8V3ZL9Fnyvvj4bN/sSe2F+ZRtB+wvuYH5Au0PqfPlAfIo2q9
af3Mn8fzZn9jv8N/yAOovkuPc9RCPNTW09bA1r48eOqlaqhqp//S1kv0ivxG
fEfWV/w6/FInt39P31HfzW+29QO9AjYAD5f1Hn0l/x8foPUUPae8Qh498zE9
gKxxHqL/B/90eag=
         "]]}]}, {}, {}, {}, {}}, {
     {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1:eJwl1F9oTmEcwPFnbDab2Yq4IOxCKJRyQeECU4aV/7UlttW0YWtbzBqtNWsk
TPmTolwghQt/ply4sbngwvTONjbMJlvaRiZZrcbntHp7n/P9vOd33t7nnC0j
v3RHSVwIIcVb1uQQouNf8SF8s27Tp6eHkO54TkIIaT6sZPP1Kr1UZ6aFcIkt
Z7tZs/M384dsLStnLayQvWFb2XkzF3gdG2S57AK7z26yJN9fzF7p53qhvu0a
VayfdbH17A47zSZPCeEvy3eN/fwqW8BmTgqhgJ2IzmVrWa+ZFfwaa2I5rI9l
s6eshd03U8kPsTbWxo7pYh3Tb6aF8I5VsSOsnbXral2q16eG0Mk62ElWxj7o
Tl2jh8xXsG72ntWyo/qT/qAPmK9jlayHdbF6XaV7dav5btbAqtlX9lGf0Sf1
BvPf2Cd2ltWwAf1Zn9PD5mvZd9YT7T2r04P6i84zf5HVs2HWyxr1KT2kn9iv
GKtgB1mN/WrlzWwPy2Jl7FF0LlvNvphZxi9H95LNZbHo2WLH2RV2z8w/9/e3
e5nLGtgN1sc62Dp2nL3Uz3SGvuUaRewuu87io2uxnOi3sxqW5xoDnrMtrITl
s53sNVvDtrMXZjL5A7aMrWSLdaOeF+2b82cnTPydVDAZZulkXa6b7KlLhBks
kZUy2xjSdbxeIg4zp4VUFseKdIpO1jEfjDsuZMnWRDZmLdBTrZvMx7PR6Plg
SdY4/ce6Tz82n+h43O8fiZ5rZovDmP5pXWR+LzMSRtmQdZd2GP54e2v+e7QX
zCuMsH5rtnCLwkbzP1hfmPg/8R9Y345V
       "]]}, {}, {}, 
     {GrayLevel[0], Opacity[0.3], 
      LineBox[{858, 3483, 1705, 2679, 4206, 1280, 3488, 1761, 2721, 1317, 
       3493, 1817, 4234, 2763, 1346, 3498, 4489, 1873, 2805, 1375, 3503, 4492,
        1929, 2847, 1404, 4496, 3508, 1985, 2889, 1433, 4501, 3513, 2041, 
       2931, 1462, 3518, 2097, 2973, 4318, 1491, 3523, 2153, 3015, 4346, 1520,
        3528, 2209, 4374, 3057, 1549, 3533, 2265, 4402, 3099, 1578, 3538, 
       4505, 2321, 3141, 1607, 3543, 4508, 2377, 3183, 1636, 4512, 3548, 2433,
        3225, 1665}], 
      LineBox[{3251, 3484, 3311, 3557, 4518, 3397, 3489, 3315, 3569, 3400, 
       3494, 3319, 4471, 3581, 3402, 3499, 4490, 3323, 3593, 3404, 3504, 4493,
        3327, 3605, 3406, 4497, 3509, 3331, 3617, 3408, 4502, 3514, 3335, 
       3629, 3410, 3519, 3339, 3641, 4542, 3412, 3524, 3343, 3653, 4548, 3414,
        3529, 3347, 4481, 3665, 3416, 3534, 3351, 4483, 3677, 3418, 3539, 
       4506, 3355, 3689, 3420, 3544, 4509, 3359, 3701, 3422, 4513, 3549, 3363,
        3713, 3424}], 
      LineBox[{8, 862, 246, 1282, 3974, 23, 898, 282, 1318, 38, 927, 311, 
       3771, 1347, 53, 956, 3916, 340, 1376, 68, 985, 3930, 369, 1405, 83, 
       3727, 1014, 398, 1434, 98, 3741, 1043, 427, 1463, 113, 1072, 456, 1492,
        3990, 128, 1101, 485, 1521, 4004, 143, 1130, 514, 3787, 1550, 158, 
       1159, 543, 3801, 1579, 173, 1188, 3946, 572, 1608, 188, 1217, 3960, 
       601, 1637, 203, 3757, 1246, 630, 1666, 218}], 
      LineBox[{879, 2478, 1733, 2700, 4220, 1301, 2492, 1789, 2742, 1331, 
       2506, 1845, 4248, 2784, 1360, 2520, 4109, 1901, 2826, 1389, 2534, 4123,
        1957, 2868, 1418, 4137, 2548, 2013, 2910, 1447, 4151, 2562, 2069, 
       2952, 1476, 2576, 2125, 2994, 4332, 1505, 2590, 2181, 3036, 4360, 1534,
        2604, 2237, 4388, 3078, 1563, 2618, 2293, 4416, 3120, 1592, 2632, 
       4165, 2349, 3162, 1621, 2646, 4179, 2405, 3204, 1650, 4193, 2660, 2461,
        3246, 1679}], 
      LineBox[{3253, 3486, 3313, 3563, 4521, 3399, 3491, 3317, 3575, 3401, 
       3496, 3321, 4472, 3587, 3403, 3501, 4491, 3325, 3599, 3405, 3506, 4494,
        3329, 3611, 3407, 4499, 3511, 3333, 3623, 3409, 4504, 3516, 3337, 
       3635, 3411, 3521, 3341, 3647, 4545, 3413, 3526, 3345, 3659, 4551, 3415,
        3531, 3349, 4482, 3671, 3417, 3536, 3353, 4484, 3683, 3419, 3541, 
       4507, 3357, 3695, 3421, 3546, 4510, 3361, 3707, 3423, 4515, 3551, 3365,
        3719, 3425}], 
      LineBox[{3278, 3709, 3362, 3708, 4568, 3276, 3697, 3358, 4487, 3696, 
       3274, 3685, 3354, 4485, 3684, 3272, 3673, 4558, 3350, 3672, 3270, 3661,
        4552, 3346, 3660, 3268, 4546, 3649, 3342, 3648, 3266, 4540, 3637, 
       3338, 3636, 3264, 3625, 3334, 3624, 4536, 3262, 3613, 3330, 3612, 4532,
        3260, 3601, 3326, 4475, 3600, 3258, 3589, 3322, 4473, 3588, 3256, 
       3577, 4522, 3318, 3576, 3254, 3565, 3314, 3564, 3250, 4516, 3553, 3310,
        3552, 3396}], 
      LineBox[{1237, 3212, 2414, 3211, 4448, 1208, 3170, 2358, 4434, 3169, 
       1179, 3128, 2302, 4420, 3127, 1150, 3086, 4393, 2246, 3085, 1121, 3044,
        4365, 2190, 3043, 1092, 4337, 3002, 2134, 3001, 1063, 4309, 2960, 
       2078, 2959, 1034, 2918, 2022, 2917, 4294, 1005, 2876, 1966, 2875, 4280,
        976, 2834, 1910, 4266, 2833, 947, 2792, 1854, 4252, 2791, 918, 2750, 
       4225, 1798, 2749, 889, 2708, 1742, 2707, 848, 4197, 2666, 1686, 2665, 
       1266}], LineBox[{3279, 3715, 3364, 3714, 4570, 3277, 3703, 3360, 4488, 
       3702, 3275, 3691, 3356, 4486, 3690, 3273, 3679, 4561, 3352, 3678, 3271,
        3667, 4555, 3348, 3666, 3269, 4549, 3655, 3344, 3654, 3267, 4543, 
       3643, 3340, 3642, 3265, 3631, 3336, 3630, 4538, 3263, 3619, 3332, 3618,
        4534, 3261, 3607, 3328, 4476, 3606, 3259, 3595, 3324, 4474, 3594, 
       3257, 3583, 4525, 3320, 3582, 3255, 3571, 3316, 3570, 3252, 4519, 3559,
        3312, 3558, 3398}], 
      LineBox[{1251, 3233, 2442, 3232, 4455, 1222, 3191, 2386, 4441, 3190, 
       1193, 3149, 2330, 4427, 3148, 1164, 3107, 4407, 2274, 3106, 1135, 3065,
        4379, 2218, 3064, 1106, 4351, 3023, 2162, 3022, 1077, 4323, 2981, 
       2106, 2980, 1048, 2939, 2050, 2938, 4301, 1019, 2897, 1994, 2896, 4287,
        990, 2855, 1938, 4273, 2854, 961, 2813, 1882, 4259, 2812, 932, 2771, 
       4239, 1826, 2770, 903, 2729, 1770, 2728, 869, 4211, 2687, 1714, 2686, 
       1287}], LineBox[{3280, 3554, 3426, 3555, 4469, 3366, 3566, 3430, 3567, 
       3370, 3578, 3434, 4523, 3579, 3372, 3590, 4528, 3438, 3591, 3374, 3602,
        4530, 3442, 3603, 3376, 4533, 3614, 3446, 3615, 3378, 4537, 3626, 
       3450, 3627, 3380, 3638, 3454, 3639, 4477, 3382, 3650, 3458, 3651, 4479,
        3384, 3662, 3462, 4553, 3663, 3386, 3674, 3466, 4559, 3675, 3388, 
       3686, 4564, 3470, 3687, 3390, 3698, 4566, 3474, 3699, 3392, 4569, 3710,
        3478, 3711, 3394}], 
      LineBox[{236, 1695, 649, 1696, 3814, 238, 1751, 663, 1752, 277, 1807, 
       677, 4016, 1808, 306, 1863, 3828, 691, 1864, 335, 1919, 3842, 705, 
       1920, 364, 4030, 1975, 719, 1976, 393, 4044, 2031, 733, 2032, 422, 
       2087, 747, 2088, 3856, 451, 2143, 761, 2144, 3870, 480, 2199, 775, 
       4058, 2200, 509, 2255, 789, 4072, 2256, 538, 2311, 3884, 803, 2312, 
       567, 2367, 3898, 817, 2368, 596, 4086, 2423, 831, 2424, 625}], 
      LineBox[{3282, 3560, 3428, 3561, 4470, 3368, 3572, 3432, 3573, 3371, 
       3584, 3436, 4526, 3585, 3373, 3596, 4529, 3440, 3597, 3375, 3608, 4531,
        3444, 3609, 3377, 4535, 3620, 3448, 3621, 3379, 4539, 3632, 3452, 
       3633, 3381, 3644, 3456, 3645, 4478, 3383, 3656, 3460, 3657, 4480, 3385,
        3668, 3464, 4556, 3669, 3387, 3680, 3468, 4562, 3681, 3389, 3692, 
       4565, 3472, 3693, 3391, 3704, 4567, 3476, 3705, 3393, 4571, 3716, 3480,
        3717, 3395}], 
      LineBox[{257, 1723, 656, 1724, 3821, 259, 1779, 670, 1780, 291, 1835, 
       684, 4023, 1836, 320, 1891, 3835, 698, 1892, 349, 1947, 3849, 712, 
       1948, 378, 4037, 2003, 726, 2004, 407, 4051, 2059, 740, 2060, 436, 
       2115, 754, 2116, 3863, 465, 2171, 768, 2172, 3877, 494, 2227, 782, 
       4065, 2228, 523, 2283, 796, 4079, 2284, 552, 2339, 3891, 810, 2340, 
       581, 2395, 3905, 824, 2396, 610, 4093, 2451, 838, 2452, 639}], 
      LineBox[{3308, 3712, 3479, 3547, 4511, 3306, 3700, 3475, 4467, 3542, 
       3304, 3688, 3471, 4465, 3537, 3302, 3676, 4560, 3467, 3532, 3300, 3664,
        4554, 3463, 3527, 3298, 4547, 3652, 3459, 3522, 3296, 4541, 3640, 
       3455, 3517, 3294, 3628, 3451, 3512, 4500, 3292, 3616, 3447, 3507, 4495,
        3290, 3604, 3443, 4463, 3502, 3288, 3592, 3439, 4461, 3497, 3286, 
       3580, 4524, 3435, 3492, 3284, 3568, 3431, 3487, 3281, 4517, 3556, 3427,
        3482, 3367}], 
      LineBox[{3309, 3718, 3481, 3550, 4514, 3307, 3706, 3477, 4468, 3545, 
       3305, 3694, 3473, 4466, 3540, 3303, 3682, 4563, 3469, 3535, 3301, 3670,
        4557, 3465, 3530, 3299, 4550, 3658, 3461, 3525, 3297, 4544, 3646, 
       3457, 3520, 3295, 3634, 3453, 3515, 4503, 3293, 3622, 3449, 3510, 4498,
        3291, 3610, 3445, 4464, 3505, 3289, 3598, 3441, 4462, 3500, 3287, 
       3586, 4527, 3437, 3495, 3285, 3574, 3433, 3490, 3283, 4520, 3562, 3429,
        3485, 3369}]}, 
     {GrayLevel[0], Opacity[0.3], 
      LineBox[{3720, 4196, 3811, 4195, 4516, 3968, 4198, 3812, 4197, 3969, 
       4200, 3813, 4469, 4199, 3970, 4202, 3814, 4201, 3971, 4204, 4517, 3815,
        4203, 3972, 4206, 3816, 4205, 3973, 4518, 4208, 3817, 4207, 3974, 
       4210, 3818, 4209, 4519, 3975, 4212, 3819, 4211, 3976, 4214, 3820, 4470,
        4213, 3977, 4216, 3821, 4215, 3978, 4218, 4520, 3822, 4217, 3979, 
       4220, 3823, 4219, 3980, 4521, 4222, 3824, 4221, 3981}], 
      LineBox[{887, 2706, 1740, 2705, 3565, 1305, 2709, 1744, 2708, 1308, 
       2712, 1748, 3567, 2711, 1310, 2715, 1752, 2714, 1312, 2718, 3568, 1756,
        2717, 1314, 2721, 1760, 2720, 1316, 3569, 2724, 1764, 2723, 1318, 
       2727, 1768, 2726, 3571, 1320, 2730, 1772, 2729, 1322, 2733, 1776, 3573,
        2732, 1324, 2736, 1780, 2735, 1326, 2739, 3574, 1784, 2738, 1328, 
       2742, 1788, 2741, 1330, 3575, 2745, 1792, 2744, 1332}], 
      LineBox[{3734, 4292, 4040, 4138, 4499, 3733, 4291, 4039, 4137, 3732, 
       4290, 4038, 4498, 4136, 3731, 4289, 4037, 4135, 3730, 4288, 4535, 4036,
        4134, 3729, 4287, 4035, 4133, 3728, 4534, 4286, 4034, 4132, 3727, 
       4285, 4033, 4131, 4497, 3726, 4284, 4032, 4130, 4496, 3725, 4283, 4031,
        4495, 4129, 3724, 4282, 4030, 4128, 3723, 4281, 4533, 4029, 4127, 
       3722, 4280, 4028, 4126, 3721, 4532, 4279, 4027, 4125, 3982}], 
      LineBox[{106, 1451, 415, 1031, 3264, 107, 1454, 418, 1034, 108, 1456, 
       420, 3380, 1036, 109, 1458, 422, 1038, 110, 1460, 3294, 424, 1040, 111,
        1462, 426, 1042, 112, 3410, 1464, 428, 1044, 113, 1466, 430, 1046, 
       3265, 114, 1468, 432, 1048, 115, 1470, 434, 3381, 1050, 116, 1472, 436,
        1052, 117, 1474, 3295, 438, 1054, 118, 1476, 440, 1056, 119, 3411, 
       1478, 442, 1058, 120}], 
      LineBox[{3748, 4306, 4054, 4152, 4504, 3747, 4305, 4053, 4151, 3746, 
       4304, 4052, 4503, 4150, 3745, 4303, 4051, 4149, 3744, 4302, 4539, 4050,
        4148, 3743, 4301, 4049, 4147, 3742, 4538, 4300, 4048, 4146, 3741, 
       4299, 4047, 4145, 4502, 3740, 4298, 4046, 4144, 4501, 3739, 4297, 4045,
        4500, 4143, 3738, 4296, 4044, 4142, 3737, 4295, 4537, 4043, 4141, 
       3736, 4294, 4042, 4140, 3735, 4536, 4293, 4041, 4139, 3983}], 
      LineBox[{3749, 4308, 3853, 4307, 4540, 3984, 4310, 3854, 4309, 3985, 
       4312, 3855, 4477, 4311, 3986, 4314, 3856, 4313, 3987, 4316, 4541, 3857,
        4315, 3988, 4318, 3858, 4317, 3989, 4542, 4320, 3859, 4319, 3990, 
       4322, 3860, 4321, 4543, 3991, 4324, 3861, 4323, 3992, 4326, 3862, 4478,
        4325, 3993, 4328, 3863, 4327, 3994, 4330, 4544, 3864, 4329, 3995, 
       4332, 3865, 4331, 3996, 4545, 4334, 3866, 4333, 3997}], 
      LineBox[{3750, 4336, 3867, 4335, 4546, 3998, 4338, 3868, 4337, 3999, 
       4340, 3869, 4479, 4339, 4000, 4342, 3870, 4341, 4001, 4344, 4547, 3871,
        4343, 4002, 4346, 3872, 4345, 4003, 4548, 4348, 3873, 4347, 4004, 
       4350, 3874, 4349, 4549, 4005, 4352, 3875, 4351, 4006, 4354, 3876, 4480,
        4353, 4007, 4356, 3877, 4355, 4008, 4358, 4550, 3878, 4357, 4009, 
       4360, 3879, 4359, 4010, 4551, 4362, 3880, 4361, 4011}], 
      LineBox[{3764, 4460, 4096, 4194, 4515, 3763, 4459, 4095, 4193, 3762, 
       4458, 4094, 4514, 4192, 3761, 4457, 4093, 4191, 3760, 4456, 4571, 4092,
        4190, 3759, 4455, 4091, 4189, 3758, 4570, 4454, 4090, 4188, 3757, 
       4453, 4089, 4187, 4513, 3756, 4452, 4088, 4186, 4512, 3755, 4451, 4087,
        4511, 4185, 3754, 4450, 4086, 4184, 3753, 4449, 4569, 4085, 4183, 
       3752, 4448, 4084, 4182, 3751, 4568, 4447, 4083, 4181, 4012}], 
      LineBox[{3778, 4249, 4026, 4250, 4472, 3777, 4247, 4025, 4248, 3776, 
       4245, 4024, 4527, 4246, 3775, 4243, 4023, 4244, 3774, 4241, 4526, 4022,
        4242, 3773, 4239, 4021, 4240, 3772, 4525, 4237, 4020, 4238, 3771, 
       4235, 4019, 4236, 4471, 3770, 4233, 4018, 4234, 3769, 4231, 4017, 4524,
        4232, 3768, 4229, 4016, 4230, 3767, 4227, 4523, 4015, 4228, 3766, 
       4225, 4014, 4226, 3765, 4522, 4223, 4013, 4224, 3909}], 
      LineBox[{3779, 4097, 3825, 4251, 4473, 3910, 4098, 3826, 4252, 3911, 
       4099, 3827, 4528, 4253, 3912, 4100, 3828, 4254, 3913, 4101, 4461, 3829,
        4255, 3914, 4489, 4102, 3830, 4256, 3915, 4490, 4103, 3831, 4257, 
       3916, 4104, 3832, 4258, 4474, 3917, 4105, 3833, 4259, 3918, 4106, 3834,
        4529, 4260, 3919, 4107, 3835, 4261, 3920, 4108, 4462, 3836, 4262, 
       3921, 4109, 3837, 4263, 3922, 4491, 4110, 3838, 4264, 3923}], 
      LineBox[{3780, 4111, 3839, 4265, 4475, 3924, 4112, 3840, 4266, 3925, 
       4113, 3841, 4530, 4267, 3926, 4114, 3842, 4268, 3927, 4115, 4463, 3843,
        4269, 3928, 4492, 4116, 3844, 4270, 3929, 4493, 4117, 3845, 4271, 
       3930, 4118, 3846, 4272, 4476, 3931, 4119, 3847, 4273, 3932, 4120, 3848,
        4531, 4274, 3933, 4121, 3849, 4275, 3934, 4122, 4464, 3850, 4276, 
       3935, 4123, 3851, 4277, 3936, 4494, 4124, 3852, 4278, 3937}], 
      LineBox[{3794, 4389, 4068, 4390, 4482, 3793, 4387, 4067, 4388, 3792, 
       4385, 4066, 4557, 4386, 3791, 4383, 4065, 4384, 3790, 4381, 4556, 4064,
        4382, 3789, 4379, 4063, 4380, 3788, 4555, 4377, 4062, 4378, 3787, 
       4375, 4061, 4376, 4481, 3786, 4373, 4060, 4374, 3785, 4371, 4059, 4554,
        4372, 3784, 4369, 4058, 4370, 3783, 4367, 4553, 4057, 4368, 3782, 
       4365, 4056, 4366, 3781, 4552, 4363, 4055, 4364, 3938}], 
      LineBox[{3808, 4417, 4082, 4418, 4484, 3807, 4415, 4081, 4416, 3806, 
       4413, 4080, 4563, 4414, 3805, 4411, 4079, 4412, 3804, 4409, 4562, 4078,
        4410, 3803, 4407, 4077, 4408, 3802, 4561, 4405, 4076, 4406, 3801, 
       4403, 4075, 4404, 4483, 3800, 4401, 4074, 4402, 3799, 4399, 4073, 4560,
        4400, 3798, 4397, 4072, 4398, 3797, 4395, 4559, 4071, 4396, 3796, 
       4393, 4070, 4394, 3795, 4558, 4391, 4069, 4392, 3939}], 
      LineBox[{3809, 4153, 3881, 4419, 4485, 3940, 4154, 3882, 4420, 3941, 
       4155, 3883, 4564, 4421, 3942, 4156, 3884, 4422, 3943, 4157, 4465, 3885,
        4423, 3944, 4505, 4158, 3886, 4424, 3945, 4506, 4159, 3887, 4425, 
       3946, 4160, 3888, 4426, 4486, 3947, 4161, 3889, 4427, 3948, 4162, 3890,
        4565, 4428, 3949, 4163, 3891, 4429, 3950, 4164, 4466, 3892, 4430, 
       3951, 4165, 3893, 4431, 3952, 4507, 4166, 3894, 4432, 3953}], 
      LineBox[{3810, 4167, 3895, 4433, 4487, 3954, 4168, 3896, 4434, 3955, 
       4169, 3897, 4566, 4435, 3956, 4170, 3898, 4436, 3957, 4171, 4467, 3899,
        4437, 3958, 4508, 4172, 3900, 4438, 3959, 4509, 4173, 3901, 4439, 
       3960, 4174, 3902, 4440, 4488, 3961, 4175, 3903, 4441, 3962, 4176, 3904,
        4567, 4442, 3963, 4177, 3905, 4443, 3964, 4178, 4468, 3906, 4444, 
       3965, 4179, 3907, 4445, 3966, 4510, 4180, 3908, 4446, 3967}]}}}],
  AspectRatio->1,
  Axes->True,
  Frame->True,
  ImageSize->{225.38462279110905`, Automatic},
  Method->{"TransparentPolygonMesh" -> True, "AxesInFront" -> True},
  PlotRange->{{-8., 56.16958383112092}, {0., 7.810745361864074}},
  PlotRangeClipping->True,
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02]}]], "Output",
 CellChangeTimes->{
  3.5380130666690645`*^9, 3.5380131073203897`*^9, {3.5380131379541416`*^9, 
   3.5380131883430233`*^9}, {3.53801328041929*^9, 3.5380133107610254`*^9}, {
   3.5380133683773212`*^9, 3.5380133896495376`*^9}}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Laplacian", "Section",
 CellChangeTimes->{{3.538052570768531*^9, 3.538052575542804*^9}}],

Cell[BoxData["\[IndentingNewLine]"], "Input",
 CellChangeTimes->{3.538052576594864*^9}]
}, Open  ]]
},
WindowSize->{1016, 566},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
Magnification->1.3000000715255737`,
FrontEndVersion->"8.0 for Microsoft Windows (32-bit) (February 23, 2011)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[579, 22, 9110, 284, 751, "Input"],
Cell[9692, 308, 735, 23, 61, "Output"],
Cell[10430, 333, 904, 27, 62, "Output"],
Cell[11337, 362, 1666, 54, 189, "Output"],
Cell[13006, 418, 2058, 65, 135, "Output"],
Cell[15067, 485, 5514, 169, 213, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[20618, 659, 65, 1, 37, "Input"],
Cell[20686, 662, 959, 33, 64, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[21682, 700, 259, 5, 37, "Input"],
Cell[21944, 707, 226, 5, 39, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[22207, 717, 67, 1, 37, "Input"],
Cell[22277, 720, 994, 35, 91, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[23308, 760, 597, 17, 67, "Input"],
Cell[23908, 779, 1289, 38, 83, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[25234, 822, 1212, 35, 119, "Input"],
Cell[26449, 859, 430, 10, 27, "Message"],
Cell[26882, 871, 1192, 35, 83, "Output"]
}, Open  ]],
Cell[28089, 909, 1283, 38, 119, "Input"],
Cell[29375, 949, 1061, 37, 99, "Input"],
Cell[CellGroupData[{
Cell[30461, 990, 1425, 43, 91, "Input"],
Cell[31889, 1035, 1184, 37, 78, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[33110, 1077, 412, 13, 54, "Input"],
Cell[33525, 1092, 326, 9, 57, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[33888, 1106, 130, 2, 37, "Input"],
Cell[34021, 1110, 1369, 41, 83, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[35427, 1156, 200, 4, 37, "Input"],
Cell[35630, 1162, 1670, 60, 110, "Output"]
}, Open  ]],
Cell[37315, 1225, 769, 23, 61, "Input"],
Cell[CellGroupData[{
Cell[38109, 1252, 121, 2, 37, "Input"],
Cell[38233, 1256, 1933, 67, 159, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[40203, 1328, 266, 6, 37, "Input"],
Cell[40472, 1336, 1418, 46, 69, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[41927, 1387, 395, 11, 37, "Input"],
Cell[42325, 1400, 1939, 59, 86, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[44301, 1464, 62, 1, 37, "Input"],
Cell[44366, 1467, 134, 4, 61, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[44537, 1476, 1154, 30, 61, "Input"],
Cell[45694, 1508, 5703, 173, 205, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[51434, 1686, 153, 5, 37, "Input"],
Cell[51590, 1693, 342, 11, 39, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[51969, 1709, 1317, 40, 106, "Input"],
Cell[53289, 1751, 1068, 32, 62, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[54394, 1788, 129, 2, 37, "Input"],
Cell[54526, 1792, 5728, 172, 193, "Output"]
}, Open  ]],
Cell[60269, 1967, 91, 1, 37, "Input"],
Cell[60363, 1970, 109, 2, 37, "Input"],
Cell[CellGroupData[{
Cell[60497, 1976, 865, 26, 63, "Input"],
Cell[61365, 2004, 398, 14, 61, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[61800, 2023, 128, 2, 37, "Input"],
Cell[61931, 2027, 137, 4, 61, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[62105, 2036, 70, 1, 37, "Input"],
Cell[62178, 2039, 1187, 39, 132, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[63402, 2083, 128, 2, 37, "Input"],
Cell[63533, 2087, 138, 4, 61, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[63708, 2096, 127, 2, 37, "Input"],
Cell[63838, 2100, 823, 24, 64, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[64698, 2129, 630, 19, 61, "Input"],
Cell[65331, 2150, 335, 11, 61, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[65703, 2166, 1779, 54, 176, "Input"],
Cell[67485, 2222, 908, 29, 69, "Output"],
Cell[68396, 2253, 1181, 38, 69, "Output"],
Cell[69580, 2293, 401, 12, 61, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[70018, 2310, 129, 2, 37, "Input"],
Cell[70150, 2314, 183, 6, 39, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[70370, 2325, 144, 3, 37, "Input"],
Cell[70517, 2330, 289, 9, 61, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[70843, 2344, 638, 16, 37, "Input"],
Cell[71484, 2362, 542, 16, 62, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[72063, 2383, 1591, 51, 84, "Input"],
Cell[73657, 2436, 611, 20, 61, "Output"],
Cell[74271, 2458, 847, 28, 62, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[75155, 2491, 1059, 32, 61, "Input"],
Cell[76217, 2525, 835, 27, 62, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[77089, 2557, 436, 12, 37, "Input"],
Cell[77528, 2571, 300, 9, 69, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[77865, 2585, 230, 5, 37, "Input"],
Cell[78098, 2592, 565, 17, 87, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[78700, 2614, 483, 15, 37, "Input"],
Cell[79186, 2631, 827, 26, 97, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[80050, 2662, 301, 9, 37, "Input"],
Cell[80354, 2673, 557, 18, 91, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[80948, 2696, 333, 10, 37, "Input"],
Cell[81284, 2708, 11817, 201, 320, 5491, 96, "CachedBoxData", "BoxData", \
"Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[93138, 2914, 590, 16, 37, "Input"],
Cell[93731, 2932, 209, 6, 70, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[93977, 2943, 383, 9, 69, "Input"],
Cell[94363, 2954, 385, 12, 74, "Output"]
}, Open  ]],
Cell[94763, 2969, 92, 1, 37, "Input"],
Cell[CellGroupData[{
Cell[94880, 2974, 702, 18, 37, "Input"],
Cell[95585, 2994, 1048, 31, 62, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[96670, 3030, 469, 15, 62, "Input"],
Cell[97142, 3047, 450, 15, 62, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[97629, 3067, 129, 2, 37, "Input"],
Cell[97761, 3071, 473, 15, 62, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[98271, 3091, 127, 2, 37, "Input"],
Cell[98401, 3095, 132, 4, 61, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[98570, 3104, 220, 6, 37, "Input"],
Cell[98793, 3112, 87, 2, 37, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[98917, 3119, 351, 10, 37, "Input"],
Cell[99271, 3131, 320, 10, 61, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[99628, 3146, 353, 9, 37, "Input"],
Cell[99984, 3157, 1236, 38, 62, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[101257, 3200, 204, 4, 37, "Input"],
Cell[101464, 3206, 2260, 70, 145, "Output"]
}, Open  ]],
Cell[103739, 3279, 138, 2, 37, "Input"],
Cell[CellGroupData[{
Cell[103902, 3285, 237, 5, 37, "Input"],
Cell[104142, 3292, 286, 7, 80, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[104465, 3304, 127, 2, 80, "Input"],
Cell[104595, 3308, 138, 4, 132, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[104770, 3317, 582, 18, 80, "Input"],
Cell[105355, 3337, 1364, 50, 91, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[106756, 3392, 640, 19, 80, "Input"],
Cell[107399, 3413, 2548, 88, 192, "Output"]
}, Open  ]],
Cell[109962, 3504, 666, 20, 132, "Input"],
Cell[CellGroupData[{
Cell[110653, 3528, 1052, 36, 127, "Input"],
Cell[111708, 3566, 1308, 39, 120, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[113053, 3610, 144, 3, 80, "Input"],
Cell[113200, 3615, 157, 3, 80, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[113394, 3623, 745, 20, 80, "Input"],
Cell[114142, 3645, 375, 6, 80, "Output"]
}, Open  ]],
Cell[114532, 3654, 376, 10, 80, "Input"],
Cell[CellGroupData[{
Cell[114933, 3668, 552, 16, 80, "Input"],
Cell[115488, 3686, 536, 16, 84, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[116061, 3707, 346, 8, 80, "Input"],
Cell[116410, 3717, 542, 16, 84, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[116989, 3738, 551, 14, 80, "Input"],
Cell[117543, 3754, 2120, 57, 215, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[119700, 3816, 1063, 31, 289, "Input"],
Cell[120766, 3849, 2606, 78, 310, "Output"]
}, Open  ]],
Cell[123387, 3930, 1647, 56, 310, "Input"],
Cell[125037, 3988, 95, 1, 80, "Input"],
Cell[CellGroupData[{
Cell[125157, 3993, 100, 1, 198, "Section"],
Cell[125260, 3996, 250, 5, 131, "Text"],
Cell[CellGroupData[{
Cell[125535, 4005, 767, 15, 80, "Input"],
Cell[126305, 4022, 596, 11, 80, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[126938, 4038, 1182, 30, 80, "Input"],
Cell[128123, 4070, 1134, 36, 92, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[129294, 4111, 799, 26, 80, "Input"],
Cell[130096, 4139, 515, 18, 92, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[130648, 4162, 144, 3, 80, "Input"],
Cell[130795, 4167, 304, 10, 132, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[131136, 4182, 1277, 31, 80, "Input"],
Cell[132416, 4215, 552, 8, 80, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[133005, 4228, 513, 11, 80, "Input"],
Cell[133521, 4241, 443, 12, 126, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[134013, 4259, 105, 1, 257, "Section"],
Cell[134121, 4262, 701, 24, 135, "Text"],
Cell[CellGroupData[{
Cell[134847, 4290, 564, 17, 135, "Input"],
Cell[135414, 4309, 289, 9, 221, "Output"]
}, Open  ]],
Cell[135718, 4321, 94, 1, 135, "Input"],
Cell[CellGroupData[{
Cell[135837, 4326, 1631, 46, 308, "Input"],
Cell[137471, 4374, 176179, 2884, 1848, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[313687, 7263, 884, 23, 222, "Input"],
Cell[314574, 7288, 144961, 2349, 1189, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[459584, 9643, 94, 1, 334, "Section"],
Cell[459681, 9646, 87, 1, 222, "Input"]
}, Open  ]]
}
]
*)

(* End of internal cache information *)
